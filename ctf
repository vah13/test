****************************************************************************************************
Screenshot of BSides Vancouver 2018 (Workshop)

Boot2root challenges aim to create a safe environment where you can perform real-world penetration testing on an (intentionally) vulnerable target.
This workshop will provide you with a custom-made VM where the goal is to obtain root level access on it. 
This is a great chance for people who want to get into pentesting but don’t know where to start. *
If this sounds intimidating, don’t worry! During the workshop, we’ll be discussing various methodologies, common pitfalls and useful tools at every step of our pentest.
Requirements:

Laptop capable of running two VMs and has a USB port.
At least 20GB of free space.
VirtualBox pre-installed.
Kali VM
Some familiarity with CLI.


****************************************************************************************************
Screenshot of Trollcave 1.2

<strong>Trollcave</strong> is a vulnerable VM, in the tradition of <a href="https://www.vulnhub.com/">Vulnhub</a> and <a href="https://en.wikipedia.org/wiki/Wargame_(hacking)">infosec wargames</a> in general. You start with a virtual machine which you know nothing about – no usernames, no passwords, just what you can see on the network. In this instance, you'll see a simple community blogging website with a bunch of users. From this initial point, you enumerate the machine's running services and general characteristics and devise ways to gain complete control over it by finding and exploiting vulnerabilities and misconfigurations.
Your first goal is to abuse the services on the machine to gain unauthorised shell access. Your ultimate goal is to read a text file in the <code>root</code> user's home directory <code>root/flag.txt</code>).
This VM is designed to be holistic and fairly down to earth. I wanted to simulate a real attack on a real website rather than just presenting a puzzle box of disparate elements, and I wanted to avoid the more esoteric vulnerable VMisms, like when you have to do signal processing on an MP3 you found to discover a port-knocking sequence. Of course there are always tradeoffs between what's realistic and what's optimally fun/challenging, but I've tried to keep the challenges grounded.
Because this is a VM that you're downloading, importing and booting, one way to achieve this goal would be to mount the VM's hard disk. I haven't encrypted the disk or done anything to prevent this, so if you want to take that route, go ahead. I'm also not offering a prize or anything for completing this VM, so know that it will be entirely pointless.
Because this is a VM running a real operating system with real services, there may be ways to get to <code>root</code> that I did not intend. Ideally, this should be part of the fun, but if they make the box entirely trivial I'd like to know about and fix them – within reason. As of this release, I've installed all the updates available for Ubuntu Server 16.04 LTS, but I cannot and will not attempt to patch this VM against every new Linux kernel exploit that comes out in the future. So there's a hint – you don't have to use a kernel exploit to root this box.
What you will need is a good HTTP intercepting proxy – I recommend <a href="https://portswigger.net/burp">Burpsuite</a> – and a couple of network tools like <code>nmap</code> and <code>nc</code>. You'll also need some virtualisation software – <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a> will be easiest for most people, but KVM and VMWare should also be able to import the <code>.ova</code> file after a bit of fiddling. Once you've imported the VM, put it on the same network as your attacking system (<a href="https://digi.ninja/blog/untrusted_vms.php">preferably don't give it internet access</a>) and start hacking!
You can grab the <code>.ova</code> file here (<a href="https://drive.google.com/open?id=1DhbVvT-r3yKWXXjcH70oj5yEZ88TDsky">929MB</a>) (updated 2018-03-19). Let me know <a href="https://davidyat.es/cdn-cgi/l/email-protection#3e5a7e48575a475f4a105b4d014d4b5c545b5d4a036a4c5152525d5f485b">what you think</a>.

****************************************************************************************************
Screenshot of Pinky's Palace v2

<strong>Description</strong>: A realistic Boot2Root. Gain access to the system and read the /root/root.txt
<strong>Note</strong>: Only works in VMware
<strong>Network</strong>: Bridged/DHCP
<strong>Questions</strong>: Tweeeeeeter @Pink_P4nther
<strong>File</strong>: OVF
<strong>Difficulty to get entry</strong>: easy/intermediate
<strong>Difficulty to get root</strong>: intermediate/hard
<hr/>
<strong>Note From VulnHub</strong>: Wordpress will not render correctly. You will need to alter your host file with the IP shown on the console: <code>echo 192.168.x.x pinkydb | sudo tee -a /etc/hosts</code>

****************************************************************************************************
Screenshot of JIS-CTF VulnUpload

VM Name: JIS-CTF : VulnUpload
Difficulty: Beginner
Description: There are five flags on this machine. Try to find them. It takes 1.5 hour on average to find all flags.

****************************************************************************************************
Screenshot of Gemini Inc 1

Name: Gemini Inc v1
Date release: 2018-01-09
Author: 9emin1
Series: Gemini Inc
<hr/>
<h2>Description:</h2>
I have decided to create vulnerable machines that replicate the vulnerabilities and difficulties I’ve personally encountered during my last year (2017) of penetration testing.
Some of the vulnerabilities require the “Think out of the box (fun)” mentality and some are just plain annoyance difficulties that require some form of automation to ease the testing.
GeminiInc v1 has been created that replicate an issue that I’ve encountered which was really interesting and fun to tackle, I hope it will be fun for you guys as well.
Adding a little made-up background story to make it more interesting...
<hr/>
<h2>Introduction:</h2>
Gemini Inc has contacted you to perform a penetration testing on one of their internal system. This system has a web application that is meant for employees to export their profile to a PDF. Identify any vulnerabilities possible with the goal of complete system compromise with root privilege. To demonstrate the level of access obtained, please provide the content of flag.txt located in the root directory as proof.
Tweet me your writeup @ https://twitter.com/sec_9emin1
<hr/>
<h2>File Information:</h2>
Filename: Gemini-Pentest-v1.zip
File size: 3283684247
SHA 1: 47ca8fb27b9a4b59aa6c85b8b1fe4df564c19a1e
<hr/>
<h2>Virtual Machine:</h2>
Format: Virtual Machine (VMWare)
Operating System: Debian
<hr/>
<h2>Networking:</h2>
DHCP Service : Enabled
IP Address: Automatically Assigned
<hr/>
More information can be obtained from my blog post on this vulnerable machine:
https://scriptkidd1e.wordpress.com/
Intended solution will be provided some time after this has been published:
https://scriptkidd1e.wordpress.com/geminiinc-v1-vm-walkthrough/
The VM has been tested on the following platform and is working:

Mac OSX VMWare Fusion
Windows 10 VMWare Player
Windows 10 VMWare Workstation

It should work with any virtual machine player as well. It will be able to obtain an I.P Address with DHCP so no additional configuration is required. Simply import the downloaded VM and you are good to go.

****************************************************************************************************
Screenshot of Bob 1.0.1

Difficulty: Beginner/Intermediate
<hr/>
Bob is my first CTF VM that I have ever made so be easy on me if it's not perfect. 
The Milburg Highschool Server has just been attacked, the IT staff have taken down their windows server and are now setting up a linux server running Debian. Could there a few weak points in the new unfinished server? 
<hr/>
Your Goal is to get the flag in / 
Hints: Remember to look for hidden info/files

****************************************************************************************************
Screenshot of Pinky's Palace v1

Box Info: Tested on VirtualBox using DHCP Host-only &amp; Bridged Adapter types.
File Type: OVA
<h2>Background:</h2>
Pinky is creating his very own website! He has began setting up services and some simple web applications
<h2>Description:</h2>
A realistic Boot2Root box. Gain access to the system and read the root.txt.
<hr/>
Difficulty to get user: Easy/Intermediate
Difficulty to get root: Easy/Intermediate
<hr/>
If you need a hint or have a question contact me on twitter: @Pink_P4nther

****************************************************************************************************
Screenshot of Damn Vulnerable ARM Router (DVAR) tinysploitARM

<h2>THE ARM IoT EXPLOIT LABORATORY - Damn Vulnerable ARM Router (DVAR)</h2>
DVAR is an emulated Linux based ARM router running a vulnerable web server
that you can sharpen your ARM stack overflow skills with.
DVAR runs in the tinysploitARM VMWare VM under a fully emulated QEMU ARM
router image.
Simply extract the ZIP file and launch the VM via tinysploitARM.vmx.
After starting up, the VM's IP address and default URL shall be displayed
on the console. Using your host computer's browser, navigate to the URL and
follow the instructions and clues. The virtual network adapter is set to
NAT mode.
Your goal is to write a working stack overflow exploit for the web server
running on the DVAR tinysploitARM target.
SHA256: 1f2bdd9ae4e44443dbb4bf9062300f1991c47f609426a1d679b8dcd17abb384c
DVAR started as an optional preparatory exercise for the ARM IoT Exploit Lab.
<h2>UPCOMING ARM IoT EXPLOIT LABORATORY TRAINING</h2>
RECON Brussels 2018 (4 day) January 29-Feb 1
https://recon.cx/2018/brussels/training/trainingexploitlab.html
Offensivecon Berlin 2018 (4 day) February 12-15
https://www.offensivecon.org/trainings/2018/the-arm-iot-exploit-laboratory-saumil-shah.html
Cansecwest Vancouver 2018 (4 day) March 10-13
https://cansecwest.com/dojos/2018/exploitlab.html
SyScan360 Singapore 2018 (4 day) March 18-21
https://www.coseinc.com/syscan360/index.php/syscan360/details/SYS1842#regBox
<h2>Helpful material</h2>
If you are new to the world of ARM exploitation, I highly recommend Azeria's
excellent tutorials on ARM Assembly, ARM Shellcode and the basics of ARM
exploitation.
https://azeria-labs.com/ Twitter: @Fox0x01
And these are three general purpose concepts oriented tutorials that every
systems enthusiast must know:
Operating Systems - A Primer:
http://www.slideshare.net/saumilshah/operating-systems-a-primer
How Functions Work:
http://www.slideshare.net/saumilshah/how-functions-work-7776073
Introduction to Debuggers:
http://www.slideshare.net/saumilshah/introduction-to-debuggers
<h2>EXPLOIT LABORATORY BLOG:</h2>
http://blog.exploitlab.net/
Saumil Shah
@therealsaumil

****************************************************************************************************
Screenshot of BlackMarket 1

<h2>VM Name:</h2>
BlackMarket
<h2>VM Description:</h2>
BlackMarket VM presented at Brisbane SecTalks BNE0x1B (28th Session) which is focused on students and other InfoSec Professional. This VM has total 6 flag and one r00t flag. Each Flag leads to another Flag and flag format is flag{blahblah}.
Shoutout to @RobertWinkel and @dooktwit for hosting at SecTalk Brisbane
If you get stuck in rabbit hole and need hints hit me up on twitter.
Have fun!
<h2>VM Difficulty Level:</h2>
Beginner/Intermediate
<h2>What will you learn?</h2>
Learn about how to enumerate your target and join dots in order to pwn this VM.
<h2>VM Tested:</h2>
VMware Player
VirtualBox
<h2>Networking:</h2>
DHCP Enabled
<h2>Author:</h2>
AcEb0mb3R
Twitter: @Acebomber911

****************************************************************************************************
Screenshot of Nineveh v0.3

It was a part of HackTheBox platform.

****************************************************************************************************
Screenshot of DerpNStink 1

<h2>Difficulty:</h2>
Beginner
<h2>Description:</h2>
Mr. Derp and Uncle Stinky are two system administrators who are starting their own company, DerpNStink. Instead of hiring qualified professionals to build up their IT landscape, they decided to hack together their own system which is almost ready to go live...
<h2>Instructions:</h2>
This is a boot2root Ubuntu based virtual machine. It was tested on VMware Fusion and VMware Workstation12 using DHCP settings for its network interface. It was designed to model some of the earlier machines I encountered during my OSCP labs also with a few minor curve-balls but nothing too fancy. Stick to your classic hacking methodology and enumerate all the things!
Your goal is to remotely attack the VM and find all 4 flags eventually leading you to full root access. Don't forget to #tryharder
Example: flag1(AB0BFD73DAAEC7912DCDCA1BA0BA3D05). Do not waste time decrypting the hash in the flag as it has no value in the challenge other than an identifier.
<h2>Contact</h2>
Hit me up if you enjoy this VM!
Twitter: @securekomodo
Email: <a class="__cf_email__" data-cfemail="bbd3dad8d0dec9d9c9c2dad5fbcbc9d4cfd4d5d6dad2d795d8d4d6" href="/cdn-cgi/l/email-protection">[email protected]</a>

****************************************************************************************************
Screenshot of W1R3S 1.0.1

You have been hired to do a penetration test on the W1R3S.inc individual server and report all findings. They have asked you to gain root access and find the flag (located in /root directory).
Difficulty to get a low privileged shell: Beginner/Intermediate
Difficulty to get privilege escalation: Beginner/Intermediate
About: This is a vulnerable Ubuntu box giving you somewhat of a real world scenario and reminds me of the OSCP labs.
If you need any hints, pointers or have questions feel free to email me: specterinthewires at gmail dot com
Virtual Machine: VMware Workstation

****************************************************************************************************
Screenshot of USV 2017

<strong>Difficulty</strong>: Beginner/Intermediate
<strong>About</strong>: This is the VM used in the online qualifications phase of the CTF-USF 2017 (Capture the Flag - Suceava University) contest which addresses to universities students. The VM was created by Oana Stoian (@gusu_oana) and Teodor Lupan (@theologu) from Safetech Innovations, the technical partner of the contest.
<strong>Instructions</strong>: The CTF is a virtual machine and has been tested in Virtual Box. The network interface of the virtual machine will take it's IP settings from DHCP.
<strong>Flags</strong>: There are 5 flags that should be discovered in form of: Country_name Flag: [md5 hash]. In CTF platform of the CTF-USV competition there was a hint available for each flag, but accessing it would imply a penalty. If you need any of those hints to solve the challenge, send me a message on Twitter @gusu_oana and I will be glad to help. The countries that should be tracked for flags are: Croatia, France, Italy, Laos, Phillippines

****************************************************************************************************
Screenshot of ARM Lab 1

<h2>ARM Lab Environment</h2>
Let’s say you got curious about ARM assembly or exploitation and want to write your first assembly scripts or solve some ARM challenges. For that you either need an Arm device (e.g. Raspberry Pi), or you set up your lab environment in a VM for quick access.
This page contains 3 levels of lab setup laziness.

Manual Setup – Level 0
Ain’t nobody got time for that – Level 1
Ain’t nobody got time for that – Level 2

<hr/>
<h2>Manual Setup – Level 0</h2>
If you have the time and nerves to set up the lab environment yourself, I’d recommend doing it. You might get stuck, but you might also learn a lot in the process. Knowing how to emulate things with QEMU also enables you to choose what ARM version you want to emulate in case you want to practice on a specific processor.
<a href="https://azeria-labs.com/emulate-raspberry-pi-with-qemu/">How to emulate Raspbian with QEMU</a>.
<hr/>
<h2>Ain’t nobody got time for that – Level 1</h2>
Welcome on laziness level 1. I see you don’t have time to struggle through various linux and QEMU errors, or maybe you’ve tried setting it up yourself but some random error occurred and after spending hours trying to fix it, you’ve had enough.
Don’t worry, here’s a solution: <a href="https://github.com/hugsy">Hugsy</a> (aka creator of GEF) released ready-to-play Qemu images for architectures like ARM, MIPS, PowerPC, SPARC, AARCH64, etc. to play with. All you need is <a href="http://www.qemu.org/">Qemu</a>. Then download the link to your image, and unzip the archive.
<a href="https://blahcat.github.io/2017/06/25/qemu-images-to-play-with/">Become a ninja on non-x86 architectures</a>
<hr/>
<h2>Ain’t nobody got time for that – Level 2</h2>
Let me guess, you don’t want to bother with any of this and just want a ready-made Ubuntu VM with all QEMU stuff setup and ready-to-play. Very well. The first Azeria-Labs VM is ready. It’s a naked Ubuntu VM containing an emulated ARMv6l.
This VM is also for those of you who tried emulating ARM with QEMU but got stuck for inexplicable linux reasons. I understand the struggle, trust me.
Download here:

Full on GDrive: <a href="https://drive.google.com/file/d/1uX9fRUX-IHitQVD43QUsz9Aocy8pJ8XK/view?usp=sharing">https://drive.google.com/file/d/1uX9fRUX-IHitQVD43QUsz9Aocy8pJ8XK/view?usp=sharing</a>
Full on Mega.nz: <a href="https://mega.nz/#!1K4k1T5a!hGNAUNbTktPB69dOMRpOT-y2znlIB8LQ1twTp90Uu8s">https://mega.nz/#!1K4k1T5a!hGNAUNbTktPB69dOMRpOT-y2znlIB8LQ1twTp90Uu8s</a>
Split on Mega.nz: <a href="https://mega.nz/#F!AO5j0ZCJ!ltZHLnXtpLccI4kkr-j2Xw">https://mega.nz/#F!AO5j0ZCJ!ltZHLnXtpLccI4kkr-j2Xw</a>
Split on GDrive: <a href="https://drive.google.com/drive/folders/1p_XdsiVVSGk-LLtSFOov1H1y8z7g_SeK?usp=sharing">https://drive.google.com/drive/folders/1p_XdsiVVSGk-LLtSFOov1H1y8z7g_SeK?usp=sharing</a>

<h4>VMware image size:</h4>

Downloaded zip: Azeria-Lab-v1.7z (4.62 GB)
MD5: C0EA2F16179CF813D26628DC792C5DE6
SHA1: 1BB1ABF3C277E0FD06AF0AECFEDF7289730657F2


Extracted VMware image: ~16GB

<strong>Password</strong>: azerialabs
<h4>Host system specs:</h4>

Ubuntu 16.04.3 LTS 64-bit (kernel 4.10.0-38-generic) with Gnome 3
HDD: ~26GB (ext4) + ~4GB Swap
RAM (configured): 4GB

<h4>QEMU setup:</h4>

Raspbian 8 (27-04-10-raspbian-jessie) 32-bit (kernel qemu-4.4.34-jessie)
HDD: ~8GB
RAM: ~256MB
Tools: GDB (Raspbian 7.7.1+dfsg-5+rpi1) with GEF

I’ve included a Lab VM Starter Guide and set it as the background image of the VM. It explains how to start up QEMU, how to write your first assembly program, how to assemble and disassemble, and some debugging basics. Enjoy!

****************************************************************************************************
Screenshot of Cyberry 1

<h2>Instructions</h2>
The boot2root is a Debian virtual machine and has been fully tested using VMWare Workstation 12. The network interface of the virtual machine will take it's IP settings from DHCP.
<h2>Level</h2>
Beginner to Intermediate.
<h2>Description</h2>
Cyberry are eagerly anticipating the release of their new "Berrypedia" website, a life-long project which offers knowledge and insight into all things Berry!
<h2>Challenge</h2>
The challenge is to get root. Rooting this box will require a wide variety of skills and techniques, and you may find that there is more than one way to achieve this. Whilst the boot2root itself can technically be completed offline, you will almost certainly require some form of internet access (Search engine) at your disposal to move forward past some of the challenges. If you get completely stuck please tweet us @cyberrysec for a hint.
We really look forward to reading the walkthroughs on vulnhub of how you achieved root :-)

****************************************************************************************************
Screenshot of Basic Pentesting 1

This is a small boot2root VM I created for my university’s cyber security group. It contains multiple remote vulnerabilities and multiple privilege escalation vectors. I did all of my testing for this VM on VirtualBox, so that’s the recommended platform. I have been informed that it also works with VMware, but I haven’t tested this personally.
This VM is specifically intended for newcomers to penetration testing. If you’re a beginner, you should hopefully find the difficulty of the VM to be just right. 
Your goal is to remotely attack the VM and gain root privileges. Once you’ve finished, try to find other vectors you might have missed! If you enjoyed the VM or have questions, feel free to contact me at:
<a class="__cf_email__" data-cfemail="7c16130f151d143c0a0852191809" href="/cdn-cgi/l/email-protection">[email protected]</a>
If you finished the VM, please also consider posting a writeup! Writeups help you internalize what you worked on and help anyone else who might be struggling or wants to see someone else’s process. I look forward to reading them!

****************************************************************************************************
Screenshot of Homeless 1

<h1>Introduction</h1>
I'm really interesting about security, love to learn new technologies and play CTF sometime. I’ve been enjoying creating hacking challenges for the security community. This is my first Challenge of boot2root, I was created some web challenge and solved others.I hope you will get some knowledges about my challenge. Thanks u Laiwon . I love you.
<hr/>
<h1>Difficulty</h1>
Difficulty level to get limited shell: Intermediate or advanced
Difficulty level for privilege escalation: Depend on You.
<hr/>
<h1>Goal</h1>
You will be required to break into target server,exploit and root the machine, and retrieve the flag. The flag will contain more information about my private info..
<hr/>
<h1>Hints</h1>
This challenge is not for beginners. There is a relevant file on this machine that plays an important role in the challenge, do not waste your time trying to de-obfuscate the file, If you got big stuck, Try with Password start with "sec*" with nice wordlist. Ok.. Try Harder!.. 

Homeless.zip (507MB) https://mega.nz/#!5aIB1IJZ!7N2HfO_HL_134-DMcbXKvVtG4aaakR_JMsc-T7Jtsjc

~Happy Hacking!...

****************************************************************************************************
Screenshot of g0rmint 1

It is based on a real world scenario I faced while testing for a client's site. Dedicated to Aunty g0rmint who is fed up of this government (g0rmint).
Does anyone need to know about that Aunty to root the CTF? No
The CTF is tested on Vmware and working well as expected.
Difficulty level to get limited shell: Intermediate or advanced
Difficulty level for privilege escalation: No idea
Give me feed back @nomanriffat

****************************************************************************************************
Screenshot of Depth 1

Many times while conducting a pentest, I need to script something up to make my life easier or to quickly test an attack idea or vector. Recently I came across an interesting command injection vector on a web application sitting on a client's internet-facing estate. There was a page, running in Java, that allowed me to type arbitrary commands into a form, and have it execute them. While developer-provided webshells are always nice, there were a few caveats. The page was expecting directory listing style output, which was then parsed and reformatted. If the output didn't match this parsing, no output to me. Additionally, there was no egress. ICMP, and all TCP/UDP ports including DNS were blocked outbound.
I was still able to leverage the command injection to compromise not just the server, but the entire infrastructure it was running on. After the dust settled, the critical report was made, and the vulnerability was closed, I thought the entire attack path was kind of fun, and decided to share how I went about it. Since I enjoy being a free man and only occasionally visit prisons, I've created a simple boot2root style VM that has a similar set of vulnerabilities to use in a walkthrough.

****************************************************************************************************
Screenshot of The Ether EvilScience (v1.0.1)

<h2>Introduction</h2>
Lately, I’ve been enjoying creating hacking challenges for the security community. This new challenge encapsulates a company, entitled – The Ether, who has proclaimed an elixir that considerably alters human welfare. The CDC has become suspicious of this group due to the nature of the product they are developing.
<h2>The Goal</h2>
The goal is to find out what The Ether is up to. You will be required to break into their server, root the machine, and retrieve the flag. The flag will contain more information about The Ether’s ominous operations regarding this medicine.
<h2>Any Hints?</h2>
This challenge is not for beginners. There is a relevant file on this machine that plays an important role in the challenge, do not waste your time trying to de-obfuscate the file, I say this to keep you on track. This challenge is designed test you on multiple areas and it’s not for the feint of heart!
<h2>Last Words</h2>
Whatever you do, do not give up! Exhaust all of your options! Looking forward to have OSCPs take this challenge. As always, good luck, have fun, God bless, and may the s0urce be with you.

****************************************************************************************************
Screenshot of Bulldog 1

Bulldog Industries recently had its website defaced and owned by the malicious German Shepherd Hack Team. Could this mean there are more vulnerabilities to exploit? Why don't you find out? :) 
This is a standard Boot-to-Root. Your only goal is to get into the root directory and see the congratulatory message, how you do it is up to you! 
Difficulty: Beginner/Intermediate, if you get stuck, try to figure out all the different ways you can interact with the system. That's my only hint ;)
Made by Nick Frichette (frichetten.com) Twitter: @frichette_n
I'd highly recommend running this on Virtualbox, I had some issues getting it to work in VMware. Additionally DHCP is enabled so you shouldn't have any troubles getting it onto your network. It defaults to bridged mode, but feel free to change that if you like.

****************************************************************************************************
Screenshot of zico2 1

Zico's Shop: A Boot2Root Machine intended to simulate a real world cenario
Disclaimer:
By using this virtual machine, you agree that in no event will I be liable for any loss or damage including without limitation, indirect or consequential loss or damage, or any loss or damage whatsoever arising from loss of data or profits arising out of or in connection with the use of this software.
TL;DR - You are about to load up a virtual machine with vulnerabilities. If something bad happens, it's not my fault.
Level: Intermediate
Goal: Get root and read the flag file
Description: 
Zico is trying to build his website but is having some trouble in choosing what CMS to use. After some tries on a few popular ones, he decided to build his own. Was that a good idea? 
Hint: Enumerate, enumerate, and enumerate!
Thanks to: VulnHub
Author: Rafael (@rafasantos5)

****************************************************************************************************
Screenshot of Xtreme Vulnerable Web Application (XVWA) 1

<h1>Xtreme Vulnerable Web Application (XVWA)</h1>
XVWA is a badly coded web application written in PHP/MySQL that helps security enthusiasts to learn application security. It’s not advisable to host this application online as it is designed to be “Xtremely Vulnerable”. We recommend hosting this application in local/controlled environment and sharpening your application security ninja skills with any tools of your own choice. It’s totally legal to break or hack into this. The idea is to evangelize web application security to the community in possibly the easiest and fundamental way. Learn and acquire these skills for good purpose. How you use these skills and knowledge base is not our responsibility. 
XVWA is designed to understand following security issues. 

SQL Injection – Error Based 
SQL Injection – Blind
OS Command Injection
XPATH Injection 
Formula Injection
PHP Object Injection 
Unrestricted File Upload
Reflected Cross Site Scripting 
Stored Cross Site Scripting 
DOM Based Cross Site Scripting 
Server Side Request Forgery (Cross Site Port Attacks) 
File Inclusion 
Session Issues 
Insecure Direct Object Reference 
Missing Functional Level Access Control 
Cross Site Request Forgery (CSRF)
Cryptography 
Unvalidated Redirect &amp; Forwards
Server Side Template Injection


****************************************************************************************************
Screenshot of Vulnerable Docker 1

<h2>Down By The Docker</h2>
Ever fantasized about playing with docker misconfigurations, privilege escalation, etc. within a container?
Download this VM, pull out your pentest hats and get started
We have 2 Modes:
- HARD: This would require you to combine your docker skills as well as your pen-testing skills to achieve host compromise.
- EASY: Relatively easier path, knowing docker would be enough to compromise the machine and gain root on the host machines.
We have planted 3 flag files across the various machines / systems that are available to you. Your mission if you choose to accept would be as following:
<ol>

Identify all the flags (2 in total: flag_1 and flag_3) (flag_2 was inadvertently left out)


Gain id=0 shell access on the host machine.

</ol>

****************************************************************************************************
Screenshot of RickdiculouslyEasy 1

This is a fedora server vm, created with virtualbox.
It is a very simple Rick and Morty themed boot to root.
There are 130 points worth of flags available (each flag has its points recorded with it), you should also get root.
It's designed to be a beginner ctf, if you're new to pen testing, check it out!

****************************************************************************************************
Screenshot of Pentester Lab S2-052

This exercise covers the exploitation of the Struts S2-052 vulnerability

****************************************************************************************************
Screenshot of LazySysAdmin 1

Name: LazySysAdmin 1.0
<hr/>
Author: Togie Mcdogie
Twitter: @TogieMcdogie 
<hr/>
[Description]
Difficulty: Beginner - Intermediate
Boot2root created out of frustration from failing my first OSCP exam attempt.
Aimed at:
<pre><code>      &gt; Teaching newcomers the basics of Linux enumeration
      &gt; Myself, I suck with Linux and wanted to learn more about each service whilst creating a playground for others to learn
</code></pre>
Special thanks to @RobertWinkel @dooktwit for hosting LazySysAdmin at Sectalks Brisbane BNE0x18
<hr/>
[Lore]
LazySysadmin - The story of a lonely and lazy sysadmin who cries himself to sleep
<hr/>
[Tested with]

Virtualbox
Vnware Workstation player

<hr/>
[Preffered setup]
Host only networking
[Hints]

Enumeration is key
Try Harder
Look in front of you
Tweet @togiemcdogie if you need more hints

<hr/>
[Other]

What could you of done to speed up the enumeration process?
Are there any obvious things that you missed, which you shouldnt of missed?
Did you learn anything interesting?
What have you added to your enumeration process to prevent you from wasting time?

<hr/>
[Checksum]

Name: Lazysysadmin.zip
Size: 501925265 bytes (478 MB)
SHA256: DBAC88A2E76FD5A6693A2890030DD3BE0DC2C09F30B43A79BE8AB7A23B708EF5


****************************************************************************************************
Screenshot of /dev/random k2

<pre><code> ____  __.________
|    |/ _|\_____  \
|      &lt;   /  ____/
|    |  \ /       \
|____|__ \\_______ \ Â·VMÂ·
        \/        \/

+----------------------------------------------------------------------------+
|  cReaTeD....: sagi- (@s4gi_)      |  DaTe......: 2017-07-26                |
|  oS.........: Linux               |  oBJecTiVe.: Get /root/flag.txt        |
|                                   |  TeSTeR....: @leonjza                  |
+----------------------------------------------------------------------------+
|  VM DesCriPtiOn:                                                           |
|  This challenge was built to promote the Windows / Linux Local Privilege   |
|  Escalation workshop. A free of charge 3-day workshop that was created as  |
|  a give back to the community initiative.                                  |
|                                                                            |
|  &lt;3 sagi-                                                                  |
+----------------------------------------------------------------------------+
| SSH AccEsS DeTaiLs:                                                        |
| Username: user                                                             |
| Password: password                                                         |
+----------------------------------------------------------------------------+
</code></pre>

****************************************************************************************************
Screenshot of H.A.S.T.E 1

This vulnerable-by-design box depicts a hacking company known as H.A.S.T.E, or Hackers Attack Specific Targets Expeditiously, capable of bringing down any domains on their hit list.
I would like to classify this challenge with medium difficulty, requiring some trial and error before a successful takeover can be attained.

****************************************************************************************************
Screenshot of HackerHouse BSides London 2017

Hacker House are community sponsors at this year’s BSides London 2017 and, to celebrate, we have an exploit challenge for you. A key date in the UK security scene, it offers an alternative technical conference for the hackers and tech geeks to share war stories and learn. We are providing a challenge lab designed especially for the conference that attendees can sink disassemblers into. If you aren’t at the event, you can also hack along at home, but remember that prizes for solutions can only be claimed at our stand during the event! The challenge is provided in ISO format which you can boot in VirtualBox or any similar virtualisation software, heck you can even run it on an ATM if you like, but this is unsupported. If you solve our little brain teasing conundrums and beat the system to get root, the first three successful solutions presented to us at our stand can claim one of our awesome hoodies, check them out in our shop! This challenge is open to individuals, but if you do decide to team up, then let us know as only one prize can be claimed per solution. We are also giving several t-shirts away during the raffle so make sure you get your tickets!
Our challenge will test your elite hacking skills and requires web application, reverse engineering, cryptography and exploit abilities. It shouldn’t take the competent skilled hacker too much time, but if you do struggle then watch our social media feeds during the event for some tips to this adventure. You should run the challenge in Host-Only networking mode and on successful boot you will be presented with a console, similar to the one shown at the end of this post. You should solve the challenge from a network perspective, only solutions using this route will be accepted for prizes (unless they are really cool!).
The goal of the challenge is to hack the ISO, level up your skills and get root, come and show us how you did it if you want to claim your prize! If you are struggling with the configuration of our challenge, you can check out our training course free module, which details steps for configuring a similar lab. You can find details and upcoming dates of our training here.
Happy hacking and remember sharing is caring so post (tweet us @myhackerhouse!) or email a solution and let us know about it after the event. We will share links to the best of them on this blog! May the force be with you, young padawan, and remember that hacking isn’t just a skill – it’s a survival trade.

****************************************************************************************************
Screenshot of Game of Thrones CTF 1

<h1>Game of Thrones Hacking CTF</h1>
<blockquote>
This is a challenge-game to measure your hacking skills. Set in Game of Thrones fantasy world.
</blockquote>
<hr/>
<strong>Goal</strong>:
Get the 7 kingdom flags and the 4 extra content flags (3 secret flags + final battle flag). There are 11 in total.
<strong>Rules/guidelines to play</strong>:

Start your conquer of the seven kingdoms
You'll need hacking skills, no Game of Thrones knowledge is required. But if you play, it may contains spoilers of the TV series
Difficulty of the CTF: Medium-High
Don't forget to take your map (try to find it). It will guide you about the natural flag order to follow over the kingdoms
Listen CAREFULLY to the hints. If you are stuck, read the hints again!
Powerful fail2ban spells were cast everywhere. Bruteforce is not an option for this CTF (2 minutes ban penalty)
The flags are 32 chars strings. Keep'em all! you'll need them

<strong>Requirements/starting guide</strong>:

Import the Linux based CTF challenge virtual machine (OVA file)
OVA file is compatible with Oracle Virtualbox and Vmware
The challenge vm needs 1 cpu and 1512mb RAM to work properly
The challenge vm has its network configured by default as bridge. It will take an IP from the DHCP of your network

<strong>Downloading challenge CTF vm</strong>:

<a href="https://mega.nz/#!EcgHBB4b!UvbxukV_Po0BOALwqyzxqdpxSfPkIzuxiNqEEVgDy8Q">Download Link 1</a> (Mega)
<a href="https://www.dropbox.com/s/q3cv44rm61yella/Game%20of%20Thrones%20CTF%201.0.ova?dl=0">Mirror 1</a> (Dropbox)

<strong>Troubleshooting</strong>

Vmware:
If you get a warning/error importing machine, press "Retry" and it will be imported flawlessly
Oracle Virtualbox
It's recommended to use "Import Appliance" menu option instead of double click on OVA file
If you get an error regarding network, just select your network interface

<h3>Good luck, the old gods and the new will protect you!</h3>
<hr/>
<pre><code> _____                      ___    _____ _                       
|   __|___ _____ ___    ___|  _|  |_   _| |_ ___ ___ ___ ___ ___ 
|  |  | .'|     | -_|  | . |  _|    | | |   |  _| . |   | -_|_ -|
|_____|__,|_|_|_|___|  |___|_|      |_| |_|_|_| |___|_|_|___|___|
</code></pre>
<hr/>
<strong>Designed by/Credits</strong>

Óscar Alfonso (<a href="https://github.com/OscarAkaElvis">OscarAkaElvis</a> or <a href="https://github.com/v1s1t0r1sh3r3">v1s1t0r</a>)
Contact: [<a class="__cf_email__" data-cfemail="394f084a084d094b17084a17510a4b0a795e54585055175a5654" href="/cdn-cgi/l/email-protection">[email protected]</a>]
Thanks to the beta testers, specially to j0n3, Kal3l and masAcre
Version 1.0 (September 2017)


****************************************************************************************************
Screenshot of Dina 1.0.1

Welcome to Dina 1.0.1
<pre><code>________                                                _________
\________\--------___       ___         ____----------/_________/
    \_______\----\\\\\\   //_ _ \\    //////-------/________/
        \______\----\\|| (( ~|~ )))  ||//------/________/
            \_____\---\\ ((\ = / ))) //----/_____/
                 \____\--\_)))  \ _)))---/____/
                       \__/  (((     (((_/
                          |  -)))  -  ))
</code></pre>
This is my first Boot2Root - CTF VM. I hope you enjoy it.
if you run into any issue you can find me on Twitter: @touhidshaikh22
<strong>Contact</strong>: touhidshaikh22 at gmaill.com &lt;- Feel Free to write mail
<strong>Website</strong>: http://www.touhidshaikh.com
<strong>Goal</strong>: /root/flag.txt
<strong>Level</strong>: Beginner (IF YOU STUCK ANYwhere PM me for HINT, But I don't think need any help).
<strong>Download</strong>: https://drive.google.com/file/d/0B1qWCgvhnTXgNUF6Rlp0c3Rlb0k/view
<strong>Try harder!</strong>: If you are confused or frustrated don't forget that enumeration is the key!
<strong>Feedback</strong>: This is my first boot2root - CTF Virtual Machine, please give me feedback on how to improve!
<strong>Tested</strong>: This VM was tested with:
<pre><code>Virtual Box 5.X
</code></pre>
<strong>Networking</strong>: DHCP service: Enabled
<pre><code>**IP address**: Automatically assign
</code></pre>
<strong>Fixing</strong>:
<pre><code>Some challenge issue reported by @eliot
</code></pre>
<em>Looking forward to the write-ups!</em>

****************************************************************************************************
Screenshot of covfefe 1

Covfefe is my Debian 9 based B2R VM, originally created as a CTF for SecTalks_BNE. It has three flags.
It is intended for beginners and requires enumeration then [spoiler]!

****************************************************************************************************
Screenshot of C0m80 1

<h2>C0m80 Boot2Root</h2>
https://3mrgnc3.ninja/2017/09/c0m80/
<hr/>
<h2>About</h2>
This is my third public Boot2Root, This one is intended to be quite difficult compared to the last two. 
But again, that being said, it will depend on you how hard it is :D 
The theme with this one is all about 'enumeration, enumeration, enumeration', lateral thinking, and how to "combine" vulnerabilities in order to exploit a system.
<hr/>
<h2>Important Note</h2>
Once you have an IP insert it into your attack system /etc/hosts like this:
<code>[dhcp-ip-address] C0m80.ctf</code>
This VM will probably be different to other challenges you may have come across. With C0m80 You will be required to log in locally in the VirtualBox console window at some point. This, I know, may 'rile' some of the purists out there that say you should be able to compromise a boot2root fully remotely over a network.
I agree to that in principle, and in this case I had intended to allow vnc or xrdp access. Alas, due to compatibility problems I had to make a compromise in this area in order to get the challenge published sooner rather than later.
It should be obvious at what point you need to log in. So when that time comes just pretend you are using remote desktop. ;D
Sorry, I hope you can forgive me. 
<hr/>
<h2>Difficulty Rating</h2>
[Difficult]
but depends on you really
<hr/>
<h2>Goal</h2>
There is only one goal here. Become God on the system and read the root flag.
I Hope You Enjoy It.
<hr/>
<h2>Download Link</h2>
https://3mrgnc3.ninja/files/C0m80_3mrgnc3_v1.0.ova
<hr/>
<h2>Details</h2>

File: C0m80_3mrgnc3-v1.0.ova 
OS: WondawsXP ;D 
VM Type: VirtualBox 
IP Address: DHCP 
Size: 2.7 GB 

<hr/>
<h2>Walkthroughs</h2>
Please leave feedback and comments below. Including any info on walkthroughs anyone wishes to publish, or bugs people find in the VM Image. 
Alternatively email me at 3mrgnc3 at techie dot com

****************************************************************************************************
Screenshot of Born2Root 1

When you see the ascii text that mean Born2Root's CTF challenge Is UP


Hack it , reach root and capture the flag.


Born2root is based on debian 32 bits so you can run it even if Intel VT-X isn't installed .


Enumeration is the key.


Level: Intermediate


I hope you will enjoy it !!

****************************************************************************************************
Screenshot of BTRSys v2.1

Machine Name: BTRSys2
IP : DHCP
Difficulty : Beginner / Intermediate
Format : Virtual Machine (VMware)
Description : This is a boot2root machine particularly educational for beginners. Follow us for next BTRSys
systems. We hope you enjoy it!
twitter: btrisk

****************************************************************************************************
Screenshot of BTRSys v1

Machine Name: BTRSys1
IP : DHCP
Difficulty : Beginner / Intermediate
Format : Virtual Machine (VMware)
Description : This is a boot2root machine particularly educational for beginners. Follow us for next BTRSys systems. We hope you enjoy it!

****************************************************************************************************
Screenshot of DEFCON Toronto Galahad

Dolev
<hr/>
One of the VMs used in the online CTF hosted back in September 2016 by Defcon Toronto, slightly modified to suit boot2root challenges.
Difficulty: Easy
Information: Overall 7 flags to collect, id 0 is the final step.
Details:

File: Galahad.zip (ovf)
Date: September 2016
VM Type: Tested on VMware Workstation
Notes: If the VM was able to obtain a DHCP you will likely see the IP in the VM login prompt.
Networking: DHCP
Checksum[SHA256]: c42839feadc8077380e167af9639cfcf9ebe3ffed083c98aee1e7d453022af5d

For any issues you can shoot an email to: dolev at dc416.com or DM me @dolevfarhi

****************************************************************************************************
Screenshot of Proteus 1

<pre><code>d8888b. d8888b.  .d88b.  d888888b d88888b db    db .d8888.
88  `8D 88  `8D .8P  Y8. `~~88~~' 88'     88    88 88'  YP
88oodD' 88oobY' 88    88    88    88ooooo 88    88 `8bo.
88~~~   88`8b   88    88    88    88~~~~~ 88    88   `Y8b.
88      88 `88. `8b  d8'    88    88.     88b  d88 db   8D
88      88   YD  `Y88P'     YP    Y88888P ~Y8888P' `8888Y'
</code></pre>
"A bacterium found in the intestines of animals and in the soil."
<pre><code>          Corporate Malware Validator.
</code></pre>
An IT Company implemented a new malware analysis tool for their
employees to scan potentially malicious files.
This PoC could be a make or break for the company.
It is your task to find the bacterium.
Goal: Get root, and get flag...
This VM was written in a manner that does not require <code>wget http://exploit; gcc exploit</code>.
NB: VMWare might complain about the .ovf specification.
If this does come accross your path, click the retry button and all should be well. 

****************************************************************************************************
Screenshot of MMMLAGOS 1.1

MMMLAGOS is a vulnerable ponzing scheme with lot of vulnerabilities , the flags are high tech stenography Flag to be puzzled by player to solve critical challenge
twitter : @silexsecure

****************************************************************************************************
Screenshot of d0not5top 1.2

D0Not5top Boot2Root 
This is my second public Boot2Root, It’s intended to be a little more difficult that the last one I made.
That being said, it will depend on you how hard it is :D
It's filled with a few little things to make the player smile.
Again there are a few “Red Herrings”, and enumeration is key.
DIFFICULTY
?????
CAPTURE THE FLAGS <br/>
There are 7 flags to collect, designed to get progressively more difficult to obtain
DETAILS

File: D0Not5top_3mrgnc3_v1.2.ova
OS: ?????
VM Type: VirtualBox
IP Address: DHCP
Size: 700 MB

SUPPORT
Any support issues can be directed to <a class="__cf_email__" data-cfemail="d9eab4abbeb7baea99adbcbab1b0bcf7bab6b4" href="/cdn-cgi/l/email-protection">[email protected]</a>

****************************************************************************************************
Screenshot of Lab26 1.1

For a while now I've been maintaining a VM I with several vulnerable web apps already deployed:

bWAPP
Mutillidae (nowasp)
Web for Pentester I (from pentesterlab.com)
DVWA
Django.nV
Google Gruyere
OWASP Juice Shop

The VM has Burp Suite free, chromium with a few extensions (including a proxy switcher) and sqlmap. The browser home page contains links to some exercises and walkthroughs.
User credentials:
<pre><code>root // password
tux // password
</code></pre>

****************************************************************************************************
Screenshot of DonkeyDocker 1

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512
Welcome to
<pre><code>  ___           _            ___          _
 |   \ ___ _ _ | |_____ _  _|   \ ___  __| |_____ _ _
 | |) / _ \ ' \| / / -_) || | |) / _ \/ _| / / -_) '_|
 |___/\___/_||_|_\_\___|\_, |___/\___/\__|_\_\___|_|
                        |__/
                             Made with &lt;3 v.1.0 - 2017
</code></pre>
This is my first boot2root - CTF VM. I hope you enjoy it.
if you run into any issue you can find me on Twitter: @dhn_
or feel free to write me a mail to:

Email: <a class="__cf_email__" data-cfemail="690d010729130c1b59440d081047191e" href="/cdn-cgi/l/email-protection">[email protected]</a>
GPG key: 0x2641123C
GPG fingerprint: 4E3444A11BB780F84B58E8ABA8DD99472641123C

Level: I think the level of this boot2root challange
is hard or intermediate.
Try harder!: If you are confused or frustrated don't forget
that enumeration is the key!
Thanks: Special thanks to @1nternaut for the awesome
CTF VM name!
Feedback: This is my first boot2root - CTF VM, please
give me feedback on how to improve!
Tested: This VM was tested with:

VMware Workstation 12 Pro
VMware Workstation 12 Player
VMware vSphere Hypervisor (ESXi) 6.5

Networking: DHCP service: Enabled
IP address: Automatically assign
<h1>SHA-1:</h1>
<pre><code>77439cb457a03d554bec78303dc42e5d3074ff85  DonkeyDocker-disk1.vmdk
d3193cca484f7f1b36c20116f49e9025bf60889c  DonkeyDocker.mf
7013d6a7c151332c99c0e96d34b812e0e7ce3d57  DonkeyDocker.ovf
</code></pre>
Looking forward to the write-ups!
<pre><code>-----BEGIN PGP SIGNATURE-----

Version: GnuPG v1

iQIcBAEBCgAGBQJY2snaAAoJEKjdmUcmQRI8fG0QAK9eCaBggC4+aRD2SrY5ZFtI
/5Lyi8fdGCrtIDhLIoAoM/HHX68GH6pPzWt2VesW1zCM0pnO+hAaQSzl5+C4e39g
IYIUx9WMojxrrDgvvZ0NxosYMTFyyXCudCpGZXo2fjW3xnZ9v1n/Yid0H23gXKyo
gLzMEVuCh4/Bh1YNx5Jc6X03rZg6nhWEaLzShDOsUu0d4bYD6ZL7Cnr1W7HFmoEn
oV3OOOEj79VG2EeIc4nNzyVnp1I+C3BjngAV0w6bQdepbWZvy/pyzdk8HEB4Xc56
MkKidbVx9oTh38tro//VzDCTwfGHyt+V3RhXpIQvvFOboG/CpvQFxMpSIn25tGNY
2rADxHJ40KG85MWey4lP2jzpbJDH5LYYMIej8w8iz1+DN9czXSRDVVdY3aAGaghe
NaWwqdktT0j0j2/6w2kiRR60LOaRK+u1rNckm6qBrlEQ+M3Pv7yD4A9rR8K4FVF8
2PyRrtltI8RkucJP0JjHWtl4Sry4dPA5EDtuUWQIO5mYjeJlQ9yg7TPGne4/hWSx
Gibj9XfiwwvpZ9qTJu2W91rt3P+xm6ic2QVCJ8oNRgwi0jGP4nhryg4I1yyaRpeR
ANbof9vxkEct1fuDODgXTIwQ1uGtG2X3khHiKxt5wcymCZ1v8CwQ0+vyiK/sbOsS
TyJq5lfMNJWrdsMNowNm
=Oo5M
-----END PGP SIGNATURE-----
</code></pre>

****************************************************************************************************
Screenshot of billu b0x

This Virtual machine is using ubuntu (32 bit)
Other packages used: - 

PHP
Apache
MySQL

This virtual machine is having medium difficulty level with tricks.
One need to break into VM using web application and from there escalate privileges to gain root access
<hr/>
For any query ping me at https://twitter.com/IndiShell1046
Enjoy the machine

****************************************************************************************************
Screenshot of Moria 1.1

<pre><code>+---------------------------------------------------------+
|                     Name: Moria                         |
|                       IP: Through DHCP                  |
|               Difficulty: Not easy!                     |
|                     Goal: Get root                      |
+---------------------------------------------------------+
|                                                         |
| DESCRIPTION:                                            |
| Moria is NOT a beginner-oriented Boot2Root VM, it will  |
| require good enum skills and a lot of persistence.      |
|                                                         |
| VM has been tested on both VMware and VirtualBox, and   |
| gets its IP through DHCP, make sure you're on the same  |
| network.                                                |
|                                                         |
| Special thanks to @seriousblank for helping me create it|
| and @johnm and @cola for helping me test it.            |
|                                                         |
|     Link: dropbox.com/s/r3btdcmwjigk62d/Moria1.1.rar    |
|     Size: 1.56GB                                        |
|      MD5: 2789bca41a7b8f5cc48e92c635eb83cb              |
|     SHA1: e3bddd4133320ae42ff65aec41b9f6516d33bb89      |
|                                                         |
| CONTACT:                                                |
| You can find me on NetSecFocus slack, twitter at        |
| @abatchy17 or occasionally on #vulnhub for questions.   |
|                                                         |
| PS: No Lord of The Rings knowledge is required ;)       |
|                                                         |
| -Abatchy                                                |
+---------------------------------------------------------+
</code></pre>

****************************************************************************************************
Screenshot of Super Mario Host 1.0.1

<h2>Level</h2>
Intermediate.
<hr/>
<h2>Description</h2>
Welcome to Super Mario Host!
This VM is meant to be a simulation of a real world case scenario.
The goal is to find the 2 flags within the VM. Root is not enough (sorry!)
The VM can be exploited in various ways, but remember that Enumeration is the key.
The level of the challenge is Intermediate.
Thanks to vdbaan, kltdwd, mrb3n and GKNSB for testing.

****************************************************************************************************
Screenshot of Analougepond 1

Welcome to another boot2root / CTF this one is called Analougepond. The VM is set to grab
a DHCP lease on boot. I've tried to mix things up a little on this one, and have used the
feedback from #vulnhub to make this VM a little more challenging (I hope).
Since you're not a Teuchter, I'll offer some hints to you:
Remember TCP is not the only protocol on the Internet
My challenges are never finished with root. I make you work for the flags.
The intended route is NOT to use forensics or 0-days, I will not complain either way.
To consider this VM complete, you need to have obtained:

Troll Flag: where you normally look for them
Flag 1: You have it when you book Jennifer tickets to Paris on Pan Am.
Flag 2: It will include a final challenge to confirm you hit the jackpot.
Have root everywhere (this will make sense once you're in the VM)
User passwords
2 VNC passwords

Best of luck! If you get stuck, eat some EXTRABACON
NB: Please allow 5-10 minutes or so from powering on the VM for background tasks to run
before proceeding to attack.
Changelog

v0.1b - Initial Version
v01.c - Fixes for flags based on feedback from mrB3n
v0.1d - Fixes based on shortcut to intended route
v0.2a - Fixes and clean up of disks for smaller OVA export
v0.2b - Small edit to remove copy of flag in wrong folder

SHA1SUM: D75AA2405E2DFB30C1470358EFD0767A10CF1EB1 analoguepond-0.2b.ova
Many thanks to mrB3n, Rand0mByteZ and kevinnz for testing this CTF.
A special thank you to g0tmi1k for hosting all these challenges and offering advice. A
tip of the hat to mrb3n for his recent assistence.

****************************************************************************************************
Screenshot of Ew_Skuzzy 1

<pre><code>
    ______            _____ __                         __
   / ____/      __   / ___// /____  __________  __  __/ /
  / __/ | | /| / /   \__ \/ //_/ / / /_  /_  / / / / / /
 / /___ | |/ |/ /   ___/ / ,&lt; / /_/ / / /_/ /_/ /_/ /_/
/_____/ |__/|__/   /____/_/|_|\__,_/ /___/___/\__, (_)
                                             /____/
</code></pre>
Welcome to 'Ew Skuzzy!' - my first CTF VM.
Level: Intermediate.

****************************************************************************************************
Screenshot of Thr0nes CTF 1

"Liberamos nuestro CTF creado por y para la old school."
We released our CTF created by and for the old school.
<hr/>
"Nivel : medio-bajo
Tipo de CTF : lineal, una prueba te va llevando a la siguiente.
Idioma : Español
Plataforma : Raspberry pi 3
Tools para grabar la imagen : <a href="https://sourceforge.net/projects/win32diskimager/">win32image</a> o <a href="https://www.tweaking4all.com/hardware/raspberry-pi/macosx-apple-pi-baker/">ApplePi-baker</a>"
Level: medium-low
Type of CTF: linear, one test takes you to the next.
Spanish Language
Platform: Raspberry pi 3
Tools to burn the image: <a href="https://sourceforge.net/projects/win32diskimager/">win32image</a> or <a href="https://www.tweaking4all.com/hardware/raspberry-pi/macosx-apple-pi-baker/">ApplePi-baker</a>
<hr/>
"Descarga la imagen lista para grabar en una sd y montarla en tu raspberry pi, conectala a la corriente y a jugar!"
Download the image ready to burn to a SD and mount it on your raspberry pi, plug it into the stream and play!
<hr/>
"link de descarga : <a href="https://mega.nz/#!qANi1STA!tjxTAhaAA1WyoZwp-tp5OWVz8251hJw57Y0kp0skiyc">https://mega.nz/#!qANi1STA!tjxTAhaAA1WyoZwp-tp5OWVz8251hJw57Y0kp0skiyc</a>"
Download link : <a href="https://mega.nz/#!qANi1STA!tjxTAhaAA1WyoZwp-tp5OWVz8251hJw57Y0kp0skiyc">https://mega.nz/#!qANi1STA!tjxTAhaAA1WyoZwp-tp5OWVz8251hJw57Y0kp0skiyc</a>
<hr/>
"Espero que os guste.
LoRKa"
I hope you like it.
LoRKa

****************************************************************************************************
Screenshot of hackfest2016 Orcus

Welcome to Orcus
This is a vulnerable machine i created for the Hackfest 2016 CTF
http://hackfest.ca/
Difficulty : Hard
Tips:
If youre stuck enumerate more! Seriously take each service running
on the system and enumerate them more!
Goals: This machine is intended to take a lot of enumeration and
understanding of Linux system.
There are 4 flags on this machine
1. Get a shell
2. Get root access
3. There is a post exploitation flag on the box
4. There is something on this box that is different from the others
from this series (Quaoar and Sedna) find why its different.
Feedback: This is my third vulnerable machine, please give me
feedback on how to improve !
@ViperBlackSkull on Twitter
<a class="__cf_email__" data-cfemail="7d0e141012135313121118093d151209101c1411531e1210" href="/cdn-cgi/l/email-protection">[email protected]</a>
Special Thanks to madmantm for testing this machine
SHA-256 : 79B1D93C60E664D70D8EB3C0CDF1AD98BF2B95036C84F87EEF065FA71C1AE51E

****************************************************************************************************
Screenshot of hackfest2016 Sedna

Welcome to Sedna
This is a vulnerable machine i created for the Hackfest 2016 CTF
http://hackfest.ca/
Difficulty : Medium
Tips:
There are multiple way to root this box, if it should work but
doesn't try to gather more info about why its not working.
Goals: This machine is intended to be doable by someone who have
some experience in doing machine on vulnhub
There are 4 flags on this machine
One for a shell
One for root access
Two for doing post exploitation on Sedna
Feedback: This is my second vulnerable machine, please give me
feedback on how to improve !
@ViperBlackSkull on Twitter
<a class="__cf_email__" data-cfemail="e99a80848687c78786858c9da981869d84888085c78a8684" href="/cdn-cgi/l/email-protection">[email protected]</a>
Special Thanks to madmantm for testing this virtual machine
SHA-256 : 178306779A86965E0361AA20BA458C71F2C7AEB490F5FD8FAAFAEDAE18E0B0BA

****************************************************************************************************
Screenshot of hackfest2016 Quaoar

Welcome to Quaoar
This is a vulnerable machine i created for the Hackfest 2016 CTF
http://hackfest.ca/
Difficulty : Very Easy
Tips:
Here are the tools you can research to help you to own this machine.
nmap
dirb / dirbuster / BurpSmartBuster
nikto
wpscan
hydra
Your Brain
Coffee
Google :)
Goals: This machine is intended to be doable by someone who is interested in learning computer security
There are 3 flags on this machine
1. Get a shell
2. Get root access
3. There is a post exploitation flag on the box
Feedback: This is my first vulnerable machine, please give me feedback on how to improve !
@ViperBlackSkull on Twitter
<a class="__cf_email__" data-cfemail="46352f2b29286828292a2332062e29322b272f2a6825292b" href="/cdn-cgi/l/email-protection">[email protected]</a>
Special Thanks to madmantm for testing
SHA-256 DA39EC5E9A82B33BA2C0CD2B1F5E8831E75759C51B3A136D3CB5D8126E2A4753

****************************************************************************************************
Screenshot of Defence Space CTF 2017

Defenc Space CTF is our first Iso design to honor our fallen hero in the military who have fought to defend the integrity of our country Nigeria. The story line on the CTF are based on true life happening in Northern Nigeria, however we have adopted code name “Operation Lafia dole” , the cyber component of the operation to make the challenge more exciting to our players to puzzle the challenge. 
Exercise start from simple information gathering which is applicable to both military and cyber based operation to complex infiltration and encryption been used by intelligence agency around the world to pass out secret. The player module uses tools in kali Linux to achieve it result. Other related information is on Open Source Data “goggle it”.
It has 7 flags to be captured but so addictive said C.E.O of Silex Secure.
Author's Walkthrough: <a href="http://ctf2017.silexsecure.com/walkthrough/2017-defence-ctf-walkthrough/">http://ctf2017.silexsecure.com/walkthrough/2017-defence-ctf-walkthrough/</a>

****************************************************************************************************
Screenshot of pluck 1

"Enjoy" --- @ryanoberto

****************************************************************************************************
Screenshot of Breach 3.0.1

Third in a multi-part series, Breach 3.0 is a slightly longer boot2root/CTF challenge which attempts to showcase a few real-world scenarios/vulnerabilities, with plenty of twists and trolls along the way.
Difficulty: Intermediate, requires some creative thinking and persistence more so than advanced exploitation.
The VM is configured to grab a lease via DHCP.
A few things:
1) This is the culmination of the series, keep your notes close from the previous 2 challenges, they may come in handy.
2) Remember that recon is an iterative process. Make sure you leave no stone unturned.
3) The VM uses KVM and QEMU for virtualization. It is not necessary to root every host to progress.
4) There are 3 flags throughout, once you reach a flag you have achieved that intended level of access and can move on. These 3 flags are your objectives and it will be clear once you have found each and when it is time to move on.
Shout-out to knightmare for many rounds of testing and assistance with the final configuration as well as g0blin, Rand0mByteZ, mr_h4sh and vdbaan for testing and providing valuable feedback. As always, thanks to g0tmi1k for hosting and maintaining Vulnhub.
If you run into any issues you can find me on Twitter: https://twitter.com/mrb3n813 or on IRC in #vulnhub.
Looking forward to the write-ups!
Enjoy and happy hunting!
SHA1: EBB2123E65106F161479F3067C68CFA143CA98D3

****************************************************************************************************
Screenshot of Wallaby's Nightmare (v1.0.2)

This is my first boot2root machine. It's begginer-intermediate level. 
It's been tested in VBox and VMware and seems to work without issues in both.
A tip, anything can be a vector, really think things through here based on how the machine works. Make a wrong move though and some stuff gets moved around and makes the machine more difficult!
This is part one in a two part series. I was inspired by several vms I found on vulnhub and added a bit of a twist to the machine.
Good luck and I hope you guys enjoy!
<hr/>
This is my first CTF/Vulnerable VM ever. I created it both for educational purposes and so people can have a little fun testing their skills in a legal, pentest lab environment.
Some notes before you download!

Try to use a Host-Only Adapter. This is an intentionally vulnerable machine and leaving it open on your network can have bad results.
It should work with Vmware flawlessly. I've tested it with vbox and had one other friend test it on Vbox as well so I think it should work just fine on anything else.

This is a Boot2Root machine. The goal is for you to attempt to attempt to gain root privileges in the VM. Do not try to get the root flag through a recovery iso etc, this is essentially cheating! The idea is to get through by pretending this machine is being attacked over a network with no physical access.
I themed this machine to make it feel a bit more realistic. You are breaking into a fictional characters server (named Wallaby) and trying to gain root without him noticing, or else the difficulty level will increase if you make the wrong move! Good luck and I hope you guys enjoy!

****************************************************************************************************
Screenshot of USV 2016 (v1.0.1)

<strong>Difficulty</strong>: Beginner/Intermediate
Instructions: The CTF is a virtual machine and has been tested in Virtual Box. It has all required drivers if you want it to run on VMware or KVM (virtio). The network interface of the virtual machine will take it`s IP settings from DHCP. 
<strong>Flags</strong>: There are 7 flags that should be discovered in form of: Country_name Flag: [md5 hash]. In CTF platform of the CTF-USV competition there was a hint available for each flag, but accessing it would imply a penalty. If you need any of those hints to solve the challenge, send me a message on Twitter @gusu_oana and I will be glad to help.
<strong>About</strong>: CTF-USV 2016 was the first International Students Contest in Information Security organized in Romania by Suceava University. Security challenges creation, evaluation of results and building of CTF environment was provided by Safetech Tech Team: Oana Stoian (@gusu_oana), Teodor Lupan (@theologu) and Ionut Georgescu (@ionutge1)
SHA1: f401e4e9084f937a674356dd4fa2144e10b8471a 

****************************************************************************************************
Screenshot of Pentester Lab Padding Oracle

This course details the exploitation of a weakness in the authentication of a PHP website. The website uses Cipher Block Chaining (CBC) to encrypt information provided by users and use this information to ensure authentication. The application also leaks if the padding is valid when decrypting the information. We will see how this behaviour can impact the authentication and how it can be exploited.
Source: <a href="https://pentesterlab.com/exercises/padding_oracle/course">https://pentesterlab.com/exercises/padding_oracle/course</a>

****************************************************************************************************
Screenshot of 64Base 1.0.1

<h2>64Base Boot2Root</h2>
This is my very first public Boot2Root, It’s intended to be more of a fun game than a serious hacking challenge. Hopefully anyone interested enough to give it a try will enjoy the story with this one.
It is based on the StarWars storyline and is designed to <strong>Troll you in a fun way</strong>.
Just be warned, it’s littered with more than a few “Red Herrings” ;D
<h2>Difficulty Rating</h2>
[BEGINNER - INTERMEDIATE]
<h2>Capture The Flags</h2>
There are 6 flags to collect. Each in the format of flag1{ZXhhbXBsZSBmbGFnCg==}
Beat the Empire and steal the plans for the Death Star before its too late.
I Hope You Enjoy It.

****************************************************************************************************
Screenshot of DC416 2016

<h2>DC416 CTF CHALLENGES</h2>
These four virtual machines were created by members of the <a href="https://github.com/vulnhub/ctf-writeups">VulnHub CTF Team</a> for <a href="https://dc416.com">DefCon Toronto's</a> first offline CTF.
They have been tested with VirtualBox, and will obtain an IP address via DHCP upon bootup. Difficulty ranges from beginner to intermediate.

DC416 Basement by <a href="https://twitter.com/@barrebas">@barrebas</a>
DC416 Baffle by <a href="https://twitter.com/@superkojiman">@superkojiman</a>
DC416 Dick Dastardly by <a href="https://twitter.com/@_RastaMouse">@_RastaMouse</a>
DC416 Fortress by <a href="https://twitter.com/@superkojiman">@superkojiman</a>

Each machine has a landing page on port 80 which describes the number of flags it has, along with any additional rules or hints.
Enjoy!

****************************************************************************************************
Screenshot of HackDay Albania

This was used in HackDay Albania's 2016 CTF.
The level is beginner to intermediate . 
It uses DHCP.

****************************************************************************************************
Screenshot of SkyDog 2016 - Catch Me If You Can

<h2>SkyDog Con CTF 2016 - Catch Me If You Can</h2>
<strong>Difficulty</strong>: Beginner/Intermediate 
<strong>Instructions</strong>:
The CTF is a virtual machine and works best in Virtual Box. Download the OVA file open up Virtual Box and then select File –&gt; Import Appliance. Choose the OVA file from where you downloaded it. After importing the OVA file above make sure that USB 2.0 is disabled before booting up the VM. The networking is setup for a Host-Only Adapter by default but you can change this before booting up depending on your networking setup. The Virtual Machine Server is configured for DHCP. If you have any questions please send me a message on Twitter @jamesbower and I’ll be happy to help.
<strong>Flags</strong>
The eight flags are in the form of flag{MD5 Hash} such as flag{1a79a4d60de6718e8e5b326e338ae533
Flag #1 Don’t go Home Frank! There’s a Hex on Your House.
Flag #2 Obscurity or Security?
Flag #3 Be Careful Agent, Frank Has Been Known to Intercept Traffic Our Traffic.
Flag #4 A Good Agent is Hard to Find.
Flag #5 The Devil is in the Details - Or is it Dialogue? Either Way, if it’s Simple, Guessable, or Personal it Goes Against Best Practices
Flag #6 Where in the World is Frank?
Flag #7 Frank Was Caught on Camera Cashing Checks and Yelling - I’m The Fastest Man Alive!
Flag #8 Franks Lost His Mind or Maybe it’s His Memory. He’s Locked Himself Inside the Building. Find the Code to Unlock the Door Before He Gets Himself Killed!

****************************************************************************************************
Screenshot of Teuchter 0.3

Welcome to another boot2root / CTF this one is called Teuchter. The VM is set to grab
a DHCP lease on boot. As with my previous VMs, there is a theme, and you will need to
snag the flag in order to complete the challenge. Less hochmagandy and more studying
is needed for this one!
A word of warning: The VM has a small HDD so please set the disk to non persistent so
you can always revert. You may need to set the MAC to 00:0C:29:65:D0:A0 too.
Hints for you:

This VM is designed to be a bit of a joke/troll so a translator might be useful.
The challenge isn't over with root. I've done my usual flag shenanigans.
A bit of info security research and knowing your target helps here.
http://www.jackiestewart.co.uk/jokes/weegie%20windies%202000.htm

SHA1SUM: b5a89761b0a0ee9f0c5e1089b2fde9649ba76b3f Teuchter_0.3.ova

****************************************************************************************************
Screenshot of IMF 1

Welcome to "IMF", my first Boot2Root virtual machine. IMF is a intelligence agency that you must hack to get all flags and ultimately root. The flags start off easy and get harder as you progress. Each flag contains a hint to the next flag. I hope you enjoy this VM and learn something. 
Difficulty: Beginner/Moderate
Can contact me at: geckom at redteamr dot com or on Twitter: @g3ck0m

****************************************************************************************************
Screenshot of Billy Madison 1.1

<strong>IMPORTANT NOTE</strong>: do not use host-only mode, as issues have been discovered. Set the Billy Madison VM to "auto-detect" to get a regular DHCP address off your network.
<hr/>
<strong>Plot</strong>:
Help Billy Madison stop Eric from taking over Madison Hotels!
Sneaky Eric Gordon has installed malware on Billy's computer right before the two of them are set to face off in an academic decathlon. Unless Billy can regain control of his machine and decrypt his 12th grade final project, he will not graduate from high school. Plus, it means Eric wins, and he takes over as head of Madison Hotels!
<hr/>
<strong>Objective</strong>:
The primary objective of the VM is to figure out how Eric took over the machine and then undo his changes so you can recover Billy's 12th grade final project. You will <em>probably</em> need to root the box to complete this objective.
<hr/>
<strong>Download</strong>:

<code>BillyMadison1dot0.zip</code> - https://dl.dropboxusercontent.com/u/5473387/BillyMadison1dot0.zip 
MD5 = <code>afcb926608d6d7b2471e4de6c367afb4</code>
SHA1 = <code>4933ca408fcb2e88e6388fe4ea321f758b133d72</code>

<hr/>
<strong>Other Information</strong>:

Size: 1.68GB
Hypervisor: Created with VMWare ESXi 6.0.0
Difficulty: Beginner/Moderate

<hr/>
<strong>Special Thanks To</strong>:

@rand0mbytez and @mrb3n813 for their tenacious help in beta testing, ironing out the bugs, suggesting better ways to do things, battling trolls and just generally being awesome.
@g0tmi1k, @_RastaMouse and the VulnHub crew for hosting VMs, encouraging VM creators/testers and being a tremendous resource to the infosec community.
@ReverseBrain for helping and testing with Vbox
My wife. She rules.


****************************************************************************************************
Screenshot of Defcon CTF 0.1.0

<h1>The DEFCON CTF VM</h1>
Over the past 6 years, I've been collecting pieces of the DEFCON CTF's past and attempting to preserve them in a way that will allow future generations to enjoy the game. With the conclusion of <a href="https://www.cybergrandchallenge.com/">DARPA's Cyber Grand Challenge</a> and the start of <a href="https://defcon.org/html/defcon-24/dc-24-ctf.html">DEFCON 24's CTF Finals</a>, I'm releasing what I have. It's not 100% finished (I've been way too busy lately), but it is usable!
TL;DR: The most recent copy of the VM is v0.1.0 and can be downloaded here. Credentials are below.
UPDATE 2016-08-08: <a href="https://www.reddit.com/r/netsec/comments/4wprce/7_years_of_defcon_ctf_finals_challenges_in_one_vm/d68xmjg">Minor text fixes</a>.
<hr/>
<h1>How do I use this stuff?</h1>
Booting the virtual machine should be all that's required to get services up and running. To interact with a service, simply open a socket connection to the VM on that service's port. On a *nix system, this can be done in a terminal with <a href="http://linux.die.net/man/1/nc">netcat</a>: <code>nc xxx.xxx.xxx.xxx yyyyy</code> (X's represent the IP address, Y's represent the port number)
Of course, this just gets you a connection. The game requires you to find and patch/exploit flaws in each service. To do this (for most services), you will need to disassemble and step through the compiled executable by hand.
The industry-standard tool for reverse engineering is <a href="https://www.hex-rays.com/products/ida/">IDA Pro</a>. Alternatives include <a href="https://www.hopperapp.com/">Hopper</a> and the recently-released <a href="http://binary.ninja/">Binary Ninja</a>. If you don't want to spring for a license (or use the free demo version), the <a href="https://github.com/Vector35/deprecated-binaryninja-python">Binary Ninja prototype</a> is open-source. <a href="http://radare.org/r/">Radare</a> is another open-source alternative. And, of course, no discussion of disassemblers would be complete without mentioning <a href="http://linux.die.net/man/1/objdump">objdump</a>, which should be readily available on *nix systems in your distribution's repositories.
To assist newcomers in understanding how to find, patch, and exploit vulnerable code in these services, I have also published a fully detailed walkthrough of one of the services from DEFCON as a tutorial:

DEFCON 15's <a href="http://fuzyll.com/2016/defcon-15-kimjong">kimjong</a> (2007)

Once you've gone through it (or decided it's beneath you), I recommend "antipasto" (from DEFCON 16), "deltad" (from DEFCON 17), and "sammichd" (from DEFCON 15) as other, easier services to start with.

****************************************************************************************************
Screenshot of Breach 2.1

Second in a multi-part series, Breach 2.0 is a boot2root/CTF challenge which attempts to showcase a real-world scenario, with plenty of twists and trolls along the way.
The VM is configured with a static IP (192.168.110.151) so you'll need to configure your host only adaptor to this subnet. Sorry! Last one with a static IP ;)
A hint: Imagine this as a production environment during a busy work day.
Shout-out to knightmare for many rounds of testing and assistance with the final configuration as well as rastamouse, twosevenzero and g0blin for testing and providing valuable feedback. As always, thanks to g0tmi1k for hosting and maintaining #vulnhub. 
VirtualBox users: if the screen goes black on boot once past the grub screen make sure to go to settings ---&gt; general, and make sure it says Type: Linux Version: Debian 64bit
If you run into any issues, you can find me on Twitter: https://twitter.com/mrb3n813 or on IRC in #vulnhub.
Looking forward to the write-ups, especially any unintended paths to local/root.
Happy hunting! 
SHA1:D8F33A9234E107CA745A8BEC853448408AD4773F
Note: v2.1 fixes a few issues. 

****************************************************************************************************
Screenshot of PwnLab init

<h3>Description</h3>
Wellcome to "PwnLab: init", my first Boot2Root virtual machine. Meant to be easy, I hope you enjoy it and maybe learn something.
The purpose of this CTF is to get root and read de flag.
Can contact me at: <a class="__cf_email__" data-cfemail="4d2e212c223f0d3d3a23212c2f63232839" href="/cdn-cgi/l/email-protection">[email protected]</a> or on Twitter: @Chronicoder

Difficulty: Low
Flag: /root/flag.txt 

<h3>File Information</h3>

Filename: pwnlab_init.ova
File size: 784 MB
MD5: CE8AB26DE76E5883E67D6DE04C0F6E43
SHA1: 575F19216A3FA3E377EFE69D5BF715913F294A3B

<h3>Virtual Machine</h3>

Format: Virtual Machine (Virtualbox - OVA)
Operating System: Debian

<h3>Networking</h3>

DHCP service: Enabled
IP address: Automatically assign


****************************************************************************************************
Screenshot of Tommy Boy 1

<h2>Description</h2>
=================
HOLY SCHNIKES! Tommy Boy needs your help!
The Callahan Auto company has finally entered the world of modern technology and stood up a Web server for their customers to use for ordering brake pads. 
Unfortunately, the site just went down and the only person with admin credentials is Tom Callahan Sr. - who just passed away! And to make matters worse, the only other guy with knowledge of the server just quit!
You'll need to help Tom Jr., Richard and Michelle get the Web page restored again. Otherwise Callahan Auto will most certainly go out of business :-(
<hr/>
<h2>Objective</h2>
=================
The primary objective is to restore a backup copy of the homepage to Callahan Auto's server. However, to consider the box fully pwned, you'll need to collect 5 flags strewn about the system, and use the data inside them to unlock one final message.
<hr/>
<h2>Other info</h2>
=================

Size: 1.3GB
Hypervisor: Created with VMWare Fusion 8.1.1.
Difficulty: ?

<hr/>
<h2>Special thanks to</h2>
=================

Rand0mbytez for testing about 10 versions of this frickin' thing to get the bugs worked out.
RobertWinkel for additional detailed testing and suggestions for tweaking the VM for a better overall experience.


****************************************************************************************************
Screenshot of 6Days Lab 1.1

<h2>6Days Lab</h2>
Boot2root machine for educational purposes
Our first boot2root machine, execute /flag to complete the game.
Try your skills against an environment protected by IDS and sandboxes!
“Our product Rashomon IPS is so good, even we use it!” they claim.
Hope you enjoy.
<hr/>
v1.0 - 2016-07-12
v1.1 - 2016-07-25

****************************************************************************************************
Screenshot of The Pentesters 64-Bit AppSec Primer (Beta)

<h2>Welcome to The Pentester’s 64-Bit AppSec Primer and challenge.</h2>
Here at The Pentesters, we have a passion for application security and all that goes with it. We think that application security is an extremely important part of the field of information security and have, “made it our business” so to speak to provide a means of education into modern-day application security. With modern computing becoming more and more advanced, and the requirements for understanding the functionality and security behind said computing becoming equally as challenging to understand, we figured that perhaps giving a set of challenges dedicated to learning the mere basics of 64 bit appsec would be beneficial to the security community. 
The 64-Bit AppSec Primer consists of 16 challenges, increasingly more difficult than the previous one, dedicated to learning the basics of 64 bit binary exploitation and reverse engineering. The x64 instruction set, as you would expect, has many new instructions, registers, and calling conventions in comparison to the traditional x86 instruction set. Our goal, with this challenge, is to get you inside a debugger with intentionally vulnerable binaries, and get you looking at the inner-workings of a 64 bit binary. Alongside the increasing complexity of the instruction set, is an equally complexity of exploitation, which as a penetration tester and security engineer, will prove useful to understand.
The challenges consist of varying vulnerabilities and anti-debugger tricks in binaries, such as:

Stack-based Buffer Overflows
Format String Vulnerabilities
Heap-based Buffer Overflows
Detection of tracing
Insecure validation of credentials
and more… don’t want to give you all the good details eh?

As a bonus, we would like to contribute back to the security community. We are donating the VM to Vulnhub, for all to have, and we are also offering prizes to three people who gives us the most robust and complete write-up for the challenges. In order to qualify for the prizes, you must post your write-up on either your personal blog, or website (your choice), and post a link to http://thepentesters.net/challenge/ along with your username. If you are unable to solve all of the challenges, that is okay, we will still accept your write-up for judging, we still want to see what you completed and how you did it. Here are the prizes:

1st Place gets $150.00
2nd Place gets $75.00
3rd Place gets $25.00

The challenge ends on August 31st, 2016. All write-ups must be submitted by then, whoever has written the best write-up with the most detailed explanations wins. The judging will be done by our pentesting team.
Also, I would like to note a couple rules for the reverse engineering challenges.

The challenge must be solved without attacking the encryption of the flag. Spoiler, I used a basic XOR encryption for most of them so they do not show up in strings. So, that is off-limits. The goal is to break the logic of the application. 
Some challenges have several ways of solving and we would like to see how you did it. My C coding skills are most certainly not expertise, but I feel as if this will prove to be a good exercise for many in regards to exploit development and reverse engineering.
All else is fair game!

<strong>Note: ASLR must be disabled, log in as level17:madpwnage, and run “<code>echo 0 &gt; /proc/sys/kernel/randomize_va_space</code>”. Also, challenge 3, is only a DoS challenge. This is the beta, so there are still glitches. If you find any, please contact me at <a class="__cf_email__" data-cfemail="600117090c052014080510050e140513140512134e0e0514" href="/cdn-cgi/l/email-protection">[email protected]</a> with your discovery.</strong>
There are a couple challenges that don’t have “flags” but you will know when you have solved those, please note your findings and take screen-shots of them as well. As for the VM, you are to ssh in as user n00b and password n00b where you will find gdb-peda installed for you to make your life easier. The VM gets its IP through DHCP and is set to host-only adapter in VMware, so it should work for you straight out of the box so to speak. That is all I have for you and I hope you enjoy.

****************************************************************************************************
Screenshot of The Necromancer 1

Title: The Necromancer
File: necromancer.ova
md5sum: 6c4cbb7776acac8c3fba27a0c4c8c98f
sha1sum: 712d4cfc19199dea92792e64a43ae7ac59b1dd05
Size: 345MB
Hypervisor: Created with VirtualBox 5.0.20. Tested with virtualbox and vmware player.
Author: @xerubus
Test Bunnies: @dooktwit and @RobertWinkel
Difficulty: Beginner
<hr/>
<h2></h2>
<h1>Description</h1>
<h2></h2>
The Necromancer boot2root box was created for a recent SecTalks Brisbane CTF competition. 
There are 11 flags to collect on your way to solving the challenging, and the difficulty level is considered as beginner.
The end goal is simple... destroy The Necromancer!
<h2></h2>
<h1>Notes</h1>
<h2></h2>

DHCP (Automatically assigned)
IMPORTANT: The vm IS working as intended if you receive a successful DHCP lease as seen in the boot up sequence.
The Necromancer VM MUST be on the same subnet as the attacking machine. Ideally both the boot2root VM and the attacking machine should be on the same HostOnly network. If you choose to use a physical box as the attacking machine, the boot2root VM must exist on the same network via a bridged interface.


****************************************************************************************************
Screenshot of Violator 1

Welcome to another boot2root / CTF this one is called Violator. The VM is set to grab
a DHCP lease on boot. As with my previous VMs, there is a theme, and you will need to
snag the flag in order to complete the challenge.
A word of warning: The VM has a small HDD so you can brute force, but please set the
disk to non persistent so you can always revert.
Some hints for you:

Vince Clarke can help you with the Fast Fashion.
The challenge isn't over with root. The flag is something special.
I have put a few trolls in, but only to sport with you.

SHA1SUM: 47F68241E95E189126E94A38CB4AD461DD58EE88 violator.ova
Many thanks to BenR and GKNSB for testing this CTF.
Special thanks and shout-outs go to BenR, Rasta_Mouse and g0tmi1k for helping me to
learn a lot creating these challenges.

****************************************************************************************************
Screenshot of Breach 1

First in a multi-part series, Breach 1.0 is meant to be beginner to intermediate boot2root/CTF challenge. Solving will take a combination of solid information gathering and persistence. Leave no stone unturned.
The VM is configured with a static IP address (192.168.110.140) so you will need to configure your host-only adaptor to this subnet.
Many thanks to knightmare and rastamouse for testing and providing feedback. 
Shout-out to g0tmi1k for maintaining #vulnhub and hosting my first challenge. 
If you run into any issues, you can find me on Twitter: https://twitter.com/mrb3n813 or on IRC in #vulnhub.
Looking forward to the write-ups, especially any unintended paths to local/root. 
Note, you may need to use 7zip to extract the ZIP.

****************************************************************************************************
Screenshot of Mr-Robot 1

Based on the show, Mr. Robot. 
This VM has three keys hidden in different locations. Your goal is to find all three. Each key is progressively difficult to find. 
The VM isn't too difficult. There isn't any advanced exploitation or reverse engineering. The level is considered beginner-intermediate.

****************************************************************************************************
Screenshot of Stapler 1

<pre><code>
+---------------------------------------------------------+
|                                                         |
|                                  __..--''\              |
|                          __..--''         \             |
|                  __..--''          __..--''             |
|          __..--''          __..--''       |             |
|          \ o        __..--''____....----""              |
|           \__..--''\                                    |
|           |         \                                   |
|          +----------------------------------+           |
|          +----------------------------------+           |
|                                                         |
+- - - - - - - - - - - - - -|- - - - - - - - - - - - - - -+
|   Name: Stapler           |          IP: DHCP           |
|   Date: 2016-June-08      |        Goal: Get Root!      |
| Author: g0tmi1k           | Difficultly: ??? ;)         |
+- - - - - - - - - - - - - -|- - - - - - - - - - - - - - -+
|                                                         |
| + Average beginner/intermediate VM, only a few twists   |
|   + May find it easy/hard (depends on YOUR background)  |
|   + ...also which way you attack the box                |
|                                                         |
| + It SHOULD work on both VMware and Virtualbox          |
|   + REBOOT the VM if you CHANGE network modes           |
|   + Fusion users, you'll need to retry when importing   |
|                                                         |
| + There are multiple methods to-do this machine         |
|   + At least two (2) paths to get a limited shell       |
|   + At least three (3) ways to get a root access        |
|                                                         |
| + Made for BsidesLondon 2016                            |
|   + Slides: https://download.vulnhub.com/media/stapler/ |
|                                                         |
| + Thanks g0tmi1k, nullmode, rasta_mouse &amp; superkojiman  |
|   + ...and shout-outs to the VulnHub-CTF Team =)        |
|                                                         |
+- - - - - - - - - - - - - - - - - - - - - - - - - - - - -+
|                                                         |
|       --[[~~Enjoy. Have fun. Happy Hacking.~~]]--       |
|                                                         |
+---------------------------------------------------------+
</code></pre>

****************************************************************************************************
Screenshot of Sidney 0.2

Welcome to my third boot2root / CTF this one is called Sidney. The VM is set to grab a DHCP lease on boot. As before, gaining root is not the end of this VM. You will need to snag the flag, and being me, it's never where they normally live... B-)
If you are having trouble with the NIC, make sure the adapter is set to use the MAC 00:0C:29:50:14:56
Some hints for you:

If you are hitting a wall, read https://de.wikipedia.org/wiki/MOS_Technology_6502
The flag is audio as well as visual

SHA1SUM: 114ABA151B77A028AA5CFDAE66D3AEC6EAF0751A sidney.ova
Many thanks to Rasta_Mouse and GKNSB for testing this CTF.
Special thanks and shout-outs go to GKNSB and Rasta_Mouse, hopefully he streams this one live too! Also a shout-out to g0tmi1k for #vulnhub and offering to host my third CTF.

****************************************************************************************************
Screenshot of Milnet 1

Welcome to 1989! 
And welcome to Germany!
This VM is inspired by a book! There should be plenty of hints which one it is, if you havent read it.
<hr/>
This is a simple VM, so dont fear any advanced exploitation, reverse engineering or other advanced techniques!
<hr/>
Just a solid and simple advanced persistent threat (admins) ;) 
So the level is clearly: beginner (as intended). 
<hr/>
For some it may teach a solid (old) new Privesc technique that together with the above mentioned book inspired me to this VM. 
<hr/>
I made the effort to throw some very basic story/polish into it.
Also if everythin runs smoothly the VM should show its IP adress in the Login screen on the console!
-No, I dont consider finding the VM in your own network a real challenge ;)-
If you should encounter any problems or want to drop me a line use #milet and @teh_warriar on twitter or chat me up in #vulnhub!
<hr/>
Hope you enjoy this VM!
Gonna enjoy reading some writeups and hope you might find other ways then the intended ones!
Best Regards
Warrior

****************************************************************************************************
Screenshot of VulnOS 2

<strong>VulnOS are a series of vulnerable operating systems packed as virtual images to enhance penetration testing skills</strong>

This is version 2 -

Smaller, less chaotic !
As time is not always on my side, It took a long time to create another VulnOS. But I like creating them.
The image is build with VBOX. Unpack the file and add it to your virtualisation software.
<strong>Your assignment is to pentest a company website, get root of the system and read the final flag</strong>
NOTE : current keyboard preferences is BE
"pentesting is a wide concept"
If you have questions, feel free to contact me on <a class="__cf_email__" data-cfemail="86ebb2e2e4b5b5e0c6e1ebe7efea" href="/cdn-cgi/l/email-protection">[email protected]</a> dot com
Shout out to the Vulnhub Testing team!
Hope you enjoy.

****************************************************************************************************
Screenshot of Gibson 0.2

Welcome to another boot2root / CTF this one is called Gibson. The VM is set to grab a DHCP lease on boot. It doesn't matter what your local subnet is, as long as you keep away from the 192.168.122.0/24 subnet. You will see why soon enough...
Once again, I'll offer some hints to you:

SSH can forward X11.
The challenge isn't over with root. The flag is not where you expect to find it.

SHA1SUM: <code>f4601f62b7011cc6ad403553cb8a9375e43cb0b5 gibson.ova</code>
Many thanks to g0blin and GKNSB for testing this CTF.
Special thanks and shout-outs go to Barrebas and Rasta_Mouse. and g0tmi1k for more advice and offering to host my second CTF.
Kudos to g0blin for adivsing on how to use this in Vi
Virtual box users can run:
<code>tar zxf gibson.ova &amp;&amp; qemu-img convert gibson-disk1.vmdk gibson-disk1.bin &amp;&amp; VBoxManage convertfromraw gibson-disk1.bin gibson-disk1.vdi --format VDI</code>

****************************************************************************************************
Screenshot of Seattle v0.3

Graceful’s VulnVM is web application running on a virtual machine, it’s designed to simulate a simple eCommerce style website which is purposely vulnerable to a number of well know security issues commonly seen in web applications. This is really a pre-release preview of the project but it’s certainly functional as it stands, but I’m planning on doing a lot of work on this in the near future.
The plan is ultimately to have the application vulnerable to a large number of issues with a selection of different filters at different difficulties that way the as testers become better at detecting and exploiting issues the application can get hardened against common exploitation methods to allow the testers a wider ranger of experiences.
The first filters have now been implemented! The application now supports “levels” where Level 1 includes no real filtration of user input and Level 2 includes a simple filter for each vulnerable function.
Currently it’s vulnerable to:

SQL Injection (Error-based)
SQL Injection (Blind)
Reflected Cross-Site Scripting
Stored Cross-Site Scripting
Insecure Direct-Object Reference
Username Enumeration
Path Traversal
Exposed phpinfo()
Exposed Administrative Interface
Weak Admin Credentials

<h2>Extracting the Virtual Machine</h2>
Install p7zip to unzip *.7z files on Fedora:
<code>sudo dnf install p7zip</code>
<hr/>
Install p7zip to unzip *.7z files on Debian and Ubuntu:
<code>sudo apt-get install p7zip</code>
<hr/>
Extract the archive:
<code>7z x Seattle-0.0.3.7z</code>
Then you can simply start up the virtual machine using Virtual Box! The root user account has a password of PASSWORD

****************************************************************************************************
Screenshot of SickOs 1.2

<h2>About Release</h2>
<pre><code>Name........: SickOs1.2
Date Release: 26 Apr 2016
Author......: D4rk
Series......: SickOs
Objective...: Get /root/7d03aaa2bf93d80040f3f22ec6ad9d5a.txt
Tester(s)...: h1tch1, Eagle11
Twitter.....: https://twitter.com/D4rk36
</code></pre>
<h2>Description:-</h2>
<pre><code>This is second in following series from SickOs and is independent of the prior releases, scope of challenge is to gain highest privileges on the system.
</code></pre>
<h2>File Information:-</h2>
<pre><code>Filename: Sick0s1.2.zip
File size: 696.2 MB
MD5: b013ba76f50c15890554632a40b697bd
SHA1: 9f45f7c060e15dc6bb93c1cf39efdd75125e30a0
</code></pre>
<h2>Virtual Machine</h2>
<pre><code>Format: OVF
Operating System: Ubuntu
Tested on: VMWare workstation Pro 12.1.0 build-3272444
</code></pre>
<h2>Networking</h2>
<pre><code>DHCP service: Enabled
IP address: Automatically assign
</code></pre>
<h2>Flag(s):</h2>
<pre><code>Yes
</code></pre>

****************************************************************************************************
Screenshot of Droopy v0.2

Welcome to Droopy. This is a beginner's boot2root/CTF VM.
The VM is set to grab a DHCP lease on boot.
There's 2 hints I would offer you:
1.) Grab a copy of the rockyou wordlist.
2.) It's fun to read other people's email.
SHA1SUM: e6862fa5ebc9c2a8e582e77f440510062afe47ba droopyctf.ova
Special thanks and shout-outs go to Barrebas and Rasta_Mouse for testing, and g0tmi1k for advice and offering to host my first CTF.

****************************************************************************************************
Screenshot of SkyDog 1

<h1>SkyDog Con CTF – The Legend Begins</h1>
<h3>Over but not forgotten.</h3>
<strong>Download Link</strong>
http://bit.ly/SkyDogConCTF
<strong>Instructions</strong>
The CTF is a virtual machine and works best in Virtual Box. This OVA was created using Virtual Box 4.3.32. Download the OVA file open up Virtual Box and then select File –&gt; Import Appliance. Choose the OVA file from where you downloaded it. After importing the OVA file above it is best to disable the USB 2.0 setting before booting up the VM. The networking is setup for a NAT Network but you can change this before booting up depending on your networking setup. If you have any questions please send me a message on Twitter @jamesbower and I’ll be happy to help.
<hr/>
<strong>Goal of Sky Dog Con CTF</strong>
The purpose of this CTF is to find all six flags hidden throughout the server by hacking network and system services. This can be achieved without hacking the VM file itself.
<hr/>
<strong>Flags</strong>
The six flags are in the form of flag{MD5 Hash} such as flag{1a79a4d60de6718e8e5b326e338ae533
Flag #1 Home Sweet Home or (A Picture is Worth a Thousand Words)
Flag #2 When do Androids Learn to Walk?
Flag #3 Who Can You Trust?
Flag #4 Who Doesn’t Love a Good Cocktail Party?
Flag #5 Another Day at the Office
Flag #6 Little Black Box

****************************************************************************************************
Screenshot of SecTalks BNE0x03 - Simple

<h2>Simple CTF</h2>
Simple CTF is a boot2root that focuses on the basics of web based hacking. Once you load the VM, treat it as a machine you can see on the network, i.e. you don't have physical access to this machine. Therefore, tricks like editing the VM's BIOS or Grub configuration are not allowed. Only remote attacks are permitted. /root/flag.txt is your ultimate goal.
I suggest you use VirtualBox or VMWare Player with a Host Only adapter. The VM will assign itself an IP address through DHCP.
<h2>Location</h2>
https://www.dropbox.com/s/9spf5m9l87zjlps/Simple.ova?dl=0 [File size: 600MB]
<h2>Hints</h2>
<ol>
Get a user shell by uploading a reverse shell and executing it.
A proxy may help you to upload the file you want, rather than the file that the server expects.
There are 3 known privesc exploits that work. Some people have had trouble executing one of them unless it was over a reverse shell using a netcat listener.
</ol>
Contact @RobertWinkel for more hints.

****************************************************************************************************
Screenshot of SecTalks BNE0x02 - Fuku

<h2>Fuku CTF</h2>
Fuku (pronounced "far queue") CTF is designed to fuck with people.
This is a boot2root. Import it in VirtualBox, using a Host Only adapter, or use an adapter that will assign it an IP address in the 192.168.56.0/24 range. It only likes having an IP address in that range.
Treat the box as if it was on the network. Don't try to do anything to it that you could only do with physical access, e.g. break into the BIOS or the Grub boot loader.
There are a few flag.txt files to grab. The final one is in the /root/ directory. However, the ultimate goal is to get a root shell.
<h2>Scenario</h2>
"Bull was pissed when you broke into his Minotaur box. He has taken precautions with another website that he is hosting, implementing IDS, whitelisting, and obfuscation techniques. He is now taunting hackers to try and hack him, believing himself to be safe. It is up to you to put him in his place."
<h2>Location</h2>
The VM is located at https://www.dropbox.com/s/e2x79z5ovqqsejg/Fuku.ova?dl=0 [File size: 2GB]
<h2>Hints</h2>
<ol>
Some scripting will probably be needed to find a useful port.
If the machine seems to go down after a while, it probably hasn't. This CTF isn't called Fuku for nothing!
</ol>
Contact @RobertWinkel for more hints.

****************************************************************************************************
Screenshot of SecTalks BNE0x00 - Minotaur

<h2>Minotaur CTF</h2>
Minotaur is a boot2root CTF. Once you load the VM, treat it as a machine you can see on the network, i.e. you don't have physical access to this machine. Therefore, tricks like editing the VM's BIOS or Grub configuration are not allowed. Only remote attacks are permitted.
There are a few flag.txt files around to grab. /root/flag.txt is your ultimate goal.
I suggest you use VirtualBox with a Host Only adapter to run Minotaur fairly painlessly.
The VM will assign itself a specific IP address (in the 192.168.56.0/24 range). Do not change this, as the CTF will not work properly without an IP address of 192.168.56.X.
If you load the .ova file in VirtualBox, you can see this machine from another VirtualBox machine with a "Host Only" network adapter.
You can see the machine from VMWare Workstation by:
- Going into Virtual Network Editor and changing the VMnet0 network to "Bridged to: VirtualBox Host-Only Ethernet Adapter".
- Setting your VMWare network adapter to Custom (VMnet0)
- If necessary, resetting your network adapter (e.g. ifdown eth0 &amp;&amp; ifup eth0) so that you get a 192.168.56.0/24 address.
<h2>Location</h2>
The VM is located here: https://www.dropbox.com/s/zyxbampga87nqv3/minotaur_CTF_BNE0x00.ova?dl=0 [File size: 691MB]
<h2>Hints</h2>
<ol>
This CTF has a couple of fairly heavy password cracking challenges, and some red herrings.
One password you will need is not on rockyou.txt or any other wordlist you may have out there. So you need to think of a way to generate it yourself.
</ol>
Contact @RobertWinkel for more hints.

****************************************************************************************************
Screenshot of SmashTheTux 1.0.1

<h2>SmashTheTux v1.0.1</h2>
<em>by canyoupwn.me</em>
<strong>Introduction to Application Vulnerabilities</strong>
<em>For Educational Purposes</em>
SmashTheTux is a new VM made by canyoupwn.me for those who wants to take a step into the world of binary exploitation.
This VM consists of 9 challenges, each introducing a different type of vulnerability.
SmashTheTux covers basic exploitation of the following weaknesses:

Stack Overflow Vulnerability
Off-by-One Vulnerability
Integer Overflow
Format String Vulnerability
Race Conditions
File Access Weaknesses
Heap Overflow Vulnerability

Credentials =&gt; <code>tux</code>:<code>tux</code>, <code>root</code>:<code>1N33dP0w3r</code>
Have fun!
<hr/>
<h2>History</h2>

SmashTheTux v1.0.1 (01/04/2016)

Fixed 0x02 file permissions


SmashTheTux v1.0.1 (18/03/2016)

First Public Release


****************************************************************************************************
Screenshot of Kevgir 1

<h2>Kevgir</h2>
<em>by canyoupwn.me</em>
<strong>Multi Vulnerable Virtual Machine</strong>
<em>For Educational Purposes</em>
Kevgir has designed by canyoupwnme team for training, hacking practices and exploiting. Kevgir has lots of vulnerable services and web applications for testing. We are happy to announced that.
Have fun!
Default username:pass =&gt; <code>user</code>:<code>resu</code>

Bruteforce Attacks
Web Application Vulnerabilities
Hacking with Redis
Hacking with Tomcat, Jenkins
Hacking with Misconfigurations
Hacking with CMS Exploits
Local Privilege Escalation
And other vulnerabilities.


****************************************************************************************************
Screenshot of PRIMER 1.0.1

<pre><code>         _         _            _        _   _        _            _
        /\ \      /\ \         /\ \     /\_\/\_\ _   /\ \         /\ \
       /  \ \    /  \ \        \ \ \   / / / / //\_\/  \ \       /  \ \
      / /\ \ \  / /\ \ \       /\ \_\ /\ \/ \ \/ / / /\ \ \     / /\ \ \
     / / /\ \_\/ / /\ \_\     / /\/_//  \____\__/ / / /\ \_\   / / /\ \_\
    / / /_/ / / / /_/ / /    / / /  / /\/________/ /_/_ \/_/  / / /_/ / /
   / / /__\/ / / /__\/ /    / / /  / / /\/_// / / /____/\    / / /__\/ /
  / / /_____/ / /_____/    / / /  / / /    / / / /\____\/   / / /_____/
 / / /     / / /\ \ \  ___/ / /__/ / /    / / / / /______  / / /\ \ \
/ / /     / / /  \ \ \/\__\/_/___\/_/    / / / / /_______\/ / /  \ \ \
\/_/      \/_/    \_\/\/_________/       \/_/\/__________/\/_/    \_\/
</code></pre>
<h2>Installation</h2>
1) Run the OVA in a VM and connect to the webserver
2) Have Fun!
<h2>Made by</h2>
couchsofa
<h2>Thanks to</h2>
morbidick
einball
sarah
I would probably have never finished',
this project without you guys ;)',
mostley
For hinting me to Erik Österberg's Terminal.js
0xBEEF
For providing fuel in the form of fudge
and premium grilled goods
<hr/>
More information: http://wiki.fablab-karlsruhe.de/doku.php?id=projekte:primer
<hr/>
<h4>Motivation</h4>
A friend wanted to get into some simple exploits. I suggested starting out with web security, she was all for it. But when I started browsing vulnhub and the likes I couldn't find anything like I had in mind. So I wrote my own.
<h4>Concept</h4>
This is a story based challenge written in a style heavily inspired by Neil Stephensons Snow Crash and William Gibsons Sprawl Trilogy. Each chapter is unlocked by solving the puzzle. From hardcoded clear text javascript password checks, SQL-injections and cracking hashes to a simulated terminal. You only need to start the VM, a webserver will come up and you can connect with your browser. In fact you never have to leave the browser.
<h4>Goal</h4>
Teach some basic well known techniques and attacks. Spark some curiosity, make the user look at the source code and try to figure out what's going on behind the scenes. The main goal is to give a nice welcoming intro to the scene and hopefully also teach something about ethics and responsibility.
<hr/>
<h2>Change log</h2>
v1.0.1 - 2016-01-15: https://twitter.com/CouchSofa/status/688129147848138752
v1.0.0 - 2015-10-27: https://twitter.com/CouchSofa/status/659148660152909824

****************************************************************************************************
Screenshot of Csharp VulnSoap

The CsharpVulnSoap virtual appliance is a purposefully vulnerable SOAP service, focusing on using XML, which is a core feature of APIs implemented using SOAP. The web application, listening on port 80, allows you to list, create, and delete users in the PostgreSQL database. The web application is written in the C# programming language and uses apache+mod_mono to run. The main focus of intentional vulnerabilities was SQL injections.
The vulnerable SOAP service is available on http://&lt;ip&gt;/Vulnerable.asmx, and by appending ?WSDL to the URL, you can get an XML document detailing the functions exposed by the service. Using this document, you can automatically fuzz the endpoint for any vulnerabilities by parsing the document and creating the HTTP requests expected programmatically.
The SQL injections yield a variety of potential exploit techniques since different SQL verbs are used to perform actions against the server. For instance, a SQL injection in an INSERT statement may not be exploitable in the same ways the DELETE or SELECT statements will be. Using a tool like sqlmap will help you learn how to exploit each SQL injection vulnerability using a variety of techniques.
If you are curious how sqlmap is performing the checks for, and ultimately exploiting, the vulnerabilities in the web application, you can use the --proxy option for sqlmap and pass the HTTP requests through Burpsuite. You can then see in the HTTP history tab the raw HTTP requests made by sqlmap.

****************************************************************************************************
Screenshot of Csharp VulnJson

The CsharpVulnJson virtual appliance is a purposefully vulnerable web application, focusing on HTTP requests using JSON to receive and transmit data between the client and the server. The web application, listening on port 80, allows you to create, find, and delete users in the PostgreSQL database. The web application is written in the C# programming language, uses apache+mod_mono to run, and is, at the very least, exploitable by XSS and SQL injections.
The SQL injections yield a variety of potential exploit techniques since different SQL verbs are used to perform actions against the server. For instance, a SQL injection in an INSERT statement may not be exploitable in the same ways the DELETE or SELECT statements will be. Using a tool like sqlmap will help you learn how to exploit each SQL injection vulnerability using a variety of techniques.
If you are curious how sqlmap is performing the checks for, and ultimately exploiting, the vulnerabilities in the web application, you can use the --proxy option for sqlmap and pass the HTTP requests through Burpsuite. You can then see in the HTTP history tab the raw HTTP requests made by sqlmap.

****************************************************************************************************
Screenshot of FristiLeaks 1.3

<h4>About:</h4>
<pre><code>Name: Fristileaks 1.3
Author: Ar0xA
Series: Fristileaks
Style: Enumeration/Follow the breadcrumbs
Goal: get root (uid 0) and read the flag file
Tester(s): dqi, barrebas
Difficulty: Basic
</code></pre>
<h4>Description:</h4>
<pre><code>A small VM made for a Dutch informal hacker meetup called Fristileaks. Meant to be broken in a few hours without requiring debuggers, reverse engineering, etc..
</code></pre>

****************************************************************************************************
Screenshot of SickOs 1.1

<h2>About Release</h2>
<pre><code>Name........: SickOs1.1
Date Release: 11 Dec 2015
Author......: D4rk
Series......: SickOs
Objective...: Get /root/a0216ea4d51874464078c618298b1367.txt
Tester(s)...: h1tch1
Twitter.....: https://twitter.com/D4rk36
</code></pre>
<h2>Description:</h2>
<pre><code>This CTF gives a clear analogy how hacking strategies can be performed on a network to compromise it in a safe environment. This vm is very similar to labs I faced in OSCP. The objective being to compromise the network/machine and gain Administrative/root privileges on them.
</code></pre>
<h2>File Information:</h2>
<pre><code>FileName: sick0s1.1.7z
File Size: 652.52 MB
MD5: 396e46897c54da6ded6604b861c806b7
SHA1: 3578a10ba92f860c2f0d8934ec5a9bbffc4c7859
</code></pre>
<h2>Virtual Machine:</h2>
<pre><code>Format: 7z
Operating System: Ubuntu
Tested: VMware Workstation 11.0.0 build-2305329
</code></pre>
<h2>Networking:</h2>
<pre><code>DHCP service: Enabled
IP address: Automatically assign
</code></pre>
<h2>Flag(s):</h2>
<pre><code>Yes
</code></pre>

****************************************************************************************************
Screenshot of NETinVM November 3, 2016

<h1>NETinVM</h1>
A tool for teaching and learning about systems, networks and security
Authors: Carlos Perez &amp; David Perez
Date: 2016-11-03
<h2>Introduction</h2>
NETinVM is a VMware virtual machine image that provides the user with a complete computer network. For this reason, NETinVM can be used for learning about operating systems, computer networks and system and network security.
In addition, since NETinVM is a VMware image, it can be used for demonstrations (i.e. in classrooms) that can be reproduced by students either in a laboratory or on their own laptop and thus, at home, at the library... For these reasons we present NETinVM as an educational tool.
<h2>Description of NETinVM</h2>
NETinVM is a VMware virtual machine image that contains, ready to run, a series of User-mode Linux (UML) virtual machines. When started, the UML virtual machines create a whole computer network; hence the name NETinVM, an acronym for NETwork in Virtual Machine. This virtual network has been called 'example.net' and has fully qualified domain names defined for the systems: 'base.example.net', 'fw.example.net', etc.
All of the virtual machines use the Linux operating system. The VMware virtual machine is called 'base' and it runs openSUSE 13.2. User-mode Linux machines use Debian 6.0 and they have different names depending on their network location, because they are grouped into three different subnets: corporate, perimeter and external. The subnetworks are named 'int' (for internal network), 'dmz' (for DMZ or demilitarized zone, usually used as a synonym for perimeter network) and 'ext' (for external network).
One of the UML machines, 'fw', interconnects the three networks ('int, 'dmz' and 'ext'), allowing for communication and packet filtering. The rest of the UML machines have only one network interface, connected to the network they are named after:
<code>int&lt;X&gt;</code>
+ UMLs connected to the internal network. <x> can take values from 'a' to 'f', both inclusive. These machines only offer SSH service by default.</x>
<code>dmz&lt;X&gt;</code>
+ UMLs connected to the perimeter network (DMZ). They are supposed to be bastion nodes. Two preconfigured bastion nodes are provided, each one with its appropriate alias:
+ 'dmza' is aliased as 'www.example.net' and it offers HTTP and HTTPS services.
+ 'dmzb' is aliased as 'ftp.example.net' and it offers FTP.
<code>ext&lt;X&gt;</code>
+ UMLs connected to the external network (ie: Internet).
Because a picture paints a thousand words, or so they say, the following figure shows NETinVM with all of the virtual machines running inside.
<img alt="" src="https://download.vulnhub.com/netinvm/netinvm_general.png"/>
<em>General view of NETinVM in VMware. The document <a href="https://download.vulnhub.com/netinvm/example-net.pdf">example-net.pdf</a> offers a detailed view.</em> 
All of the elements referenced before are shown in the image with their IP and ethernet addresses. The following rules have been used for assigning addresses:

IP addresses are of the form 10.5.<net>.<machine>, where <net> is either 0 ('ext'), 1 ('dmz') or 2 ('int'), and <machine> is either 10 for 'exta', 'dmza' or 'inta', 11 for 'b' and so on up to 15 for 'f'.</machine></net></machine></net>
Network masks are 24 bits (255.255.255.0).
Ethernet addresses are CA:FE:00:00:0<net>:0<machine>, where <net> is either 0, 1 or 2 (following the same domain rule as IP addressing) and <machine> is either a, b, c, d, e or f.</machine></net></machine></net>
The interfaces of 'fw' use 254 for IP and FE for ethernet.
The interfaces of 'base' use 1 for IP and 01 for ethernet.

In addition to the computers and networks already described, the figure also shows the real computer where NETinVM runs ('REAL COMPUTER') and VMware Player's typical network interface ('vmnet8'), which optionally interconnects NETinVM's networks with the external word.
When they boot, all UML virtual machines get their network configuration from 'base', which provides DHCP and DNS services to the three NETinVM networks through its interfaces 'tap0', 'tap1' and 'tap2'.
Routing works as follows:

The default gateway for the internal and perimeter networks (machines 'int<x>' and 'dmz<x>') is 'fw' (more specifically, the IP address of 'fw' in the corresponding internal or perimeter subnet).</x></x>
The default gateway for 'fw' is 'base' (its external network address).
'base' (its external network address) is also the default gateway for machines in the external network ('ext<x>'), but they are configured to use 'fw' (external network address) as the gateway for accessing machines in the perimeter and internal networks.</x>
'fw' applies NAT (SNAT, Masquerading) to all network traffic coming into it from the internal and perimeter networks and going out through its interface in the external network. So, these packets get to the external network with a source IP address of 10.5.0.254 (fw's IP address in the external network)
Thus, IP traffic exchanged among the three networks goes through 'fw', while traffic going out from NETinVM to the external world goes through 'fw' if (and only if) it comes from the internal or perimeter networks. All traffic going to the real world (outside NETinVM) exits through 'base' which, as 'fw' does, applies IP forwarding and NAT to this outgoing traffic.

Communication between 'base' and any UML machine, in both directions, is direct, without going through 'fw'. (When the communication is started from a UML machine, the IP address of the interface of 'base' in the corresponding network must be used.) This configuration permits access from 'base' to all UML machines using SSH independently of the packet filtering configuration at 'fw'.
As an additional consideration, please note that the SNAT configuration in 'fw' described above is necessary for responses to outgoing connections to the Internet originating from the internal or perimeter networks to come back through 'fw'. Otherwise they would be routed directly from 'base' to the UML machine through 'tap1' or 'tap2' without traversing 'fw'.

****************************************************************************************************
Screenshot of The Wall 1

<pre><code>Title: The Wall
File: thewall.ova
md5sum: a5e6ebde160239bce605cca8e1cf207d
Size: 299.4MB
Hypervisor: Created with VMWare Fusion.  Tested with vmware (fusion) and virtualbox.
Author:  @xerubus
Test Bunnies:  Rasta Mouse and TheColonial
Difficulty: Intermediate
</code></pre>
This boot2root box is exclusive to VulnHub. If you have a crack at the challenge, please consider supporting VulnHub for the great work they do for our offsec community.
<h2></h2>
<h1>Description</h1>
<h2></h2>
In 1965, one of the most influential bands of our times was formed.. Pink Floyd. This boot2root box has been created to celebrate 50 years of Pink Floyd's contribution to the music industry, with each challenge giving the attacker an introduction to each member of the Floyd. 
You challenge is simple... set your controls for the heart of the sun, get root, and grab the flag! Rock on!
<h2></h2>
<h1>Notes</h1>
<h2></h2>

DHCP (Automatically assigned)
IMPORTANT: The vm <strong>IS</strong> working as intended if you receive a successful DHCP lease as seen in the boot up sequence.
'<code>thewall</code>' vm must be on the same subnet as the attacking machine <strong>AND</strong> the attacking machine should ideally be a vm on the same network as '<code>thewall</code>'. If you choose to use a physical box as the attacking machine, '<code>thewall</code>' must exist on the same network via a bridged interface.


****************************************************************************************************
Screenshot of Lord Of The Root 1.0.1

I created this machine to help others learn some basic CTF hacking strategies and some tools. I aimed this machine to be very similar in difficulty to those I was breaking on the OSCP.
This is a boot-to-root machine will not require any guest interaction.
There are two designed methods for privilege escalation.

23/09/2015 == v1.0.1
22/09/2015 == v1.0

<hr/>
If you are having issues with VirtualBox, try the following: 

Downloaded LordOfTheRoot_1.0.1.ova (confirmed file hash)
Downloaded and installed VMWare ovftool.
Converted the OVA to OVF using ovftool.

Modified the OVF using text editor, and did the following:
replaced all references to "ElementName" with "Caption"
replaced the single reference to "vmware.sata.ahci" with "AHCI"


Saved the OVF.
+Deleted the .mf (Manifest) file. If you don't you get an error when importing, saying the SHA doesn't match for the OVF (I also tried modifying the hash, but no luck).

Try import the OVF file, and it should work fine.

Source: https://twitter.com/dooktwit/status/646840273482330112

****************************************************************************************************
Screenshot of SpyderSec Challenge

<h3>The Challenge:</h3>
You are looking for two flags. Using discovered pointers in various elements of the running web application you can deduce the first flag (a downloadable file) which is required to find the second flag (a text file). Look, read and maybe even listen. You will need to use basic web application recon skills as well as some forensics to find both flags. 
<strong>Level</strong>: Intermediate 
<h3>Description:</h3>
The virtual machine comes in an OVA format, and is a generic 32 bit CentOS Linux build with a single available service (HTTP) where the challenge resides. Feel free to enable bridged networking to have the VM automatically be assigned a DHCP address. This VM has been tested in VMware Workstation 12 Player (choose "Retry" if needed), and VirtualBox 4.3. 
<strong>SHA1</strong>: f60f497f3f8fda0d0aeccfc84dad8e19ad164f55 Challenge.ova 
<strong>Twitter</strong>: @SpyderSec

****************************************************************************************************
Screenshot of Acid Reloaded

<h3>SETUP</h3>
The named of the Virtual machine is "Acid-Reloaded". This Virtual Machine contains both network logics and web logics. I have added new concept here and let's see how many of you think more logically. :-)
You need to extract the rar and run the vmx using VMplayer . The machine has DHCP active list so once automatically assign an IP network, the next step will be to identify the target and discover the / the service / s to start the game.
<h3>GOAL</h3>
Escalate the privileges to root user and capture the flag. Once any one able to beat the box then shoot me a mail

****************************************************************************************************
Screenshot of NullByte 1

Codename: NB0x01
Download: ly0n.me/nullbyte/NullByte.ova.zip
Objetcive: Get to /root/proof.txt and follow the instructions.
Level: Basic to intermediate.
Description: Boot2root, box will get IP from dhcp, works fine with virtualbox&amp;vmware.
Hints: Use your lateral thinking skills, maybe you’ll need to write some code.

****************************************************************************************************
Screenshot of Acid Server

Welcome to the world of Acid.
Fairy tails uses secret keys to open the magical doors.
<h4>SETUP</h4>
The named of the Virtual machine is "<strong>Acid Serve</strong>r". This Virtual Machine is completely <strong>web based</strong>. I have added little new concept here and hope people will enjoy solving this.You need to extract the <strong>rar</strong> and run the <strong>vmx</strong> using <strong>VMplayer</strong> . The machine has <strong>DHCP</strong> active list so once automatically assign an IP network, the next step will be to identify the target and discover the / the service / s to start the game.
<h4>GOAL</h4>
Escalate the privileges to root and capture the flag. Once anyone able to beat the machine then please let me know.
<hr/>
Twitter: <a href="https://twitter.com/m_avinash143">https://twitter.com/m_avinash143</a>
LinkedIn: <a href="https://in.linkedin.com/pub/avinash-thapa/101/406/4b5">https://in.linkedin.com/pub/avinash-thapa/101/406/4b5</a>

****************************************************************************************************
Screenshot of /dev/random Pipe

<pre><code>__________.__               
\______   \__|_____   ____  
 |     ___/  \____ \_/ __ \ 
 |    |   |  |  |_&gt; &gt;  ___/ 
 |____|   |__|   __/ \___  &gt;
             |__|        \/  ·VM· (MiNi CHaLLeNGe BuiLT FoR ZaCoN Vi)

+-----------------------------------------------------------------------+
|  cReaTeD....: sagi- (@s4gi_)      |  DaTe......: 2015-10-02           |
|  oS.........: Linux               |  oBJecTiVe.: Get /root/flag.txt   |
|                                   |  GReeTZ....: @zac0n               |
|                                   |  TeSTeRs...: @leonjza             |
|                                   |              @barrebas            |
+-----------------------------------------------------------------------+
</code></pre>

****************************************************************************************************
Screenshot of /dev/random Sleepy

<pre><code>  _________.__                              
 /   _____/|  |   ____   ____ ______ ___.__.
 \_____  \ |  | _/ __ \_/ __ \\____ &lt;   |  |
 /        \|  |_\  ___/\  ___/|  |_&gt; &gt;___  |
/_______  /|____/\___  &gt;\___  &gt;   __// ____| ·VM·
        \/           \/     \/|__|   \/

+-----------------------------------------------------------------------+
|  cReaTeD....: sagi- (@s4gi_)      |  DaTe......: 2015-10-02           |
|  oS.........: Linux               |  oBJecTiVe.: Get /root/flag.txt   |
|                                   |  GReeTZ....: @nanomebia           |
|                                   |  TeSTeRs...: @barrebas            |
|                                   |              Christopher Panayi   |
+-----------------------------------------------------------------------+
|  VM HiSToRY:                                                          |
|  v1.0 - Public release @ ZaCon VI "Capture the Flag (and in between)" |
|  V0.1 - Private release @ SecTalks Perth                              |
+-----------------------------------------------------------------------+
</code></pre>

****************************************************************************************************
Screenshot of Flick 2

<pre><code> _____  _      ____   __  __  _      ____  ____
|     || |    |    | /  ]|  |/ ]    |    ||    |
|   __|| |     |  | /  / |  ' /      |  |  |  |
|  |_  | |___  |  |/  /  |    \      |  |  |  |
|   _] |     | |  /   \_ |     \     |  |  |  |
|  |   |     | |  \     ||  .  |     |  |  |  |
|__|   |_____||____\____||__|\_|    |____||____|
                                    by: @leonjza
</code></pre>
Welcome!
Your challenge, should you choose to accept, is to gain root
access on the server! The employees over at Flick Inc. have
been hard at work prepping the release of their server
checker app. Amidst all the chaos, they finally have a version
ready for testing before it goes live.
You have been given a pre-production build of the Android .apk
that will soon appear on the Play Store, together with a VM
sample of the server that they want to deploy to their cloud
hosting provider.
The .apk may be installed on a phone (though I wont be offended if
you don't trust me ;]) or run in an android emulator such as the
Android Studio (https://developer.android.com/sdk/index.html).
Good Luck!
$ shasum *
e74061c5348fef33d00f5f4f2aee9e921c591129 flick-check-dist.apk
e6fbcd5aab5ed95c54d02855fdfbad74587f3db7 flickII-dist.ova
Note: Vmware will complain about the OVF specification. Just
click retry on the import and everything should be ok!
Shouts:
<pre><code>@barrebas for testing and patience
@s4gi_ for testing and the inspiration
</code></pre>

****************************************************************************************************
Screenshot of Brainpan 3

<pre><code>
  __ )    _ \      \    _ _|   \  |   _ \    \      \  |     _ _| _ _| _ _| 
  __ \   |   |    _ \     |     \ |  |   |  _ \      \ |       |    |    |  
  |   |  __ &lt;    ___ \    |   |\  |  ___/  ___ \   |\  |       |    |    |  
 ____/  _| \_\ _/    _\ ___| _| \_| _|   _/    _\ _| \_|     ___| ___| ___|

                                                            by superkojiman
                                                            techorganic.com
</code></pre>
<h2>DISCLAIMER</h2>
By using this virtual machine, you agree that in no event will I be liable for any loss or damage including without limitation, indirect or consequential loss or damage, or any loss or damage whatsoever arising from loss of data or profits arising out of or in connection with the use of this software.
TL;DR: If something bad happens, it's not my fault.
<h2>SETUP</h2>
Brainpan 3 has been tested and found to work with VMware Player, VMware Fusion, and Virtual Box. 
Check to make sure Brainpan_III.ova has following checksums so you know your download is intact:
MD5 : 170e0d8b26ab721587537fcde69087a0
SHA1: ed9ae53c556a1ce6988b3a54621dd6469c8b8aa5
Import Brainpan_III.ova into your preferred hypervisor and configure the network settings to your needs. It will get an IP address via DHCP, but it's recommended you run it within a NAT or visible to the host OS only since it is vulnerable to attacks.
<h2>GOAL</h2>
Get root and get the flag. 
<h2>TESTERS</h2>

barrebas : https://twitter.com/barrebas
Swappage : https://twitter.com/Swappage


****************************************************************************************************
Screenshot of Darknet 1.0

Darknet has a bit of everything, a sauce with a touch of makeup and frustration that I hope will lead hours of fun for migraines and who dares to conquer his chambers. 
As the target gets used will read the file contents /root/flag.txt obviously once climbed the privileges necessary to accomplish the task.
The image can be mounted with VirtualBox . The machine has DHCP active list so once automatically assign an IP network, the next step will be to identify the target and discover the / the service / s to start the game. Good luck !. If you want to send in pdf format solucionarios can do so at the following address: s3csignal [at] gmail [dot] com

****************************************************************************************************
Screenshot of Pentester Lab Play XML Entities

This exercise covers the exploitation of a session injection in the Play framework. This issue can be used to tamper with the content of the session while bypassing the signing mechanism

****************************************************************************************************
Screenshot of TopHatSec Freshly

The goal of this challenge is to break into the machine via the web and find the secret hidden in a sensitive file. If you can find the secret, send me an email for verification. :)
There are a couple of different ways that you can go with this one. Good luck!
Simply download and import the OVA file into virtualbox!

****************************************************************************************************
Screenshot of TopHatSec ZorZ

ZORZ is another VM that will challenge your webapp skills. There are 3 separate challenges (web pages) on this machine. It should be pretty straight forward. I have explained as much as I can in the readme file:
Welcome to the ZorZ VM Challenge
This machine will probably test your web app skills once again.
There are 3 different pages that should be focused on (you will see!)
If you solve one or all three pages, please send me an email and
quick write up on how you solved each challenge. Your goal is to successfully
upload a webshell or malicious file to the server. If you can execute
system commands on this box, thats good enough!!! I hope you have fun!
<a class="__cf_email__" data-cfemail="c8a9aca5a1a688bca7b8e5a0a9bce5bbadabe6aba7a5" href="/cdn-cgi/l/email-protection">[email protected]</a>

****************************************************************************************************
Screenshot of TopHatSec FartKnocker

New VM challenge that should be fun for people trying to get into packet analysis!
There are several steps to this box. I created it with virtualbox. The VM is built on:
Ubuntu 14.04
32 bit
If you beat the box then please shoot me an email! Have fun guys!
P.S. I got the word "Fart Knocker" from watching beavis and butthead back in the day. Otherwise you kids might not understand :) 

****************************************************************************************************
Screenshot of ROP Primer 0.2

Our resident ROP ninja <a href="https://twitter.com/barrebas">barrebas</a> recently gave the team a bootcamp on Return Oriented Programming. The presentation was followed by a demo walkthrough on writing a ROP exploit on a vulnerable application. Since the presentation was well received, he’s decided to make the slides available to everyone. You can view them at <a href="https://speakerdeck.com/barrebas/rop-primer">https://speakerdeck.com/barrebas/rop-primer</a>. 
We hope you enjoy it!
<hr/>
<pre><code>Username: root
Password: toor

Username: level0
Password: warmup
</code></pre>
<hr/>
<pre><code>ROP Primer
----------

This VM is meant as a small introduction to 32-bit return-oriented-programming on Linux. It contains three vulnerable binaries, that must be exploited using ROP.

The machine is built and tested in VirtualBox 4.3.20. It's an Ubuntu 32 bit VM, with ASLR disabled. Useful tools like gdb-peda are installed. A description of the levels, including instructions, can be found on the webserver.

A big shout-out to my team mates of the Vulnhub CTF Team!

@barrebas, March 2015 &amp; June 2015

rop-primer-v0.2.ova:
---------------
MD5:  840c75497f54578497a6e44df2f96047
SHA1: 2cb14d78fd1ff7b5a7895447969fde8ca9c06ef3
</code></pre>

****************************************************************************************************
Screenshot of Sokar 1

<pre><code>Sokar

Filename:  sokar.ova
MD5:  75f5c48e65fa81dc81ef3b58b7ee6bab
SHA1:  5f4aca536898bf962bfcfd2aaccb66fda1ab790a
Author:  Rasta Mouse
Testers:  Barrebas &amp; TheColonial

=====
Notes
=====
DHCP (Automatically Assigned)

    Special note to VMWare users - you must manually set the
    NIC MAC address to 08:00:27:F2:40:DB

Get root, then the flag!
</code></pre>

****************************************************************************************************
Screenshot of The Frequency 1


Objective: gain shell access for each level. Then reach root.
Note: figure out what the blips are, where they are, and how to decode each one.


****************************************************************************************************
Screenshot of Pandora's Box 1

<pre><code>-=Pandora's Box =-
               ___
             (((((\\
              6_6 ((,
          __ -\_ __\--.
       ,-',\\` '//,\_  \
      |.----&amp;----. \ `. \
      (__,___,__(_  \   |
  _____|        | |__`--'____
       |________|,'        hjw

Filename: pandoras_b0x.ova
MD5: bf3eb20ca837edccc7edbf627e095bbd
SHA1: 52652bb5f886f1253ff43a21536bc4fe09bdd201
Author: c0ne
Testers: Barrebas / Jelle
Difficulty: Medium

About:
Pandora's box is a Boot2Root VM focused on binary exploitation and 
reverse engineering. You have to complete all levels to r00t the box. 
Some levels come with a readme file which you should read.

Usage:
Import, boot and wait 60 seconds for everything to start up before 
scanning it.

Shootout:
Major thanks to Barrebas and Jelle for testing the VM and challenges 
and the feedback.


c0ne
</code></pre>

****************************************************************************************************
Screenshot of The Purge 1


Objective: gain shell access and root the box.
Hardness: intermediate-&gt; advanced.
Note: The box doesn't respond to ping, so be sure to check the DHCP lease.


****************************************************************************************************
Screenshot of Pegasus 1

Pegasus
<pre><code>         .-.
   %%%%,/   :-.
   % `%%%, /   `\   _,
   |' )`%%|      '-' /            Filename:   pegasus.ova
   \_/\  %%%/`-.___.'             MD5:        5046e330ff42e9adee0a42b63694cbfe
    __/  %%%"--"""-.%,            SHA1:       f18b7437ca3c96f76a2e1b06f569186b63567dd5
  /`__|  %%         \%%           Difficulty: Intermediate
  \\  \   /   |     /'%,          Author:     Knaps
   \]  | /----'.   &lt; `%,          Tester:     Mulitia
       ||       `&gt;&gt; &gt;
       ||       ///`
       /(      //(
</code></pre>
Welcome to my first boot2root VM! Inspired by various CTF events I took part in and by couple cool concepts I learnt in the last couple months.
Rules of engagement are simple - find a way in, escalate your privileges all the way up to the root and get the flag!
As with all VMs like this, think outside the box, don't jump to conclusions too early and "read between the lines" :)
The VM has been tested on VMWare and VirtualBox, just import it, ensure the network is set as "Host Only" and run it. It should pick up the IP address automatically.
Enjoy! :)

****************************************************************************************************
Screenshot of Underdist 3

Underc0de Weekend is a weekly challenge we (underc0de) are doing. The goal is to be the first to resolve it, to earn points and prizes (http://underc0de.org/underweekend.php).
Enjoy

****************************************************************************************************
Screenshot of Tr0ll 2

The next machine in the Tr0ll series of VMs. This one is a step up in difficulty from the original Tr0ll but the time required to solve is approximately the same, and make no mistake, trolls are still present! :) 
Difficulty is beginner++ to intermediate. 
The VM should pull a valid IP from DHCP. This VM has been verified to work on VMware workstation 5, VMware player 5, VMware Fusion, and Virtual box. Virtual box users may need to enable the additional network card for it to pull a valid IP address.
Special thanks to @Eagle11, @superkojiman and @leonjza for suffering through the testing and the members of #overflowsec on freenode for giving me ideas.
If you have issues with the machine, feel free to contact me at @Maleus21 or maleus <at> overflowsecurity.com.</at>
-Maleus
www.overflowsecurity.com

****************************************************************************************************
Screenshot of Kvasir I

<hr/>
Kvasir 1
<hr/>
Filename: kvasir1.ova
MD5: e987e8bbe319db072246ab749912ea91
SHA1: 029a59188cd3375fa50a5115db561f8a8ef69d4a
Author: Rasta Mouse
Testers: Barrebas &amp; OJ
<hr/>
Notes to the Player
<hr/>
As part of the challenge, Kvasir utilises LXC to provide kernel isolation. When the host VM boots, it takes can take a little bit of time before the containers become available.
It is therefore advised to wait 30-60 seconds after the login prompt is presented, before attacking the VM.
A few other pointers:

Not every LXC is ‘rootable’
No SSH brute-forcing is required


****************************************************************************************************
Screenshot of Knock-Knock 1.1

<pre><code> ____  __.                     __              ____  __.                     __      ____ 
|    |/ _| ____   ____   ____ |  | __         |    |/ _| ____   ____   ____ |  | __ /_   |
|      &lt;  /    \ /  _ \_/ ___\|  |/ /  ______ |      &lt;  /    \ /  _ \_/ ___\|  |/ /  |   |
|    |  \|   |  (  &lt;_&gt; )  \___|    &lt;  /_____/ |    |  \|   |  (  &lt;_&gt; )  \___|    &lt;   |   |
|____|__ \___|  /\____/ \___  &gt;__|_ \         |____|__ \___|  /\____/ \___  &gt;__|_ \  |___|
        \/    \/            \/     \/                 \/    \/            \/     \/
</code></pre>
Pretty much thought of a pretty neat idea I hadn't seen done before with a VM, and I wanted to turn it into reality! 
Your job is to escalate to root, and find the flag.
Since I've gotten a few PM's, remember: There is a difference between "Port Unreachable" and "Host Unreachable". DHCP is not broken ;)
Gotta give a huge shoutout to c0ne for helping to creating the binary challenge, and rasta_mouse and recrudesce for testing :)
Also, gotta thank barrebas who was able to find a way to make things easier... but of course that is fixed with this update! ;)
MD5 -- 3b6839a28b4be64bd71598aa374ef4a6 knock-knock-1-1.ova 
SHA1 -- 0ec29d8baad9997fc250bda65a307e0f674e4180 knock-knock-1-1.ova
Feel free to hit me up in #vulnhub on freenode -- zer0w1re

****************************************************************************************************
Screenshot of Pentester Lab CVE-2014-6271: ShellShock

Quickly created an exercise for cve-2014-6271:
Source: <a href="https://twitter.com/PentesterLab/status/515079459284594688">https://twitter.com/PentesterLab/status/515079459284594688</a>

****************************************************************************************************
Screenshot of Persistence 1

<pre><code>
 _______  _______  ______    _______  ___   _______  _______  _______  __    _  _______  _______ 
|       ||       ||    _ |  |       ||   | |       ||       ||       ||  |  | ||       ||       |
|    _  ||    ___||   | ||  |  _____||   | |  _____||_     _||    ___||   |_| ||       ||    ___|
|   |_| ||   |___ |   |_||_ | |_____ |   | | |_____   |   |  |   |___ |       ||       ||   |___ 
|    ___||    ___||    __  ||_____  ||   | |_____  |  |   |  |    ___||  _    ||      _||    ___|
|   |    |   |___ |   |  | | _____| ||   |  _____| |  |   |  |   |___ | | |   ||     |_ |   |___ 
|___|    |_______||___|  |_||_______||___| |_______|  |___|  |_______||_|  |__||_______||_______|

         "the fact of continuing in an opinion or course of action in spite of 
      difficulty or opposition"

                                                   by sagi- &amp; superkojiman
</code></pre>
<h2>DISCLAIMER</h2>
By using this virtual machine, you agree that in no event will we be liable for any loss or damage including without limitation, indirect or consequential loss or damage, or any loss or damage whatsoever arising from loss of data or profits arising out of or in connection with the use of this software.
TL;DR - You are about to load up a virtual machine with vulnerabilities created by hackers. If something bad happens, it's not our fault.
<h2>ABOUT</h2>
Persistence aims to provide you with challenging obstacles that block your path to victory. It is perhaps best described by quotes made by some famous people: 
"A little more persistence, a little more effort, and what seemed hopeless failure may turn to glorious success." - Calvin Coolidge
"Energy and persistence conquer all things." - Benjamin Franklin
"Persistence and resilience only come from having been given the chance to work though difficult problems." - Gever Tulley
<h2>GOAL</h2>
Get a root shell and read the contents of /root/flag.txt to complete the challenge!
<h2>SETUP</h2>
The virtual machine will get an IP address via DHCP, and it has been tested on the following hypervisors:
VMware Fusion 6
VMware Player 6
VMware Workstation 10
VirtualBox 4.3
<h2>SHOUT OUTS</h2>
Thanks @VulnHub for kindly hosting this challenge, and thanks to @recrudesce for testing it and providing valuable feedback!

****************************************************************************************************
Screenshot of OwlNest 1.0.2

<pre><code>
         ,' ``',
        '  (o)(o)
       `       &gt; ;
       ',     . ...-'"""""`'.
     .'`',`''''`________:   ":
   (`'. '.;  |           ;/\;\;
  (`',.',.;  |               |
 (,'` .`.,'  |               |
 (,.',.','   |               |
(,.',.-`_____|               |
    __\_ _\_ |               |
             |_______________|
</code></pre>
Welcome to The Owl Nest
Owls are lovely but hates you :)
and maybe after this one, you will hate them too.
Notes from the author:
I hope you will enjoy this game, i spent a fairly high amount of effort to build this, in an attempt to make the game funny, and provide an avarage amount of frustration to the players :)
Even if the machine was tested, maybe there are shortcuts to reach the flag.. hopefully not :)
Expect some curve balls :)
Special thanks goes to Barrebas for testing the VM
Swappage

****************************************************************************************************
Screenshot of Morning Catch Phishing Industries

Morning Catch is a VMware virtual machine, similar to Metasploitable, to demonstrate and teach about targeted client-side attacks and post-exploitation.
On this virtual machine, you will find: a website for a fictitious seafood company, self-contained email infrastructure to receive phishes, and two desktop environments. One desktop environment is a vulnerable Linux client-side attack surface. The other is a vulnerable Windows client-side attack surface.
Morning Catch uses a bleeding edge version of WINE to run a few vulnerable Windows applications AND experiment with post-exploitation tools in a fun and freely re-distributable environment.
<h2>Login Screen</h2>
Your use of Morning Catch starts with the login screen.
Boyd Jenius is the Systems Administrator and his password is ‘password’. Login as Boyd to get to the vulnerable Linux desktop.
Richard Bourne is Morning Catch’s CEO and his password is also ‘password’. Login as Richard to get to the vulnerable Windows desktop.
You can also RDP into the Morning Catch environment.
<h2>Windows Desktop</h2>
Richard’s desktop includes the Windows’ versions of Firefox, Thunderbird, Java, and putty. Open up Thunderbird to check Richard’s email.
You can send a phish to him too. This VM includes a mail server to receive email for users at the morningcatch.ph domain. Open up a terminal and find out the IP address of the VM. Make sure you relay messages through this server. Use [email protected] as the address.
Are you looking for some attacks to try? Here are a few staples:
Spin up a malicious Java Applet and visit it as Richard.
The Firefox add-on attack exploit in the Metasploit Framework is a great candidate.
Or, generate an executable with your payload and run it as Richard. I’m sure he won’t mind.
Morning Catch’s WINE environment runs post-exploitation payloads, to include Windows Meterpreter and Beacon, without too much trouble.
<h2>Linux Desktop</h2>
Boyd’s desktop is the vulnerable Linux attack surface. Boyd has the Linux versions of Firefox, Java, and Thunderbird. Boyd also has an SSH key for the Metasploitable 2 virtual machine. Try to ssh to Metasploitable 2 as root and see what happens.
<h2>Webmail</h2>
Morning Catch also includes RoundCube webmail for all of its users. Use this as a target to clone and harvest passwords from.
<h2>Hopes and Dreams</h2>
Morning Catch isn’t a replacement for a vulnerable Windows lab. It’s a safe and freely redistributable target to experiment with phishing and client-side attacks. It’s my hope that this environment will help more people experiment with and understand these attacks better.
<em>Are you in Las Vegas for BlackHat USA or DEF CON? Stop by the Black Hat Arsenal on Wednesday at 10am for a demo of this new environment and a Morning Catch sticker. I’m also giving away DVDs with a revised Cobalt Strike pen testing lab that uses Morning Catch. Find me at the Cobalt Strike kiosk in the Innovation City portion of the Black Hat USA Exhibitor Hall. I will also give away these DVDs at the Cobalt Strike table in the DEF CON vendor area.</em>

****************************************************************************************************
Screenshot of Tr0ll 1

Tr0ll was inspired by the constant trolling of the machines within the OSCP labs. 
The goal is simple, gain root and get Proof.txt from the /root directory.
Not for the easily frustrated! Fair warning, there be trolls ahead!
Difficulty: Beginner ; Type: boot2root
<hr/>
Special thanks to @OS_Eagle11 and @superkojiman for suffering through the testing all the way to root!
The machine should pull an IP using DHCP, if you have any problems, contact me for a password to get it to working.
Feedback is always appreciated!
@maleus21
<h1>Freenode - Maleus</h1>
MD5SUM (Tr0ll.rar): 318fe0b1c0dd4fa0a8dca43edace8b20

****************************************************************************************************
Screenshot of Flick 1

<pre><code> .o88o. oooo   o8o            oooo
 888 `" `888   `"'            `888
o888oo   888  oooo   .ooooo.   888  oooo
 888     888  `888  d88' `"Y8  888 .8P'
 888     888   888  888        888888.
 888     888   888  888   .o8  888 `88b.
o888o   o888o o888o `Y8bod8P' o888o o888o

Welcome to the flick boot2root!

- Where is the flag?
- What do you need to flick to find it?

Completing "flick" will require some sound
thinking, good enumeration skills &amp; time! The
objective is to find and read the flag that
lives /root/

As a bonus, can you get root command execution?

Shoutout to @barrebas &amp; @TheColonial for testing
it out first :)

$ sha1sum flick.ova
0e65f5a1f2b560d10115796c1adfb03548583db2  flick.ova

Good Luck!
@leonjza
</code></pre>

****************************************************************************************************
Screenshot of Pentester Lab Play Session Injection

<h2>Difficulty</h2>
Beginner
<h2>Details</h2>
This exercise covers the exploitation of a session injection in the Play framework
<h2>What you will learn?</h2>

Session injection
Play framework
Play's cookies


****************************************************************************************************
Screenshot of xerxes 2.0.1

<pre><code>____   ___  ____  ___  __ ____   ___  ____     ____     ____
`MM(   )P' 6MMMMb `MM 6MM `MM(   )P' 6MMMMb   6MMMMb\  6MMMMb
 `MM` ,P  6M'  `Mb MM69 "  `MM` ,P  6M'  `Mb MM'    ` MM'  `Mb
  `MM,P   MM    MM MM'      `MM,P   MM    MM YM.           ,MM
   `MM.   MMMMMMMM MM        `MM.   MMMMMMMM  YMMMMb      ,MM'
   d`MM.  MM       MM        d`MM.  MM            `Mb   ,M'
  d' `MM. YM    d9 MM       d' `MM. YM    d9 L    ,MM ,M'
_d_  _)MM_ YMMMM9 _MM_    _d_  _)MM_ YMMMM9  MYMMMM9  MMMMMMMM



                Welcome.

                Before you lies the mainframe of XERXES.
                Compromise the subsystems and gain access to /root/flag.txt

                                XERXES wishes you
                                 a pleasant stay.



                @barrebas


                Shoutout &amp; Thanks
                -----------------
                Many thanks to
                        TheColonial (@TheColonial) &amp; rasta_mouse (@_RastaMouse)
                for testing!


                File information
                ----------------
                xerxes2.vmdk:

                md5   : 724d4be6ecd126d4591f487d1710f7af
                sha1  : 7978e6dde9e589c5ea90561502b297a8e08147a4
</code></pre>

****************************************************************************************************
Screenshot of SkyTower 1

Welcome to SkyTower:1
This CTF was designed by Telspace Systems for the CTF at the ITWeb Security Summit and BSidesCPT (Cape Town).
The aim is to test intermediate to advanced security enthusiasts in their ability to attack a system using
a multi-faceted approach and obtain the "flag". 
You will require skills across different facets of system and application vulnerabilities, as well as an understanding of various services
and how to attack them. Most of all, your logical thinking and methodical approach to penetration testing will come into
play to allow you to successfully attack this system. Try different variations and approaches. You will most likely find that
automated tools will not assist you. 
We encourage you to try it our for yourself first, give yourself plenty of time and then only revert to the Walkthroughs below. 
Enjoy!
Telspace Systems
@telspacesystems

****************************************************************************************************
Screenshot of Hell 1

Welcome to the challenge. 
This VM is designed to try and entertain the more advanced information security enthusiast. This doesn't exclude beginners however and I'm sure that a few of you could meet the challenge. There is no 'one' focus on the machine, a range of skills such as web exploitation, password cracking, exploit development, binary examination and most of all logical thinking is required to crack the box in the intended way - but who knows there might be some short cuts! 
A few of the skills needed can be seen in some posts on http://netsec.ws. Otherwise enjoy the experience - remember that although vulnerabilities might not jump out at you straight away you may need to try some variations on the normal to get past the protections in place! 
Feel free to discuss the experience on the #vulnhub irc channel on irc.freenode.net. If you want any hints feel free to PM my nick on there (Peleus). You won't get any, but I'll feel all warm and fuzzy inside knowing you're suffering. 
Enjoy.

****************************************************************************************************
Screenshot of CySCA CySCA2014-in-a-Box

CySCA2014-in-a-Box is a Virtual Machine that contains most of the challenges faced by players during CySCA2014. It allows players to complete challenges in their own time, to learn and develop their cyber security skills. The VM includes a static version of the scoring panel with all challenges, required files and flags.
To use CySCA2014 in a box virtual machines, players will need to have either Oracle VirtualBox or VMWare Player installed on their machines. Additionally we recommend players have at least 4GB of RAM. If you have less RAM, you can reduce the amount of RAM available to the VM down to 512MB, however it may adversely affect the speed of some of the challenges.
<strong>CAUTION The VM contains software that is deliberately vulnerable. We advise that you do not attach it to a critical network. Consider using your virtualisation softwares host-only network functionality.</strong>

****************************************************************************************************
Screenshot of Bot Challenges LoBOTomy

I always enjoy creating and releasing vulnerable virtual machines so readers can get a first hand feel of attacking these command and control panels without doing anything illegal. The objective of this vulnerable virtual machine is to get a root shell. The root credentials (for network configuration purposes) are root:password. These credentials are not part of a solution and it is intended that the vulnerable virtual machine be attacked remotely. You can download the LoBOTomy vulnerable virtual machine here.

Brian Wallace AKA @botnet_hunter


****************************************************************************************************
Screenshot of SecOS 1

Not too tired after BSides London? Still want to solve challenges?
Here is the VM I told about during my talk where you'll have to practice some of your skills to retrieve the precious flag located here: /root/flag.txt. This VM is an entry-level boot2root and is web based. 
This VM is the first of a series which I'm currently creating where there will be links between all of them.
Basically, each machine in the series will rely/depend on each other, so keep the flags for the next VMs.
This has been tested on VirtualBox and gets its IP from the DHCP server.
Moreover, if you find yourself bruteforcing, you're doing something wrong. It is not needed and it wasn't designed to be done this way. Instead, focus on exploiting web bugs!
If you have any questions, feel free to ask me on Twitter @PaulWebSec or throw me a mail: paulwebsec(at)gmail(dot)com

****************************************************************************************************
Screenshot of LAMPSecurity CTF8

ctf8.zip contains the compressed virtual machine target (ctf8.vmdk) as well as the PDF walk through instructions.
The latest release fixes some issues with the user cron jobs that check their mail. Earlier versions were prone to memory leaks that would cause the virtualmachine to crash unexpectedly.

****************************************************************************************************
Screenshot of LAMPSecurity CTF7

This is the latest of several releases that are part of the LAMP Security project. The other exercises can be found under the 'Capture the Flag' folder. Note the PDF doesn't include the target image. Download the CTF7plusDocs.zip to get the target image as well as the documentation (in PDF format).

****************************************************************************************************
Screenshot of LAMPSecurity CTF6

The LAMPSecurity project is an effort to produce training and benchmarking tools that can be used to educate information security professionals and test products. Please note there are other capture the flag exercises (not just the latest one). Check the SourceForge site to find other exercises available (http://sourceforge.net/projects/lampsecurity/files/CaptureTheFlag/).
These exercises can be used for training purposes by following this documentation. Alternatively you may wish to test new tools, using the CTF virtual machines as targets. This is especially helpful in evaluating the effectiveness of vulnerability discovery or penetration testing tools.

****************************************************************************************************
Screenshot of LAMPSecurity CTF5

This is the fifth capture the flag exercise. It includes the target virtual virutal machine image as well as a PDF of instructions. The username and password for the targer are deliberately not provided! The idea of the exercise is to compromise the target WITHOUT knowing the username and password. Note that there are other capture the flag exercises. If you like this one, download and try out the others. If you have any questions e-mail me at justin AT madirish DOT net
<hr/>
The LAMPSecurity project is an effort to produce training and benchmarking tools that can be used to educate information security professionals and test products. Please note there are other capture the flag exercises (not just the latest one). Check the SourceForge site to find other exercises available (http://sourceforge.net/projects/lampsecurity/files/CaptureTheFlag/).
These exercises can be used for training purposes by following this documentation. Alternatively you may wish to test new tools, using the CTF virtual machines as targets. This is especially helpful in evaluating the effectiveness of vulnerability discovery or penetration testing tools.

****************************************************************************************************
Screenshot of LAMPSecurity CTF4

Updated to set default runlevel to 3 (no X windows) and fixed DHCP.
This is the fourth capture the flag exercise. It includes the target virtual virutal machine image as well as a PDF of instructions. The username and password for the targer are deliberately not provided! The idea of the exercise is to compromise the target WITHOUT knowing the username and password. Note that there are other capture the flag exercises. If you like this one, download and try out the others. If you have any questions e-mail me at justin AT madirish DOT net.
<hr/>
The LAMPSecurity project is an effort to produce training and benchmarking tools that can be used to educate information security professionals and test products. Please note there are other capture the flag exercises (not just the latest one). Check the SourceForge site to find other exercises available (http://sourceforge.net/projects/lampsecurity/files/CaptureTheFlag/).
These exercises can be used for training purposes by following this documentation. Alternatively you may wish to test new tools, using the CTF virtual machines as targets. This is especially helpful in evaluating the effectiveness of vulnerability discovery or penetration testing tools.

****************************************************************************************************
Screenshot of Pentester Lab CVE-2007-1860: mod_jk double-decoding

<h2>Difficulty</h2>
Beginner
<h2>Details</h2>
This exercise covers the exploitation of CVE-2008-1760. This vulnerability allows an attacker to gain access to unaccessible pages using crafted requests. This is a common trick that a lot of testers miss.
<h2>What you will learn?</h2>

Tomcat
Java WebShell
Exploitation of CVE-2008-1760


****************************************************************************************************
Screenshot of Command Injection ISO 1

We've packaged 10 real world applications into an Ubuntu Desktop based ISO. These applications are vulnerable to command injection attacks which you will need to find and exploit. Please note that not all applications are on port 80 :)
All the best!

****************************************************************************************************
Screenshot of Pentester Lab From SQL injection to Shell

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can from a SQL injection gain access to the administration console. Then in the administration console, how you can run commands on the system.
<h3>What you will learn?</h3>

SQL injection exploitation using UNION
Cracking md5 hashed passwords
Writing a PHP webshell


****************************************************************************************************
Screenshot of Pentester Lab PHP Include And Post Exploitation

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercice describes the exploitation of a local file include with limited access. Once code execution is gained, you will see some post exploitation tricks.
<h3>What you will learn?</h3>
PHP include
Reverse shell with netcat
TCP redirection with socat

****************************************************************************************************
Screenshot of Pentester Lab CVE-2012-1823: PHP CGI

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can exploit CVE-2012-1823 to retrieve the source code of an application and gain code execution.
<h3>What you will learn?</h3>
Exploiting CVE-2012-1823
<em> The basics of metasploit
</em> Details on PHP security features

****************************************************************************************************
Screenshot of Pentester Lab CVE-2012-2661: ActiveRecord SQL injection

<h3>Difficulty</h3>
Advanced
<h3>Details</h3>
This exercise explains how you can exploit CVE-2012-2661 to retrieve information from a database.
<h3>What you will learn?</h3>

Exploiting CVE-2012-2661
Time based SQL injections


****************************************************************************************************
Screenshot of Pentester Lab Introduction to Linux Host Review

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercice explains how to perform a Linux host review, what and how you can check the configuration of a Linux server to ensure it is securely configured. The reviewed system is a traditional Linux-Apache-Mysql-PHP (LAMP) server used to host a blog.
<h3>What you will learn?</h3>

System review
Users review
File system review
Network review
Services review


****************************************************************************************************
Screenshot of Pentester Lab Rack Cookies and Commands Injection

<h3>Difficulty</h3>
Intermediate
<h3>Details</h3>
After a short brute force introduction, this exercice explains the tampering of rack cookie and how you can even manage to modify a signed cookie (if the secret is trivial). Using this issue, you will be able to escalate your privileges and gain commands execution.
<h3>What you will learn?</h3>

Rack Cookies tampering
Writing small web scripts in Ruby
Commands injection attack


****************************************************************************************************
Screenshot of Pentester Lab From SQL injection to Shell: PostgreSQL edition

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can from a SQL injection gain access to the administration console. Then in the administration console, how you can run commands on the system. If you didn't go through From SQL injection to shell, you should start there and move to this exercise later.
<h3>What you will learn?</h3>

SQL injection exploitation using UNION
Cracking md5 hashed passwords
Modifying Apache behavior with .htaccess files
Writing a PHP webshell


****************************************************************************************************
Screenshot of Pentester Lab CVE-2008-1930: Wordpress 2.5 Cookie Integrity Protection Vulnerability

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can exploit CVE-2008-1930 to gain access to the administration interface of a Wordpress installation.
<h3>What you will learn?</h3>

Exploiting CVE-2008-1930
Cookies manipulation
Mis-use of signature


****************************************************************************************************
Screenshot of Pentester Lab Axis2 Web service and Tomcat Manager

<h3>Difficulty</h3>
Intermediate
<h3>Details</h3>
This exercice explains the interactions between Tomcat and Apache, then it will show you how to call and attack an Axis2 Web service. Using information retrieved from this attack, you will be able to gain access to the Tomcat Manager and deploy a WebShell to gain commands execution.
<h3>What you will learn?</h3>

Axis2 Web service
Writing a WebShell in JSP (Java)
Attacking the Tomcat Manager


****************************************************************************************************
Screenshot of Pentester Lab Web For Pentester

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise is a set of the most common web vulnerabilities:
<h3>What you will learn?</h3>

Basics of Web
Basics of HTTP
Detection of common web vulnerabilities:
Cross-Site Scripting
SQL injections
Directory traversal
Command injection
Code injection
XML attacks
LDAP attacks
File upload
Basics of fingerprinting


****************************************************************************************************
Screenshot of Pentester Lab CVE-2012-6081: MoinMoin code exec

<h3>Difficulty</h3>
Advanced
<h3>Details</h3>
This exercise explains how you can exploit CVE-2012-6081 to gain code execution. This vulnerability was exploited to compromise Debian's wiki and Python documentation website
<h3>What you will learn?</h3>

Exploiting CVE-2012-6081
Basics of the tar file format
Python code execution


****************************************************************************************************
Screenshot of Pentester Lab From SQL injection to Shell II

<h3>Difficulty</h3>
Intermediate
<h3>Details</h3>
This exercise explains how you can, from a blind SQL injection, gain access to the administration console. Then in the administration console, how you can run commands on the system.
<h3>What you will learn?</h3>
Blind SQL injection exploitation using time-based exploitation
Gaining code execution using a PHP webshell

****************************************************************************************************
Screenshot of Pentester Lab Web For Pentester II

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise is a set of the most common web vulnerabilities:
<h3>What you will learn?</h3>

SQL injections
Authentication issues
Captcha issues
Authorization issues
Mass Assignment attacks
Randomness Issues
MongoDB injections


****************************************************************************************************
Screenshot of Pentester Lab Electronic CodeBook (ECB)

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can tamper with an encrypted cookies to access another user's account.
<h3>What you will learn?</h3>

Weakness in ECB encryption
Cookie tampering


****************************************************************************************************
Screenshot of Pentester Lab XSS and MySQL FILE

<h3>Difficulty</h3>
Beginner
<h3>Details</h3>
This exercise explains how you can use a Cross-Site Scripting vulnerability to get access to an administrator's cookies. Then how you can use his/her session to gain access to the administration to find a SQL injection and gain code execution using it.
<h3>What you will learn?</h3>

Cross-Site Scripting exploitation
MySQL injection with FILE privilege


****************************************************************************************************
Screenshot of Web Security Dojo 2

A free open-source self-contained training environment for Web Application Security penetration testing. Tools + Targets = Dojo
<h3>What?</h3>
Various web application security testing tools and vulnerable web applications were added to a clean install of Ubuntu v10.04.2, which is patched with the appropriate updates and VM additions for easy use.
<h3>Why?</h3>
The Web Security Dojo is for learning and practicing web app security testing techniques. It is ideal for self-teaching and skill assessment, as well as training classes and conferences since it does not need a network connection. The Dojo contains everything needed to get started – tools, targets, and documentation.
<h3>Where?</h3>
Download Web Security Dojo from
http://sourceforge.net/projects/websecuritydojo/files/ .
<h3>How?</h3>
To install Dojo you first install and run VirtualBox 3.2 or later, then “Import Appliance” using the Dojo’s OVF file. We have PDF or YouTube for instructions for Virtualbox.
As of version 1.0 a VMware version is also provided, as well as video install instructions
<h3>Who?</h3>
Sponsored by Maven Security Consulting Inc
(performing web app security testing &amp; training since 1996).
Also, could be you! Web Security Dojo is an open source and fully transparent project, with public build scripts and bug trackers on Sourceforge .
<h3>More?</h3>
Look for Dojo videos on our YouTube channel at http://www.youtube.com/user/MavenSecurity
Hack your way to fame and glory 1 with our security challenges posted at Reddit (http://www.reddit.com/r/WebSecChallenges/).
[1. Fame and glory not included; void where prohibited by law]

****************************************************************************************************
Screenshot of Exploit-Exercises Mainsequence (v1)

The Main Sequence images were used as the Ruxcon 2012 CTF challenge. They covered a variety of situations such as:

Penetration tool usage - such as Metasploit and SQLmap
Binary analysis and reverse engineering
Basic cryptographic analysis
Packet capture analysis
Client side Windows exploitation
Linux exploitation and privilege escalation
Network protocol implementation / experimentation
Web site hacking
Password cracking

For more information, see here: http://exploit-exercises.com/mainsequence/setup

****************************************************************************************************
Screenshot of No Exploiting Me 1

Vulnerable VM with some focus on NoSQL
This vulnerable VM is meant to act as a practice virtual machine for security researchers to start looking at identifying and exploiting vulnerabilities in NoSQL, PHP and the underlying OS (Debian).

****************************************************************************************************
Screenshot of Kioptrix 2014 (#5)

<h4>Note from VulnHub</h4>
<strong>100% works with <em>VMware player6, workstation 10 &amp; fusion 6</em>.</strong>
<strong>May have issues with <em>ViritualBox</em> </strong>
<em>If this is the case, try this 'fix': http://download.vulnhub.com/kioptrix/kiop2014_fix.zip - Step by Step screenshots for Virtualbox 4.3 &amp; VMware Workstation 9)</em>
<h3>About the VM</h3>
As usual, this vulnerable machine is targeted at the beginner. It's not meant for the seasoned pentester or security geek that's been at this sort of stuff for 10 years. Everyone needs a place to start and all I want to do is help in that regard.
Also, before powering on the VM I suggest you <strong>remove the network card and re-add it</strong>. For some oddball reason it doesn't get its IP (well I do kinda know why but don't want to give any details away). So just add the VM to your virtualization software, remove and then add a network card. Set it to bridge mode and you should be good to go.
This was created using ESX 5.0 and tested on Fusion, but shouldn't be much of a problem on other platforms.
Kioptrix VM 2014 download 825Megs
MD5 (kiop2014.tar.bz2) = 1f802308f7f9f52a7a0d973fbda22c0a
SHA1 (kiop2014.tar.bz2) = 116eb311b91b28731855575a9157043666230432
Waist line 32"
<em>p.s.: Don't forget to read my disclaimer...</em>

****************************************************************************************************
Screenshot of The Infernal Hades (v1.0.1)

Infernal: Hades v1.0.1.
Hades is a new boot2root challenge pitched at the advanced hobbyist. Solving this challenge will require skills in reverse engineering, sploit development and sound computer architecture understanding. If you've never heard of an opaque predicate, you're going to have a hard time of it!
I strongly suggest you don't start this the week before exams, important meetings, deadlines of any sort, marriages, etc.
The aim of this challenge is for you to incrementally increase your access to the box until you can escalate to root. The /root/flag.txt contains, amongst other things, a public PGP key which you can use to demonstrate victory - the private key has been given to the VulnHub.com admins.
Enjoy,
Lok_Sigma
<h2>Notes</h2>
<ol>
I have verified this challenge is completable using 'Kali 3.7-trunk-686-pae' (Kali Linux 1.0.5 x86) as my attack platform with VMware Fusion 5.
It's meant to be hard.
EDB is your friend.
Hades will get an IP address by DHCP.
</ol>
<h2>Disclaimer</h2>
By using this virtual machine, you agree that in no event will I be liable for any loss or damage including without limitation, indirect or consequential loss or damage, or any loss or damage whatsoever arising from loss of data or profits arising out of or in connection with the use of this software.
<em>If something bad happens, it's not my fault. Use at your own risk!</em>

****************************************************************************************************
Screenshot of VulnOS 1

Welcome to VulnOS !
<hr/>
This is my first vulnerable target I made because I want to give back something to the community.
Big up for the community that made things possible!!!
<hr/>
Your goal is to get root and find all the vulnerabilities inside the OS !
It is a ubuntu server 10.04 LTS
(that's been made very buggy!!!!)
DO NOT USE This Box in a production environment!!!!!!!
It's a VM thas has been made with Virtualbox 4.3.8 - so it's in the .vdi format.
<hr/>
Networking :
This box has been made with bridged networking and uses DHCP to get an IP address (was 192.168.1.66 when I built it).
So it is best to share the attack OS and the TARGET BOX to IP-Range OF 192.168.1.1/24
Maybe you could set it up with m0n0wall and setup static IP-addresses.
If you cannot find the target's IP ADRERSS, contact me @ blakrat1 AT gmail DOT com
I will give you the root user and password to login....
<hr/>
Hope you find this useful !!!

****************************************************************************************************
Screenshot of Bot Challenges Dexter

In general, I’ve found that information is much easier to retain if it can be applied in the real world. Not everyone is a self-proclaimed botnet hunter, and it is not suggested (or recommended) that anyone try to exploit live botnets. For these reasons, I have put together another vulnerable virtual machine, which allows for aspiring botnet hunters and security enthusiasts to try their hand at attacking a Dexter command and control panel. It can be downloaded 

Brian Wallace AKA @botnet_hunter


****************************************************************************************************
Screenshot of xerxes 1

<pre><code>____   ___   ____   ___  __ ____   ___   ____     ____
`MM(   )P'  6MMMMb  `MM 6MM `MM(   )P'  6MMMMb   6MMMMb\
 `MM` ,P   6M'  `Mb  MM69 "  `MM` ,P   6M'  `Mb MM'    `
  `MM,P    MM    MM  MM'      `MM,P    MM    MM YM.
   `MM.    MMMMMMMM  MM        `MM.    MMMMMMMM  YMMMMb
   d`MM.   MM        MM        d`MM.   MM            `Mb
  d' `MM.  YM    d9  MM       d' `MM.  YM    d9 L    ,MM
_d_  _)MM_  YMMMM9  _MM_    _d_  _)MM_  YMMMM9  MYMMMM9




    xerxes v0.1
    by @barrebas

    xerxes.ova md5 4a1b5e1a984d8e01353dd32fd37554bc

    get root and read /root/flag

    tested on virtualbox 4.1.12 -- many thanks to
    TheColonial for testing!

    please share your thoughts on this vm! if you
    find any bugs, please let me know on irc
    (freenode #vulnhub)



DISCLAIMER

By using this virtual machine, you agree that in no event
will I be liable for any loss or damage including without
limitation, indirect or consequential loss or damage,  or
any  loss or  damage whatsoever arising from loss of data
or profits  arising out of  or in connection with the use
of this software.
</code></pre>

****************************************************************************************************
Screenshot of De-ICE S1.140

De-ICE are Penetration LiveCD images available from <a href="http://forum.heorot.net">http://forum.heorot.net</a> and provide scenarios where students can test their penetration testing skills and tools in a legal environment. 
Courtesy of students Michael N. and Patrick B.

****************************************************************************************************
Screenshot of Brainpan 2

<pre><code>  _               _                           ___  
 | |             (_)                         |__ \ 
 | |__  _ __ __ _ _ _ __  _ __   __ _ _ __      ) |
 | '_ \| '__/ _` | | '_ \| '_ \ / _` | '_ \    / / 
 | |_) | | | (_| | | | | | |_) | (_| | | | |  / /_ 
 |_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_| |____|
                         | |                       
                         |_|

                             by superkojiman  
                  http://www.techorganic.com
</code></pre>
<h2>DISCLAIMER</h2>
By using this virtual machine, you agree that in no event will I be liable
for any loss or damage including without limitation, indirect or
consequential loss or damage, or any loss or damage whatsoever arising
from loss of data or profits arising out of or in connection with the use
of this software.
TL;DR: If something bad happens, it's not my fault.
<h2>SETUP</h2>
Brainpan has been tested and found to work on the following hypervisors:
- VMware Player 6.0.1
- VMWare Fusion 6.0.2
- VirtualBox 4.3.2
Check to make sure brainpan2.ova has following checksums so you know your download is intact: 
MD5: bf01f03ea0e7cea2553f74189ff35161
SHA1: b46891cda684246832f4dbc80ec6e40a997af65a
Import brainpan2.ova into your preferred hypervisor and configure the network
settings to your needs. It will get an IP address via DHCP, but it's
recommended you run it within a NAT or visible to the host OS only since it
is vulnerable to attacks.

****************************************************************************************************
Screenshot of /dev/random relativity (v1.0.1)

<pre><code>     __________       .__          __  .__      .__  __
     \______   \ ____ |  | _____ _/  |_|__|__  _|__|/  |_ ___.__.
      |       _// __ \|  | \__  \\   __\  \  \/ /  \   __&lt;   |  |
      |    |   \  ___/|  |__/ __ \|  | |  |\   /|  ||  |  \___  |
      |____|_  /\___  &gt;____(____  /__| |__| \_/ |__||__|  / ____| ·VM·
             \/     \/          \/                        \/  -v1.0.1-
 +-----------------------------------------------------------------------+
 |  cReaTeD....: sagi-               |  DaTe......: 2013-11-29           |
 |  oS.........: Linux               |  oBJecTiVe.: Read /root/flag.txt  |
 |                                   |  GReeTZ....: g0tmi1k &amp; l0ca1hoSt  |
 +-----------------------------------------------------------------------+
</code></pre>
v1.0.1 ~ 2013-11-29
Fixed a few bugs when using VirtualBox (thanks to Bas van den Berg - @barrebas)
v1.0 ~ 2013-11-16
Public release
v0.0 ~ 2013-11-01
Private release - Zacon
v0.0 ~ 2013-06-29
Private release - HackFu

****************************************************************************************************
Screenshot of Bot Challenges Flipping Bitbot

This is a Linux based VM that is intended as a way to get security researchers started with simple botnet research. It also requires the researcher have some ability to assess and exploit vulnerabilities, with the ultimate goal of obtaining root access to the VM. This is the second of many to come, please feel free to supply feedback so I can make future ones more enjoyable and fulfilling.
The network configuration of the VM is set to auto, so it is easiest to run with some sort of DHCP server on the same network(or just select the NAT option in your virtualization software). It is suggested that you use the NAT option along with port forwarding, but as long as you have TCP access to the VM, you should be fine.
There are no supplied credentials, and it is intended that the network services on the VM are the attack vectors.
If you have questions, feel free to ask in #vulnhub on freenode(I'm bwall on there). You can also ask me on Twitter(@botnet_hunter). You can also email me at bwall(at)ballastsecurity.net

****************************************************************************************************
Screenshot of bWAPP bee-box (v1.6)

<pre><code>----------------
bee-box - README
----------------

bee-box is a custom Linux VM pre-installed with bWAPP.

With bee-box you have the opportunity to explore all bWAPP vulnerabilities!
bee-box gives you several ways to hack and deface the bWAPP website.
It's even possible to hack the bee-box to get root access...

This project is part of the ITSEC GAMES project. ITSEC GAMES are a fun approach to IT security education. 
IT security, ethical hacking, training and fun... all mixed together.
You can find more about the ITSEC GAMES and bWAPP projects on our blog.

We offer a 2-day comprehensive web security course 'Attacking &amp; Defending Web Apps with bWAPP'.
This course can be scheduled on demand, at your location!
More info: http://goo.gl/ASuPa1 (pdf)

Enjoy!

Cheers

Malik Mesellem
Twitter: @MME_IT
</code></pre>
<hr/>
<pre><code>-----------------------
bee-box - Release notes
-----------------------

v1.6
****

Release date: 2/11/2014

bWAPP version: 2.2

New features:

- Vulnerable Drupal installation (Drupageddon)

Bug fixes: /

Modifications: /


v1.5
****

Release date: 27/09/2014

bWAPP version: 2.1

New features:

- CGI support (Shellshock ready)

Bug fixes: /

Modifications: /


v1.4
****

Release date: 12/05/2014

bWAPP version: 2.0

New features:

- Lighttpd web server installed, running on port TCP/9080 and TCP/9443
- PHP SQLite module installed
- SQLiteManager 1.2.4 installed
- Vulnerable bWAPP movie network service (BOF)

Bug fixes: /

Modifications: /


v1.3
****

Release date: 19/04/2014

bWAPP version: 1.9+

New features:

- Nginx web server installed, running on port TCP/8080 and TCP/8443
- Nginx web server configured with a vulnerable OpenSSL version (heartbleed vulnerability)
- Insecure distcc (a fast, free distributed C/C++ compiler)
- Insecure NTP configuration
- Insecure SNMP configuration
- Insecure VNC configuration

Bug fixes:

- bWAPP update script checks for Internet connectivity

Modifications: /


v1.2
****

Release date: 22/12/2013

bWAPP version: 1.8

New features:

- Apache modules enabled: rewrite, include, headers, dav, action
- Apache server-status directive enabled
- Insecure anonymous FTP configuration
- Insecure WebDAV configuration
- Server-Side Includes configuration
- Vulnerable PHP CGI configuration

Bug fixes: /

Modifications:

- MySQL listening on 0.0.0.0
- New bWAPP update script


v1.1
****

Release date: 12/09/2013

bWAPP version: 1.5

New features:

- bWAPP update script

Bug fixes: /

Modifications: /


v1.0
****

Release date: 15/07/2013

bWAPP version: 1.4

New features: /

Bug fixes: /

Modifications: /
</code></pre>
<hr/>
<pre><code>-----------------
bee-box - INSTALL
-----------------

bee-box is a custom Linux VM pre-installed with bWAPP.

With bee-box you have the opportunity to explore all bWAPP vulnerabilities!
bee-box gives you several ways to hack and deface the bWAPP website.
It's even possible to hack the bee-box to get root access...


Requirements
////////////

*/ Windows, Linux or Mac OS
*/ VMware Player, Workstation, Fusion or Oracle VirtualBox


Installation steps
//////////////////

No! I will not explain how to install VMware or VirtualBox...

*/ Extract the compressed file.

*/ Double click on the VM configuration file (bee-box.vmx), or import the VM into the VMware software.

*/ Start the VM. It will login automatically.

*/ Check the IP address of the VM.

*/ Go to the bWAPP login page. If you browse the bWAPP root directory you will be redirected.

    example: http://[IP]/bWAPP/
    example: http://[IP]/bWAPP/login.php

*/ Login with the default bWAPP credentials, or make a new user.

    default credentials: bee/bug

*/ You are ready to explore and exploit the bee!


Notes
/////

*/ Linux credentials:

    bee/bug
    root/bug

*/ MySQL credentials:

    root/bug

*/ Modify the Postfix settings (relayhost,...) to your environment.

    config file: /etc/postfix/main.cf

*/ bee-box gives you several ways to deface the bWAPP website.
   It's even possible to hack the bee-box to get root access...

   Have fun!

*/ Take a snapshot of the VM before hacking the bee-box.
   There is also a backup of the bWAPP website (/var/www/bWAPP_BAK).

*/ To reinstall the bWAPP database, delete the database with phpmyadmin (http://[IP]/phpmyadmin/).
   Afterwards, browse to the following page: https://[IP]/bWAPP/install.php

*/ Don't upgrade the Linux operating system, you will lose all fun :)


This project is part of the ITSEC GAMES project. ITSEC GAMES are a fun approach to IT security education. 
IT security, ethical hacking, training and fun... all mixed together.
You can find more about the ITSEC GAMES and bWAPP projects on our blog.

We offer a 2-day comprehensive web security course 'Attacking &amp; Defending Web Apps with bWAPP'.
This course can be scheduled on demand, at your location!
More info: http://goo.gl/ASuPa1 (pdf)

Enjoy!

Cheers

Malik Mesellem
Twitter: @MME_IT
</code></pre>

****************************************************************************************************
Screenshot of Bot Challenges RA1NXing Bots

This is a Linux based VM that is intended as a way to get security researchers started with simple botnet research. It also requires the researcher have some ability to assess and exploit vulnerabilities, with the ultimate goal of obtaining root access to the VM.
The network configuration of the VM is set to auto, so it is easiest to run with some sort of DHCP server on the same network(or just select the NAT option in your virtualization software). It is suggested that you use the NAT option along with port forwarding, but as long as you have TCP access to the VM, you should be fine.
If you have questions, feel free to ask in #vulnhub on freenode(I'm bwall on there).

****************************************************************************************************
Screenshot of Brainpan 1

<pre><code> _               _                         
| |__  _ __ __ _(_)_ __  _ __   __ _ _ __  
| '_ \| '__/ _` | | '_ \| '_ \ / _` | '_ \ 
| |_) | | | (_| | | | | | |_) | (_| | | | |
|_.__/|_|  \__,_|_|_| |_| .__/ \__,_|_| |_|
                        |_|                
                            by superkojiman  
                 http://www.techorganic.com

DISCLAIMER
----------
By using this virtual machine, you agree that in no event will I be liable 
for any loss or damage including without limitation, indirect or 
consequential loss or damage, or any loss or damage whatsoever arising 
from loss of data or profits arising out of or in connection with the use 
of this software.

TL;DR: If something bad happens, it's not my fault.



SETUP
-----
Brainpan has been tested and found to work on the following hypervisors:
-    VMware Player 5.0.1
-    VMWare Fusion 5.0
-    VirtualBox 4.2.8

Import Brainpan into your preferred hypervisor and configure the network 
settings to your needs. It will get an IP address via DHCP, but it's 
recommended you run it within a NAT or visible to the host OS only since it
is vulnerable to attacks.
</code></pre>
Source: Brainpan.zip/readme.txt
<pre><code>MD5 (brainpan.ova) = fc0f163220b9884df5dcc9cdc45361e4
</code></pre>
Source: Brainpan.zip/md5.txt

****************************************************************************************************
Screenshot of HackLAB VulnVPN

The idea behind VulnVPN is to exploit the VPN service to gain access to the sever and ‘internal’ services. Once you have an internal client address there are a number of ways of gaining root (some easier than others).
<h2>Client VPN Configuration</h2>
I have created/uploaded the relevant files which can be obtained from the compressed file here. You’ll need to configure Openswan/xl2tpd on your system, if you’re using an Ubuntu based Linux variant you can follow the below steps – please note that I’ve used Backtrack 5r3 for all client testing (mentioned as I know it works well):
<ol>

apt-get install openswan xl2tpd ppp


Copy the downloaded client files into the following locations:
/etc/ipsec.conf
/etc/ipsec.secrets
/etc/ppp/options.l2tpd.client
/etc/xl2tpd/xl2tpd.conf


VulnVPN is located at 192.168.0.10 and the client configuration files state that the client IP address is 192.168.0.11. If you want your client to have a different address ensure you change the relevant settings in /etc/ipsec.conf.


To establish a VPN connection run the following command: ipsec auto –up vpn (that’s two hyphens before up, they get lost in the post formatting). If you’re viewing the logs you should see something along the lines of ‘IPsec SA established’.


If the connection succeeds (remember you’ll need to obtain the PSK before this is possible) you can run the ‘start-vpn.sh’ script (included with client config files download) or run the following command to initialise the PPP adaptor: echo “c vpn” &gt; /var/run/xl2tpd/l2tp-control 


Run ip list or ifconfig and you should see that a new PPP adapter has been created and assigned an IP address (this may not be instant, give it a few seconds). If the adaptor fails to come up run the script/command again – I’ve come across this issue a few times.

</ol>
Note: If you change your configuration/IP settings etc you’ll need to reload the relevant configuration files i.e. /etc/init.d/ipsec restart and/or /etc/init.d/xl2tpd restart
<h2>Troubleshooting</h2>
I realise that VPN’s can be very troublesome (setting this challenge up was bad enough), so I have allowed access to auth and ufw logs. These should help highlight issues you may be experiencing and can be found at http://192.168.0.10:81 (note port 81). Please note that hacking this page and associated scripts are not part of the challenge, rather they have been provided for assistance.
A useful config reference can also be found here:
https://wiki.archlinux.org/index.php/L2TP/IPsec_VPN_client_setup
<h2>Download Information</h2>
Architecture: x86
Format: VMware (vmx &amp; vmdk) compatibility with version 4 onwards
RAM: 1GB
Network: NAT – Static IP 192.168.0.10 (no G/W or DNS configured)
Extracted size: 1.57GB
Compressed (download size): 368MB – 7zip format – 7zip can be obtained from here
Download VulnVPN from -HERE-
MD5 Hash of VulnVPN.7z: 9568aa4c94bf0b5809cb0a282fffa5c2
Download Client files from -HERE-
MD5 Hash of client.7z: e598887f2e4b18cd415ea747606644f6
As per usual, I shall add a related solutions post shortly. Until then, enjoy 
Source: <a href="http://www.rebootuser.com/?p=1307">http://www.rebootuser.com/?p=1307</a>

****************************************************************************************************
Screenshot of HackLAB Vulnix

Here we have a vulnerable Linux host with configuration weaknesses rather than purposely vulnerable software versions (well at the time of release anyway!)
The host is based upon Ubuntu Server 12.04 and is fully patched as of early September 2012. The details are as follows:

Architecture: x86
Format: VMware (vmx &amp; vmdk) compatibility with version 4 onwards
RAM: 512MB
Network: NAT
Extracted size: 820MB
Compressed (download size): 194MB – 7zip format – 7zip can be obtained from here

MD5 Hash of Vulnix.7z: 0bf19d11836f72d22f30bf52cd585757


Download Vulnix from HERE -


The goal; boot up, find the IP, hack away and obtain the trophy hidden away in /root by any means you wish – excluding the actual hacking of the vmdk 
Free free to contact me with any questions/comments using the comments section below.
Enjoy!
Source: <a href="http://www.rebootuser.com/?p=933">http://www.rebootuser.com/?p=933</a>

****************************************************************************************************
Screenshot of /dev/random scream

<pre><code>  _________                                    
 /   _____/ ___________   ____ _____    _____  
 \_____  \_/ ___\_  __ \_/ __ \\__  \  /     \ 
 /        \  \___|  | \/\  ___/ / __ \|  Y Y  \
/_______  /\___  &gt;__|    \___  &gt;____  /__|_|  / .VM.
        \/     \/            \/     \/      \/ 
----------------------------------------------------------------------------
|  cReaTeD....: sagi-                |  DaTe......: 12-11-10               |
|  oS.........: Windows XP Home/Pro  |  oBJecTiVe.: Get the local user's   |
|               SP2/3 x86            |              password               |
|  iNSTaLLeR..: g0tmi1k              |  GReeTZ....: #vulnhub               |
----------------------------------------------------------------------------
</code></pre>
Source: readme.nfo

****************************************************************************************************
Screenshot of OWASP Broken Web Applications Project 1.2

<h2>Main</h2>
The Broken Web Applications (BWA) Project produces a Virtual Machine running a variety of applications with known vulnerabilities for those interested in:

learning about web application security
testing manual assessment techniques
testing automated tools
testing source code analysis tools
observing web attacks
testing WAFs and similar code technologies

all the while saving people interested in doing either learning or testing the pain of having to compile, configure, and catalog all of the things normally involved in doing this process from scratch.
Source: <a href="http://owasp.com/index.php/OWASP_Broken_Web_Applications_Project">http://owasp.com/index.php/OWASP_Broken_Web_Applications_Project</a>
Release notes for the Open Web Application Security Project (OWASP) Broken Web Applications Project, a collection of vulnerable web applications that is distributed on a Virtual Machine in VMware format compatible with their no-cost and commercial VMware products.
More information about the project can be found at http://www.owaspbwa.org/.
The VM can be downloaded as a .zip file or as a much smaller .7z 7-zip Archive. BOTH FILES CONTAIN THE EXACT SAME VM! We recommend that you download the .7z archive if possible to save bandwidth (and time). 7-zip is available for Windows, Mac, Linux, and other Operating Systems.
!!! This VM has many serious security issues. We strongly recommend that you run it only on the "host only" or "NAT" network in the virtual machine settings !!!
Version 1.2 - 2015-08-03

Updated Mutillidae
Other miscellaneous, minor updates

Version 1.2rc1 - 2015-06-24

Updated Mutillidae and WAVSEP
Removed IP address restrictions on Mutillidae
Added script to rebuild WAVSEP
Added bWAPP application and script to automatically update bWAPP
Added OWASP Security Shepherd application and supporting scripts.
Likely updated other applications

Version 1.1.1 - 2013-09-27

Updated Mutillidae and transitioned to use its new Git repository
Fixed issue with Tomcat not starting in some circumstances

Version 1.1 - 2013-07-30

Updated Mutillidae, Cyclone, and WAVSEP
Updated OWASP Bricks and configured it to pull from SVN
Fixed ModSecurity CRS blocking and rebuilt ModSecurity to include Lua
support
Increased VM's RAM allocation to 1Gb
Set Tomcat to run as root (to allow some traversal issues tested by
WAVSEP)
Updated landing page for OWASP 1-Liner to reflect that the application
is not fully functional

Version 1.1beta1 - 2013-07-10

Added new applications: OWASP 1-liner, OWASP RailsGoat, OWASP Bricks,
SpiderLabs "Magical Code Injection Rainbow", Cyclone
Updated Mutillidae (name, version, and to use new SVN repository)
Updated DVWA to new Git repository
Added SSL support to web server
Updated ModSecurity and updated Core Rule Set to current in Git
Known issues:
ModSecurity CRS blocking does not work
OWASP 1-liner application appears to have functional issues (it was
heavily modified to run on the VM through Apache)
Other new applications have not been fully tested
User Guide has not been updated

Version 1.0 - 2012-07-24

Added new application: WIVET (http://code.google.com/p/wivet/)
Updated WAVSEP, Mutillidae, Vicnum
Created new category for "Applications for Testing Tools", containing
OWASP ZAP WAVE, WIVET, and WAVSEP
Major update to User Guide at http://code.google.com/p/owaspbwa/wiki/UserGuide.
Removed some other project Wiki pages that were incorporated into User Guide.
More improvements to index.html

Version 1.0rc2 - 2012-07-14

Added new application: WAVSEP (http://code.google.com/p/wavsep/)
Updated WebGoat.NET, WebGoat (Java), and other applications from source
repositories. Updated Mutillidae.
Removed links to OWASP ESAPI SwingSet (non-Interactive). That application
has been deprecated and replaced by the SwingSet Interactive.
Changed version numbers in index.html to better indicate applications that
are updated from public SVN or GIT repositories.
Layout improvements to index.html file (layout could still use some work).
Fixed bugs in Yazd (may have been present in 1.0rc1 or before)
Changes MySQL configuration to store database and table names as lower case
(facilitates use of software written on Windows that may not strictly adhere
to one case for identifiers)

Version 1.0rc1 - 2012-04-04

Added new applications:
Added OWASP WebGoat.NET
(https://www.owasp.org/index.php/Category:OWASP_WebGoat.NET)
Added OWASP ESAPI SwingSet
(https://www.owasp.org/index.php/ESAPI_Swingset)
Added OWASP ESAPI SwingSet Interactive
(https://www.owasp.org/index.php/ESAPI_Swingset)
Added Jotto (from OWASP Vicnum project -
http://www.owasp.org/index.php/Category:OWASP_Vicnum_Project)
Updated applications: Mutillidae, WebGoat (Java), ModSecurity, ModSecurity
Core Rule Set, BodgeIt, OWASP ZAP WAVE, Damn Vulnerable Web Application,
WackoPicko
Added owaspbwa-*-rebuild.sh scripts to build and deploy applications from
source (WebGoat, Yazd, CSRFGuard Test Apps, SwingSet Apps)
Added owaspbwa-update-*.sh scripts to automatically pull updates from source
repositories (OWASP BWA only and for all applications)
Cleaned up installations of WebGoat and Yazd
Fixed issue with PHP configuration to allow Remote File Include (RFI)
vulnerabilities.
Created User Guide at http://code.google.com/p/owaspbwa/wiki/UserGuide (not
yet complete).

Version 0.94 - 2011-07-24

No changes from 0.94rc3.

Version 0.94rc3 - 2011-07-14

More fixes to hackxor applications (thanks again to Albino Wax).

Version 0.94rc2 - 2011-07-13

Fixes to hackxor applications (thanks to Albino Wax for fixes).

Version 0.94rc1 - 2011-07-11

Added a number of new applications, including Gruyere, Hackxor,
WackoPicko, BodgeIt, TikiWiki, Joomla, Gallery2, WebCalendar, AWStats,
and ZAP-Wave (thanks to Mike Cyr for lots of work in this area).
New and improved "home" page in the VM (thanks again to Mike Cyr).

Version 0.93rc1 - 2011-01-19

Rebuilt OrangeHRM database to fix login issue (thanks to Dave van Stein
for reporting this)
Configured mod_proxy on Apache web server to reverse proxy applications
running on Tomcat web server. Disabled direct access to Tomcat server
Installed ModSecurity to 2.5.13 from source (needed by Core Rule Set)
Configured the ModSecurity Core Rule Set. It is disabled by default,
but can be enabled through the use of new shell scripts in
/usr/local/bin
Adjusted Samba shares to follow symlinks
Removed some miscellaneous old / duplicate files
Attempted to fix phpBB issues, but was unsuccessful. That application
is broken for this release and marked as such in the index.html file
(thanks to Dave van Stein for reporting this issue)

Version 0.92rc2 - 2010-11-15

Fixed bug with MySQL databases not starting properly (thanks to Tom
Neaves for reporting this)

Version 0.92rc1 - 2010-11-10

Developed method for tracking known issues in the applications at
http://sourceforge.net/apps/trac/owaspbwa/report/1.
Updated base OS to Ubuntu 10.04 LTS
Updated DVWA to SVN version &gt; 1.07
Updated Mutillidae to version 1.5
Updated WebGoat to SVN version &gt; 5.3
Added and configured three "real" applications suggested by Matt Tesauro:
Added application: GetBoo version 1.04
(http://sourceforge.net/projects/getboo/files/)
Added application: GTD-PHP version 0.7
(http://sourceforge.net/projects/gtd-php/files/)
Added application: OrangeHRM version 2.4.2
(http://www.orangehrm.com/)
Fixed bug in DVWA database permissions that was preventing stored XSS
from working (thanks to Owen Wright for reporting this)

Version 0.91rc1 - 2010-03-24

Updated OWASP Vicnum to version 1.4
(http://www.owasp.org/index.php/Category:OWASP_Vicnum_Project)
Added application: Ghost (http://webdevelopmentsolutions.org/)
Added application: Peruggia version 1.2
(http://peruggia.sourceforge.net/)
Added application: OWASP AppSensor Demo
(http://www.owasp.org/index.php/Category:OWASP_AppSensor_Project)
Fixed bug where VM would sometimes not get an address from DHCP on
boot
Fixed bug where PHP magic quotes were enabled for some applications,
preventing SQL Injection
Changed password for some applications to match standard users named
'admin' and 'user' with the password the same as the username
Moved databases, applications that run on Apache web server, some
configuration files, and some applications that run on Tomcat web
server into SVN with symlinks to the SVN directory in the normal file
system.
Fixed bug in where permissions on /var/www/dvwa were not set properly
(thanks to Dale Castle for reporting this)

Version 0.9 - 2009-11-11

Initial Release


****************************************************************************************************
Screenshot of GoatseLinux 1

GoatseLinux v1.0 pentest lab Virtual Machine
Steve Pordon
2009.06.27
Feel free to distribute this far and wide under the gnu license.
This is specifically built for VMware 6.5 compatibility. 
WARNING: GoatseLinux is intentionally unsecure. It was designed as a laboratory box to practice penetration testing on. Due to the wide open nature of nearly every program installed on it, I would strongly advise against setting your VM network to anything other than "host-based," unless you enjoy your VMs being used as zombie spamboxes.
Notes:
Built on the Slax 5.0.7 distro.
Source: readme.txt

****************************************************************************************************
Screenshot of Exploit KB Vulnerable Web App 1

During my SQL Injection learning journey I needed a vulnerable web application for practice.
I created a WebApp vulnerable to SQL Injection for my personal use, The result was an extremely vulnerable web site which I could test some SQLi techniques against MySQL.
I must confess, I am not a programmer and I have never coded in PHP before, I thought it would be a good practice to develop a PHP based site from scratch in order to learn the basic of PHP and MySQL.
exploit.co.il Vulnerable Web app designed as a learning platform to test various SQL injection Techniques and it is a fully functional web site with a content management system based on fckeditor.
I thought some of you may find it useful so i decided to share it via a SourceForge project page i created for it at :
https://sourceforge.net/projects/exploitcoilvuln
<h2>Read Me First</h2>
Please notice! this web app is extremely vulnerable to SQLi attack and its poorly coded and configured intentionally.
It is not recommended to use this WebApp as live site on the net neither set it up on your local machine with access to it from the web.
Please use it in your internal LAN only, Set it up in a virtual environment such as VMware or Virtual Box.
This is a fully functional web site with a content management system based on fckeditor.
I hope you will find this web app useful in your SQLi and web app security studies or demonstrations.
<h2>General Information</h2>
Visit the Vulnerable Web Site by browsing to its IP address
Admin interface can be found at: http://localhost/admin
Username: admin
Password: <a class="__cf_email__" data-cfemail="1e4e5e6d6d692e6c7a" href="/cdn-cgi/l/email-protection">[email protected]</a>
Database Name: exploit
Database contains 8 tables:
articles
authors
category
downloads
links
members
news
videos
I have only tested the web app for SQLi, but i am sure you will find some more interesting vulnerabilities 
Please try to avoid using automated tools to find the vulnerabilities and try doing it manually
Feel free to discuss this web app by visiting http://exploit.co.il and commenting on the relevant post.
You can send solutions, videos and ideas to shai[at]exploit.co.il and i will post them on my blog.
Good Luck!
Source: <a href="http://exploit.co.il/projects/vuln-web-app/">http://exploit.co.il/projects/vuln-web-app/</a>

****************************************************************************************************
Screenshot of Damn Vulnerable Web Application (DVWA) 1.0.7

Damn Vulnerable Web App (DVWA) is a PHP/MySQL web application that is damn vulnerable. 
Its main goals are to be an aid for security professionals to test their skills and tools in a legal environment, help web developers better understand the processes of securing web applications and aid teachers/students to teach/learn web application security in a class room environment.
Source: <a href="http://www.dvwa.co.uk/">http://www.dvwa.co.uk/</a>

****************************************************************************************************
Screenshot of Bobby 1

<pre><code>TheXero's    ____        __    __         
            / __ )____  / /_  / /_  __  __
           / __  / __ \/ __ \/ __ \/ / / /
          / /_/ / /_/ / /_/ / /_/ / /_/ / 
         /_____/\____/_.___/_.___/\__, / v.1 
                                /____/   
|---------------------------------------------------------------------|
|Objective| There is a 'flag' in the administrator's personal folder. |
|         | Find it &amp; read the contents of the file.                  |
|---------+-----------------------------------------------------------|
|       OS| Windows XP Pro SP3 x86                                    |
|  Network| Static (Somewhere in 192.168.1.0/24)                      |
|---------------------------------------------------------------------|


--TheXero
http://www.thexero.co.uk/

p.s. The setup of this vulnerable machine uses 'AutoIT' to automate the various aspects of the installation.
If the timings during the installation are off, the setup will fail.
Try installing it again if it does fail, however if it keeps on failing - please get in touch.
</code></pre>
Source: readme.txt

****************************************************************************************************
Screenshot of Badstore 1.2.3

Welcome to Badstore.net 
Badstore.net is dedicated to helping you understand how hackers prey on Web application vulnerabilities, and to showing you how to reduce your exposure. Our Badstore demonstration software is designed to show you common hacking techniques. 
Source: <a href="http://www.badstore.net/">http://www.badstore.net/</a> 
v1.0 – Original version for 2004 RSA Show 
v1.1 – Added: 


More supported NICs. 


Referrer checking for Supplier Upload. 


badstore.old in /cgi-bin/ 


Select icons added to the /icons/ directory. 


v1.2 – Version presented at CSI 2004 
Added: 


Full implementation of MySQL. 


JavaScript Redirect in index.html. 


JavaScript validation of a couple key fields. 


My Account services, password reset and recovery. 


Numerous cosmetic updates. 


'Scanbot Killer' directory structure to detect scanners. 


favicon.ico. 


Reset files and databases to original state without reboot. 


Dynamic dates and times in databases. 


Additional attack possibilities. 


Source: BadStore_Manual.pdf

****************************************************************************************************
Screenshot of HackLAB VulnVoIP

VulnVoIP is based on a relatively old AsteriskNOW distribution and has a number of weaknesses. The aim is to locate VoIP users, crack their passwords and gain access to the Support account voicemail.
Just to keep things interesting this particular disto also suffers from a known exploit from which it is relatively easy to gain a root shell. Once you've found the easy way, can you get root using a different method?
I've created these basic VoIP hacking training exercises as I found very limited resources online. Hopefully VulnVoIP will help others learn the basic fundamentals of VoIP hacking in a safe environment.

Architecture: x86
Format: VMware (vmx &amp; vmdk) compatibility with version 4 onwards
RAM: 512MB
Network: NAT
Extracted size: 1.68GB
Compressed (download size): 552MB - 7zip format - 7zip can be obtained from here
MD5 Hash of VulnVoIP.7z: 1411bc06403307d5ca2ecae47181972a

Source: <a href="http://www.rebootuser.com/?p=1069">http://www.rebootuser.com/?p=1069</a>

****************************************************************************************************
Screenshot of VulnImage 1

"Created for Lars's students"
Source: <em>e-mail</em>

****************************************************************************************************
Screenshot of Vicnum 1.4

A flexible web app showing vulnerabilities such as cross site scripting, sql injections, and session management issues. Helpful to IT auditors honing web security skills and setting up 'capture the flag'.
Source: <a href="https://owasp.org/index.php/Category:OWASP_Vicnum_Project">https://owasp.org/index.php/Category:OWASP_Vicnum_Project</a>

****************************************************************************************************
Screenshot of Vicnum 1.3

A flexible web app showing vulnerabilities such as cross site scripting, sql injections, and session management issues. Helpful to IT auditors honing web security skills and setting up 'capture the flag'.
Source: <a href="https://owasp.org/index.php/Category:OWASP_Vicnum_Project">https://owasp.org/index.php/Category:OWASP_Vicnum_Project</a>

****************************************************************************************************
Screenshot of UltimateLAMP 0.2

<h4>Features</h4>
UltimateLAMP includes a long list of popular LAMP stack applications. For more information take a look a the UltimateLAMP products list.
With the success of this first product, research has already commenced in our next two products UltimateLAMJ (Open Source Java Based Applications) and UltimateLAMR (Open Source Ruby Applications).
<h4>Latest News</h4>

Oct 27 2006 - Information regarding Passwords.
Aug 14 2006 - And the winners are?
May 20 2006 - VMware Appliance Challenge Application.
May 15 2006 - Version 0.2 release of UltimateLAMP.
May 12 2006 - Initial Version 0.1 release of UltimateLAMP.

Source: <a href="http://web.archive.org/web/20080622080916/http://ultimatelamp.arabx.com.au/">http://web.archive.org/web/20080622080916/http://ultimatelamp.arabx.com.au/</a>

****************************************************************************************************
Screenshot of The Hacker Games 1

Welcome, welcome! The time has come to select one courageous young hacker for the honor of representing District 12 in the 74th annual Hacker Games! And congratulations, for you have been selected as tribute!
Hacking games and CTF’s are a lot of fun; who doesn’t like pitting your skills against the gamemakers and having a free pass to break into things?
But watch out, as you will find out, some games are more dangerous than others. I have talked about counterattacks here before, and this system has implemented a number of aggressive anti-hacker measures.
In fact, this VM is downright evil. I am probably legally obligated to tell you that <strong>it will try to hack you</strong>. So if a calculator or message declaring your pwnedness pops up or shows up on your desktop, you asked for it. But don’t worry, it won’t steal your docs or rm you, it will just demonstrate compromise for the game.
To save precious bandwidth, this has been implemented in a minimal tinycore-based VM, and will require VirtualBox to run. But vbox is free – you can download it here: https://www.virtualbox.org/wiki/Downloads
Unfortunately, I didn’t have the time to add nearly all the things I wanted to, so there are really just a few challenges, a couple of counterhacks, and about 10 memes to conquer. Depending on your skill level, you could pwn (or be pwned) in just a few minutes or in a few hours. So hack it before it hacks you!
No sponsors are necessary, so don’t light yourself on fire. Simply download the evil VM here: TheHackerGames.zip, start it, and open up http://localhost:3000/ to begin. Now, you can totally cheat since you own the VM, but see if you can beat the challenges without cheating. Then you can go ahead and cheat, which should also be fun – you’re probably comfortable with many physical access attacks involving the hard disk, but this system doesn’t use a hard disk. So enjoy and remember…
May the odds be ever in your favor!
Source: <a href="http://www.scriptjunkie.us/2012/04/the-hacker-games/">http://www.scriptjunkie.us/2012/04/the-hacker-games/</a>

****************************************************************************************************
Screenshot of pWnOS 2.0 (Pre-Release)

pWnOS v2.0 (PRE-RELEASE!)
<h4>Goal:</h4>

Get root... Win!

<h4>About:</h4>
pWnOS v2.0 is a Virutal Machine Image which hosts a server to pratice penetration testing. It will test your ability to exploit the server and contains multiple entry points to reach the goal (root). It was design to be used with WMWare Workstation 7.0, but can also be used with most other virtual machine software. 
<h4>Configuration &amp; Setup:</h4>

Configure your attacking platform to be within the 10.10.10.0/24 network range

For example the ip of 10.10.10.200 with the netmask of 255.255.255.0 is what I statically set my BackTrack 5 network adapter to.

VMWare's Network Adapter is set to Bridged Network Adapter

You may need to change VMWare's Network Adapter to NAT or Host-Only depending on your setup
The server's ip is staticaly set to 10.10.10.100
<h4>Server's Network Settings:</h4>

IP: 10.10.10.100
Netmask: 255.255.255.0
Gateway: 10.10.10.15

<h4>Version History:</h4>
v2.0 - 07/04/2011 - Pre-Release copy for initial testing
Source: pWnOS_v2.0.7z/pWnOS v2.0/pWnOS_INFO-v2_0.txt

****************************************************************************************************
Screenshot of pWnOS 1.0

Some of you may have noticed this new pWnOS forum section. I created pWnOS as a virtual machine and Grendel was nice enough to let me post about it here. Here's a bit of information on pWnOS.
It's a linux virtual machine intentionally configured with exploitable services to provide you with a path to r00t. :) Currently, the virtual machine NIC is configured in bridged networking, so it will obtain a normal IP address on the network you are connected to. You can easily change this to NAT or Host Only if you desire. A quick ping sweep will show the IP address of the virtual machine. 
Sorry...no scenario/storyline with this one. I wasn't really planning to release it like this, so maybe for version 2.0 I'll be more creative. :) I'm anxious to get feedback so let me know how it goes or if you have questions. Thanks and good luck!
Source: <a href="http://forums.hackingdojo.com/viewtopic.php?f=21&amp;t=149">http://forums.hackingdojo.com/viewtopic.php?f=21&amp;t=149</a>
<h2>-- Readme</h2>
Thanks for trying pWnOS 1.0. A few things to note before getting started. pWnOS is made using VMware Workstation and can be started by downloading VMware Server or Vmware player...both of which are free! Or VMware Workstation (Windows) or VMware Fusion (OS X), which are not free.
<ol>
If Vmware asks whether you copied or moved this virtual machine on first boot, click MOVED! Otherwise the network settings could get messed up. 
The virtual machine is currently setup to use bridged networking, but you may want to change this to NAT or Host Only...depending on your preferences.
All necessary tools/exploits/whatever can be found at milw0rm.com. 
There are multiple paths to get shell access. I created a n00b path and a more advanced path. See if you can get both of them!
</ol>
I would rate the difficulty of pWnOS approximately the same as De-Ice's level 2 disk...maybe a bit more difficult. See http://www.de-ice.net for information on the De-Ice penetration testing disks.
I hope you enjoy it! If you have any questions or feedback, email me at bond00(at)gmail.com
bond00
Source: pWnOS_v1.0.zip/pWnOS readme.txt

****************************************************************************************************
Screenshot of Exploit-Exercises Protostar (v2)

<h4>About</h4>
Protostar introduces the following in a friendly way:

Network programming
Byte order
Handling sockets
Stack overflows
Format strings
Heap overflows
The above is introduced in a simple way, starting with simple memory corruption and modification, function redirection, and finally executing custom shellcode.

In order to make this as easy as possible to introduce Address Space Layout Randomisation and Non-Executable memory has been disabled.
<h4>Getting started</h4>
Once the virtual machine has booted, you are able to log in as the "user" account with the password "user" (without the quotes).
The levels to be exploited can be found in the /opt/protostar/bin directory.
For debugging the final levels, you can log in as root with password "godmode" (without the quotes)
<h4>Core files</h4>
<strong>README!</strong> The /proc/sys/kernel/core_pattern is set to /tmp/core.%s.%e.%p. This means that instead of the general ./core file you get, it will be in a different directory and different file name.
Source: <a href="http://exploit-exercises.com/protostar">http://exploit-exercises.com/protostar</a>

****************************************************************************************************
Screenshot of Exploit-Exercises Nebula (v5)

<h4>About</h4>
Nebula takes the participant through a variety of common (and less than common) weaknesses and vulnerabilities in Linux. It takes a look at
+ SUID files
+ Permissions
+ Race conditions
+ Shell meta-variables
+ $PATH weaknesses
+ Scripting language weaknesses
+ Binary compilation failures
At the end of Nebula, the user will have a reasonably thorough understanding of local attacks against Linux systems, and a cursory look at some of the remote attacks that are possible.
<h4>Levels</h4>
Have a look at the levels available on the side bar, and log into the virtual machine as the username "levelXX" with a password of "levelXX" (without quotes), where XX is the level number.
Some levels can be done purely remotely.
<h4>Getting root</h4>
In case you need root access to change stuff (such as key mappings, etc), you can do the following:
Log in as the "nebula" user account with the password "nebula" (both without quotes), followed by "sudo -s" with the password "nebula". You'll then have root privileges in order to change whatever needs to be changed.
Source: <a href="http://exploit-exercises.com/nebula">http://exploit-exercises.com/nebula</a>

****************************************************************************************************
Screenshot of Moth 0.6

Moth is a downloadable VMWare image based on Ubuntu. It was set up to test the functionality of w3af and it includes various web application vulnerabilities. Most howto's use Moth as an example for a web page under test.
Source: <a href="http://sourceforge.net/apps/trac/w3af/wiki/Moth">http://sourceforge.net/apps/trac/w3af/wiki/Moth</a>
Moth is a VMware image with a set of vulnerable Web Applications and scripts, that you may use for:
Testing Web Application Security Scanners
Testing Static Code Analysis tools (SCA)
Giving an introductory course to Web Application Security
The motivation for creating this tool came after reading \"anantasec-report.pdf\" which is included in the release file which you are free to download. The main objective of this tool is to give the community a ready to use testbed for web application security tools. For almost every web application vulnerability that exists in the wild, there is a test script available in moth.
There are three different ways to access the web applications and vulnerable scripts included in moth:
Directly
Through mod_security
Through PHP-IDS (only if the web application is written in PHP)
Both mod_security and PHP-IDS have their default configurations and they show a log of the offending request when one is found. This is very useful for testing web application scanners, and teaching students how web application firewalls work. The beauty is that a user may access the same vulnerable script using the three methods; which helps a lot in the learning process.
Source: http://www.bonsai-sec.com/en/research/moth.php

****************************************************************************************************
Screenshot of Metasploitable 2

Some folks may already be aware of Metasploitable, an intentionally vulnerable virtual machine designed for training, exploit testing, and general target practice. Unlike other vulnerable virtual machines, Metasploitable focuses on vulnerabilities at the operating system and network services layer instead of custom, vulnerable applications. I am happy to announce the release of Metasploitable 2, an even better punching bag for security tools like Metasploit, and a great way to practice exploiting vulnerabilities that you might find in a production environment.
For download links and a walkthrough of some of the vulnerabilities (and how to exploit them), please take a look at the Metasploitable 2 Exploitability Guide.
Have fun!
Source: <a href="https://community.rapid7.com/community/metasploit/blog/2012/06/12/introducing-metasploitable-2">https://community.rapid7.com/community/metasploit/blog/2012/06/12/introducing-metasploitable-2</a>

****************************************************************************************************
Screenshot of Metasploitable 1

One of the questions that we often hear is "What systems can i use to test against?" Based on this, we thought it would be a good idea throw together an exploitable VM that you can use for testing purposes.
Metasploitable is an Ubuntu 8.04 server install on a VMWare 6.5 image. A number of vulnerable packages are included, including an install of tomcat 5.5 (with weak credentials), distcc, tikiwiki, twiki, and an older mysql.
You can use most VMware products to run it, and you'll want to make sure it's configured for Host-only networking unless it's in your lab - no need to throw another vulnerable machine on the corporate network. It's configured in non-persistent-disk mode, so you can simply reset it if you accidentally 'rm -rf' it.
Source: <a href="http://web.archive.org/web/20100525233058/http://blog.metasploit.com/2010/05/introducing-metasploitable.html">http://web.archive.org/web/20100525233058/http://blog.metasploit.com/2010/05/introducing-metasploitable.html</a>

****************************************************************************************************
Screenshot of Rattus Loophole

Hi everyone!
Recently I've created my own Live CD and would like to get some feedback from you. This Live CD, codename Loophole, is meant to show you how important it is to keep your software up to date and properly configured. There's more than one way into the system and each one of them will teach you different network/computer security related topics.
<h4>Scenario for Loophole Live CD:</h4>
We suspect that someone inside Rattus labs is working with known terrorist group. Your mission is to infiltrate into their computer network and obtain encrypted document from one of their servers. Our inside source has told us that the document is saved under the name of Private.doc.enc and is encrypted using OpenSSL encryption utility. Obtain the document and decrypt it to complete the mission.
Source: <a href="http://forums.hackingdojo.com/viewtopic.php?f=15&amp;t=486">http://forums.hackingdojo.com/viewtopic.php?f=15&amp;t=486</a>

****************************************************************************************************
Screenshot of Lab In A Box 1

<strong>The only pentesting course which gives you the access to the virtual penetration testing lab, where you can train your skills in a real-life situations.</strong>
The BackTrack Linux 5r2-PenTesting Edition lab is an all-in-one penetration testing lab environment that includes all of the hosts, network infrastructure, tools, and targets necessary to practice penetration testing. It includes:

A master (base) host utilizing BackTrack Linux 5r2
A DMZ network with two hosts (targets)
An “internal” network with one host (target)
A pre-configured firewall

This lab has some of the most popular penetration testing tools pre-installed and a number of vulnerabilities to discover and exploit. This all-in-one solution is the easiest and fastest method of building a full penetration testing lab environment for practicing your skills!
Source: <a href="http://pentestlab.org/lab-in-a-box/">http://pentestlab.org/lab-in-a-box/</a>

****************************************************************************************************
Screenshot of Kioptrix Level 1.3 (#4)

Again a long delay between VMs, but that cannot be helped. Work, family must come first. Blogs and hobbies are pushed down the list. These things aren’t as easy to make as one may think. Time and some planning must be put into these challenges, to make sure that:
<s>1. It’s possible to get root remotely</s> [ Edit: sorry not what I meant ]
1a. It’s possible to remotely compromise the machine
<ol>

Stays within the target audience of this site


Must be “realistic” (well kinda…)


Should serve as a refresher for me. Be it PHP or MySQL usage etc. Stuff I haven’t done in a while.

</ol>
I also had lots of troubles exporting this one. So please take the time to read my comments at the end of this post.
Keeping in the spirit of things, this challenge is a bit different than the others but remains in the realm of the easy. Repeating myself I know, but things must always be made clear:
These VMs are for the beginner. It’s a place to start.
I’d would love to code some small custom application for people to exploit. But I’m an administrator not a coder. It would take too much time to learn/code such an application. Not saying I’ll never try doing one, but I wouldn’t hold my breath. If someone wants more difficult challenges, I’m sure the Inter-tubes holds them somewhere.
Or you can always enroll in Offsec’s PWB course. <em>*shameless plug</em>
-- A few things I must say. I made this image using a new platform. Hoping everything works but I can’t test for everything. Initially the VM had troubles getting an IP on boot-up. For some reason the NIC wouldn’t go up and the machine was left with the loopback interface. I hope that I fixed the problem. Don’t be surprised if it takes a little moment for this one to boot up. It’s trying to get an IP. Be a bit patient.
Someone that tested the image for me also reported the VM hung once powered on. Upon restart all was fine. Just one person reported this, so hoping it’s not a major issue. If you plan on running this on vmFusion, you may need to convert the imagine to suit your fusion version.
-- Also adding the VHD file for download, for those using Hyper-V. You guys may need to change the network adapter to “Legacy Network Adapter”. I’ve test the file and this one seems to run fine for me…
If you’re having problems, or it’s not working for any reason email comms[=]kioptrix.com
Thanks to @shai_saint from www.n00bpentesting.com for the much needed testing with various VM solutions.
Thanks to Patrick from Hackfest.ca for also running the VM and reporting a few issues. And Swappage &amp; @Tallenz for doing the same. All help is appreciated guys 
So I hope you enjoy this one.
The Kioptrix Team
Source: <a href="http://www.kioptrix.com/blog/?p=604">http://www.kioptrix.com/blog/?p=604</a>

****************************************************************************************************
Screenshot of Kioptrix Level 1.2 (#3)

It's been a while since the last Kioptrix VM challenge. Life keeps getting the way of these things you know.
After the seeing the number of downloads for the last two, and the numerous videos showing ways to beat these challenges. I felt that 1.2 (or just level 3) needed to come out. Thank you to all that downloaded and played the first two. And thank you to the ones that took the time to produce video solutions of them. Greatly appreciated.
As with the other two, this challenge is geared towards the beginner. It is however different. Added a few more steps and a new skill set is required. Still being the realm of the beginner I must add. The same as the others, there’s more then one way to “pwn” this one. There’s easy and not so easy.
Remember… the sense of “easy” or “difficult” is always relative to ones own skill level. I never said these things were exceptionally hard or difficult, but we all need to start somewhere. And let me tell you, making these vulnerable VMs is not as easy as it looks…
<strong>Important</strong> thing with this challenge. Once you find the IP (DHCP Client) edit your hosts file and point it to <strong>kioptrix3.com</strong>
Under Windows, you would edit <em>C:\Windows\System32\drivers\etc\hosts</em> to look something like this:
<pre><code># localhost name resolution is handled within DNS itself.
#   127.0.0.1 localhost
#   ::1 localhost127.0.0.1 static3.cdn.ubi.com
192.168.1.102 kioptrix3.com
</code></pre>
Under Linux that would be <em>/etc/hosts</em>
There’s a web application involved, so to have everything nice and properly displayed you really need to this.
Hope you enjoy Kioptrix VM Level 1.2 challenge.
452 Megs
MD5 Hash : d324ffadd8e3efc1f96447eec51901f2
Have fun
Source: <a href="http://www.kioptrix.com/blog/?p=358">http://www.kioptrix.com/blog/?p=358</a>

****************************************************************************************************
Screenshot of Kioptrix Level 1.1 (#2)

<h2>Kioptrix VM Image Challenges:</h2>
This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player).
The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.
Source: <a href="http://www.kioptrix.com/blog/?page_id=135">http://www.kioptrix.com/blog/?page_id=135</a>
Source: <a href="http://www.kioptrix.com/blog/?p=49">http://www.kioptrix.com/blog/?p=49</a>
<strong>This is the second release of #2. First release had a bug in it with the web application</strong>
2012/Feb/09: Re-releases
2011/Feb/11: Original Release
<h4>Checksum</h4>

Original MD5: 987FFB98117BDEB6CA0AAC6EA22E755D
Original SHA1: 7A0EA0F414DFA0E05B7DF504F21B325C6D3CC53B
Re-release MD5: 987FFB98117BDEB6CA0AAC6EA22E755D
Re-release SHA1: 7A0EA0F414DFA0E05B7DF504F21B325C6D3CC53B


****************************************************************************************************
Screenshot of Kioptrix Level 1 (#1)

<h2>Kioptrix VM Image Challenges:</h2>
This Kioptrix VM Image are easy challenges. The object of the game is to acquire root access via any means possible (except actually hacking the VM server or player).
The purpose of these games are to learn the basic tools and techniques in vulnerability assessment and exploitation. There are more ways then one to successfully complete the challenges.
Source: <a href="http://www.kioptrix.com/blog/?page_id=135">http://www.kioptrix.com/blog/?page_id=135</a>
Source: <a href="http://www.kioptrix.com/blog/?p=49">http://www.kioptrix.com/blog/?p=49</a>

****************************************************************************************************
Screenshot of Holynix v2

Holynix is a Linux distribution that was deliberately built to have security holes for the purposes of penetration testing. If you're having trouble, or there are any problems, it can be discussed here.
Source: <a href="http://pynstrom.com/holynix.php">http://pynstrom.com/holynix.php</a>
<h2>-- README</h2>
<h4>Holynix 2.0 Release Notes</h4>
<hr/>
Holynix is an Linux distribution that was deliberately built to have security holes for the purposes of penetration testing.
The object of the challenge v1 is just to root the box.
Register on the forums to receive an email update when a new challenge is released.
<h4>Network Configuration</h4>
<hr/>
Holynix v2 is set with static ip and requires some network configuration in order to run.

Network: 192.168.1.0/24
Pool Starting Addr: 192.168.1.2
Gateway Addr: 192.168.1.1
Subnet Mask: 255.255.255.0

<h4>Support</h4>
<hr/>
Homepage: http://pynstrom.com/
Project Page: http://pynstrom.com/holynix.php
Forums: http://pynstrom.com/forum/
<h4>Bugs</h4>
<hr/>
Bugs can be reported using sourceforge's bug tracker located at http://sourceforge.net/projects/holynix/support or reported to me directly at <a class="__cf_email__" data-cfemail="0c7c75627f787e63614c7c75627f787e6361226f6361" href="/cdn-cgi/l/email-protection">[email protected]</a>
Source: holynix-v2.tar.bz2/README.txt
<h2>--Forum</h2>
<h4>Getting Started w/ Holynix v2</h4>
Source: <a href="http://pynstrom.com/forum/viewtopic.php?f=8&amp;t=7">http://pynstrom.com/forum/viewtopic.php?f=8&amp;t=7</a>

****************************************************************************************************
Screenshot of Holynix v1

Holynix is a Linux distribution that was deliberately built to have security holes for the purposes of penetration testing. If you're having trouble, or there are any problems, it can be discussed here.
Source: <a href="http://pynstrom.com/holynix.php">http://pynstrom.com/holynix.php</a>
<h2>-- README</h2>
<h4>Holynix 1.0 beta Release Notes</h4>
<hr/>
Similar to the de-ice and pWnOS pentest cds, Holynix is an ubuntu server vmware image that was deliberately built to have security holes for the purposes of penetration testing.
More of an obstacle course than a real world example.
The object of the challenge is to gain root level privileges and access to personal client information.
<h4>Support</h4>
<hr/>
Homepage: http://pynstrom.com/
Project Page: http://pynstrom.com/holynix.php
Forums: http://pynstrom.com/forum/
<h4>Bugs</h4>
<hr/>
Bugs or can be reported using sourceforge's bug tracker located at http://sourceforge.net/projects/holynix/support or reported to me directly at pynstrom AT pynstrom DOT com
Source: holynix-v1.tar.bz2/README.txt
<strong>README.txt wasn't updated with the release of the final version</strong>
<h2>-- Forum</h2>
<strong>Difference between beta and final</strong>

Set HD to non-persistant so any mistakes will be fixed at reboot.
Removed some trash I accidentally left laying around.

Source: <a href="http://pynstrom.com/forum/viewtopic.php?f=2&amp;t=5">http://pynstrom.com/forum/viewtopic.php?f=2&amp;t=5</a>
<h4>Getting Started w/ Holynix v1</h4>
Source: <a href="http://pynstrom.com/forum/viewtopic.php?f=6&amp;t=6">http://pynstrom.com/forum/viewtopic.php?f=6&amp;t=6</a>
<h2>-- Checksums</h2>
Beta MD5: D19306C6C2305005C72A7811D2B72B51
Beta SHA1: 0C5B7D37FECD39C52BC2C8C2EE66A617BB576A90
Final MD5: EBB8EF2544559D72A052687497F78341
Final SHA1: 967F3DB6D97CCC615EB5758AC75387D46C3D1199

****************************************************************************************************
Screenshot of Hackxor 1

<h2>About hackxor</h2>
Hackxor is a webapp hacking game where players must locate and exploit vulnerabilities to progress through the story. Think WebGoat but with a plot and a focus on realism&amp;difficulty. Contains XSS, CSRF, SQLi, ReDoS, DOR, command injection, etc 
Features:

Client attack simulation using HtmlUnit; no alert('xss') here.
Smooth difficulty gradient from moderately easy to fiendishly tricky.
Realistic vulnerabilities modelled from Google, Mozilla, etc (No rot13!)
Open ended play; progress by any means possible.

<h2>Download &amp; install instructions</h2>

Download the full version of hackxor (700mb)
Install VMWare Player (This involves creating a free account with vmware)
Extract hackxor1.7z, run the image using VMware player.
Work out what the IP of hackxor is ((try 172.16.93.129)|| logging into the VM with username:root pass:hackxor and typing ifconfig)
Configure your hosts file (/etc/hosts on linux) to redirect the following domains to the IP of hackxor: wraithmail, wraithbox, cloaknet, GGHB, hub71, utrack.
Browse to http://wraithmail:8080 and login with username:algo password:smurf

If you can't edit the hosts file for some reason, you could use the 'Override hostname resolution' option in Burp proxy 
<h2>Troubleshooting the installation:</h2>

If http://wraithmail:8080 loads everything is probably working.
First: Try 'nmap wraithmail' in a shell to see if port 8080 is open. If it is open, contact me! Otherwise:
Second: Try nmap <theipofhackxor>. If that succeeds, fix your hosts file. Otherwise:</theipofhackxor>
Third: If you really can't get any network contact with the VM, check the VM settings in the VM manager
(this does not involve logging into the virtual machine). Make sure it is set to NAT. If that doesn't fix it:
Fourth: Try changing the VM network setting to 'Bridged'. This will mean other people on the LAN can access it.
Fifth: If all else fails, contact me on twitter.

<h2>The scene</h2>
You play a professional blackhat hacker hired to track down another hacker by any means possible. Start by checking your email on wraithmail, and see how far down the rabbit hole you can get. The key websites in this game are http://wraithmail:8080 http://cloaknet:8080 http://gghb:8080 and http://hub71:8080 so if you don't feel like tracking down your target you may hack them in any order. Each website will be properly introduced through the plot.
<h2>Changes since 1.0</h2>

Fixed a potential-lose bug in hub71

<h2>Changes since the beta</h2>

Made cloaknet (second level) harder/better/more realistic
Added stealth ranking system
Fixed 2 unintentional XSS vulns in rentnet(hub71)
Enhanced rentnet(hub71) session security (You'll see)
Added online demo (first 2 levels)
Improved names/other fluff
Added clear ending
Made VM IP static-ish for easier installation
Made VM only accessible from the host machine by default
Linked sites together better
Added anti-bruteforce protection
Removed numerous bits of test code
Removed a few obscenities
Fixed some inaccuracies&amp;minor bugs

Source: <a href="http://hackxor.sourceforge.net/cgi-bin/index.pl">http://hackxor.sourceforge.net/cgi-bin/index.pl</a>

****************************************************************************************************
Screenshot of Hackademic RTB2

This is the second realistic hackademic challenge (root this box) by mr.pr0n
Download the target and get root.
After all, try to read the contents of the file 'key.txt' in the root directory.
Enjoy!
Source: <a href="https://ghostinthelab.wordpress.com/2011/09/06/hackademic-rtb2-%E2%80%93-root-this-box/">https://ghostinthelab.wordpress.com/2011/09/06/hackademic-rtb2-%E2%80%93-root-this-box/</a>

****************************************************************************************************
Screenshot of Hackademic RTB1

This is the first realistic hackademic challenge (root this box) by mr.pr0n
Download the target and get root.
After all, try to read the contents of the file 'key.txt' in the root directory.
Enjoy!
Source: <a href="http://ghostinthelab.wordpress.com/2011/09/06/hackademic-rtb1-root-this-box/">http://ghostinthelab.wordpress.com/2011/09/06/hackademic-rtb1-root-this-box/</a>

****************************************************************************************************
Screenshot of GameOver 1

<strong>Name</strong>: Game Over
<strong>Category</strong>: Web Pentest Learning Platform
<strong>File Type</strong>: VM image/iso
<strong>Author</strong>: Jovin Lobo
<strong>Mentor</strong>: Murtuja Bharmal
<strong>Download URL</strong>: http://sourceforge.net/projects/null-gameover/files
<strong>Default Credentials</strong>: [username:root / password:gameover]
<h4>Description:</h4>
Project GameOver was started with the objective of training and educating newbies about the basics of web security and educate them about the common web attacks and help them understand how they work. It is collection of various vulnerable web applications, designed for the purpose of learning web penetration testing.
GameOver has been broken down into two sections.
<strong>Section 1</strong> consists of special web applications that are designed especially to teach the basics of Web Security. This seciton will cover:

XSS
CSRF
RFI &amp; LFI
BruteForce Authentication
Directory/Path traversal
Command execution
SQL injection

<strong>Section 2</strong> is a collection of dileberately insecure Web applications. This section provides a legal platform to test your skills and to try and exploit the vulnerabilities and sharpen your skills before you pentest live sites. We would advice newbies to try and exploit these web applications. These applications provide real life environments and will boost their confidence.
Source: <a href="http://null.co.in/2012/06/14/gameover-web-pentest-learning-platform/">http://null.co.in/2012/06/14/gameover-web-pentest-learning-platform/</a>

****************************************************************************************************
Screenshot of Exploit-Exercises Fusion (v2)

<h4>About</h4>
Fusion is the next step from the protostar setup, and covers more advanced styles of exploitation, and covers a variety of anti-exploitation mechanisms such as:
+ Address Space Layout Randomisation
+ Position Independent Executables
+ Non-executable Memory
+ Source Code Fortification (_DFORTIFY_SOURCE=)
+ Stack Smashing Protection (ProPolice / SSP)
In addition to the above, there are a variety of other challenges and things to explore, such as:
+ Cryptographic issues
+ Timing attacks
+ Variety of network protocols (such as Protocol Buffers and Sun RPC)
+ At the end of Fusion, the participant will have a through understanding of exploit prevention strategies, associated weaknesses, various cryptographic weaknesses, numerous heap implementations.
<h4>Getting started</h4>
Have a look at the levels available on the side bar, and pick which ones interest you the most. If in doubt, begin at the start. You can log into the virtual machine with the username of "fusion" (without quotes), and password "godmode" (again, without quotes).
To get root for debugging purposes, do "sudo -s" with the password of "godmode".
Source: <a href="http://exploit-exercises.com/fusion">http://exploit-exercises.com/fusion</a>

****************************************************************************************************
Screenshot of Drunk Admin Web Hacking Challenge 1

<h4>Configuration</h4>
The network is configured to obtain an IP address via DHCP by default. Although if you want to further configure the virtual machine you can login as user root and password toor. The apache web server is configured to run on port 8880.
<h4>Mission</h4>
The challenge includes an image hosting web service that has various design vulnerabilities. You must enumerate the various web service features and find an exploitable vulnerability in order to read system hidden files. The web application is 100% custom so do not try to search google for relative PoC exploit code.
FINAL GOAL: Reveal the hidden message for a date arrange that Bob sent to Alice.
Source: <a href="https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/">https://bechtsoudis.com/work-stuff/challenges/drunk-admin-web-hacking-challenge/</a>

****************************************************************************************************
Screenshot of De-ICE S2.100 

<h2>--S2.100</h2>
<h4>SCENARIO</h4>
The scenario for this LiveCD is that you have been given an assignment to test a company's 192.168.2.xxx network to identify any vulnerabilities or exploits. The systems within this network are not critical systems and recent backups have been created and tested, so any damage you might cause is of little concern. The organization has had multiple system administrators manage the network over the last couple of years, and they are unsure of the competency previous (or current) staff2 
<h4>CONFIGURATIO</h4>
PenTest Lab Disk 2.100:
This LiveCD is configured with an IP address of 192.168.2.100 - no additional configuration is necessary. 
<h4>Pentest Machine:</h4>
Your second system will use the BackTrack (v.2) LiveCD as provided by remote-exploit.org. A copy of the LiveCD can be downloaded from remote-exploit.org. This disk is configured to obtain an IP address through DHCP - thus no additional configuration is required. All tools necessary to exploit Disk 2.100 can be found on the BackTrack Disk. No additional installations will be necessary. 
<h4>Router Configuration:</h4>
The PenTest Lab system and the PenTest machine must connect to a router that has been configured with the following values: 

DHCP Server: active 
Pool Starting Addr.: 192.168.2.2 

LAN TCP/IP:
+ IP Address: 192.168.2.1
+ IP Subnet Mask: 255.255.255.0
Source: <a href="http://forums.hackingdojo.com/viewtopic.php?f=18&amp;t=91">http://forums.hackingdojo.com/viewtopic.php?f=18&amp;t=91</a>
<h2>--Level 2</h2>
<h4>Where to get the current PenTest Lab Level 2 disks:</h4>
Disk 2.100 version 1.1:
http://heorot.net/instruction/tutorials/iso/de-ice.net-2.100-1.1.iso
<h4>Where to find the hash values of the disks:</h4>
http://heorot.net/instruction/tutorials/iso/iso_hashes
<h4>Where to get the BackTrack disk:</h4>
http://remote-exploit.org/backtrack_download.html
Warning: BackTrack v. 3 beta is known to NOT work. Please use version 2
<h4>Where to get the network configuration information:</h4>
Network configuration:
192.168.2.xxx = http://forums.heorot.net/viewtopic.php?f=18&amp;t=91
Source: <a href="http://forums.hackingdojo.com/viewtopic.php?f=18&amp;t=16">http://forums.hackingdojo.com/viewtopic.php?f=18&amp;t=16</a>

****************************************************************************************************
Screenshot of De-ICE S1.123 (Hackerdemia)

Where to get the current Hackerdemia PenTest Tool Tutorial disk: http://heorot.net/instruction/tutorials/iso/hackerdemia-1.1.0.iso
The MD5 Hash Values of Each Disk:
09e960360714df7879679dee72ce5733 ==&gt; hackerdemia-1.1.0.iso
How to start the disk:
Boot the LiveCD on a system within your pentest lab, which needs to be configured to be in the 192.168.xxx.xxx range.
Connect to http://192.168.1.123 using a web browser (preferably in BackTrack or your favorite pentest platform)
You will be presented with a web page, which is your tutorials. All hands-on examples were created with the Hackerdemia disk as the target, so your results should exactly match those found in the tutorials.
Where to get the BackTrack disk: http://remote-exploit.org/backtrack_download.html
Network configuration:
The LiveCD configures itself to an IP address of 192.168.1.123 by default. If you want to change it, simply log in as:
username: root
password: toor
...and change the ifconfig information (If you don't know what I'm talking about, go to: http://en.wikipedia.org/wiki/Ifconfig)
Source: <a href="http://forums.hackingdojo.com/">http://forums.hackingdojo.com/</a>

****************************************************************************************************
Screenshot of De-ICE S1.130

De-ICE are Penetration LiveCD images available from <a href="http://forum.heorot.net">http://forum.heorot.net</a> and provide scenarios where students can test their penetration testing skills and tools in a legal environment. 
Courtesy of student Cody M.

****************************************************************************************************
Screenshot of De-ICE S1.120

De-ICE are Penetration LiveCD images available from <a href="http://forum.heorot.net">http://forum.heorot.net</a> and provide scenarios where students can test their penetration testing skills and tools in a legal environment. 
Courtesy of student Chadwick B.


Process finished with exit code 0
